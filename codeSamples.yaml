overlay: 1.0.0
info:
  title: CodeSamples overlay for python target
  version: 0.0.0
actions:
  - target: $["paths"]["/v1/benefits/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/benefits/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.create(request={\n        \"type\": \"downloadables\",\n        \"description\": \"delightfully fumigate convection though zowie up bulky electronics\",\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        \"properties\": {\n            \"files\": [\n                \"<value>\",\n            ],\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/benefits/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.benefits.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/benefits/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/benefits/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.update(id=\"<value>\", request_body={\n        \"type\": \"meter_credit\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/benefits/{id}/grants"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.grants(id=\"<value>\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/checkout-links/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/checkout-links/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.create(request={\n        \"payment_processor\": \"stripe\",\n        \"allow_discount_codes\": True,\n        \"product_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkout-links/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.checkout_links.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/checkout-links/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkout-links/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.update(id=\"<value>\", checkout_link_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/checkouts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.create(request={\n        \"allow_discount_codes\": True,\n        \"customer_billing_address\": {\n            \"country\": \"SE\",\n        },\n        \"product_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.checkouts.client_get(client_secret=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.checkouts.client_update(client_secret=\"<value>\", checkout_update_public={\n        \"customer_billing_address\": {\n            \"country\": \"FR\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}/confirm"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.client_confirm(client_secret=\"<value>\", checkout_confirm_stripe={\n        \"customer_billing_address\": {\n            \"country\": \"FR\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.update(id=\"<value>\", checkout_update={\n        \"customer_billing_address\": {\n            \"country\": \"FR\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/custom-fields/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/custom-fields/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.create(request={\n        \"type\": \"number\",\n        \"slug\": \"<value>\",\n        \"name\": \"<value>\",\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        \"properties\": {},\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/custom-fields/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.custom_fields.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/custom-fields/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/custom-fields/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.update(id=\"<value>\", custom_field_update={\n        \"type\": \"text\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customer_meters.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customer_meters.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.benefit_grants.list(security=polar_sdk.CustomerPortalBenefitGrantsListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.benefit_grants.get(security=polar_sdk.CustomerPortalBenefitGrantsGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.benefit_grants.update(security=polar_sdk.CustomerPortalBenefitGrantsUpdateSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\", customer_benefit_grant_update={\n        \"benefit_type\": \"meter_credit\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.get(security=polar_sdk.CustomerPortalCustomersGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.update(security=polar_sdk.CustomerPortalCustomersUpdateSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), request={\n        \"billing_address\": {\n            \"country\": \"FR\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.get_payment_methods(security=polar_sdk.CustomerPortalCustomersGetPaymentMethodsSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ))\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.add_payment_method(security=polar_sdk.CustomerPortalCustomersAddPaymentMethodSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), request={\n        \"confirmation_token_id\": \"<id>\",\n        \"set_default\": False,\n        \"return_url\": \"https://slight-digestive.info\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    polar.customer_portal.customers.delete_payment_method(security=polar_sdk.CustomerPortalCustomersDeletePaymentMethodSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<id>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customer-portal/downloadables/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.downloadables.list(security=polar_sdk.CustomerPortalDownloadablesListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/downloadables/{token}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.downloadables.get(token=\"<value>\")\n\n    assert res is not None\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/license-keys/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.list(security=polar_sdk.CustomerPortalLicenseKeysListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/license-keys/activate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.activate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n        \"label\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/license-keys/deactivate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    polar.customer_portal.license_keys.deactivate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n        \"activation_id\": \"<value>\",\n    })\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customer-portal/license-keys/validate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.validate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.get(security=polar_sdk.CustomerPortalLicenseKeysGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customer_meters.list(security=polar_sdk.CustomerPortalCustomerMetersListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ))\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customer_meters.get(security=polar_sdk.CustomerPortalCustomerMetersGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.list(security=polar_sdk.CustomerPortalOrdersListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.get(security=polar_sdk.CustomerPortalOrdersGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.invoice(security=polar_sdk.CustomerPortalOrdersInvoiceSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/organizations/{slug}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customer_portal.organizations.get(slug=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.list(security=polar_sdk.CustomerPortalSubscriptionsListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.cancel(security=polar_sdk.CustomerPortalSubscriptionsCancelSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.get(security=polar_sdk.CustomerPortalSubscriptionsGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.update(security=polar_sdk.CustomerPortalSubscriptionsUpdateSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\", customer_subscription_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-sessions/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customer_sessions.create(request={\n        \"customer_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customers/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.create(request={\n        \"external_id\": \"usr_1337\",\n        \"email\": \"customer@example.com\",\n        \"name\": \"John Doe\",\n        \"billing_address\": {\n            \"country\": \"SE\",\n        },\n        \"tax_id\": [\n            \"FR61954506077\",\n            \"eu_vat\",\n        ],\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.customers.delete_external(external_id=\"<id>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customers/external/{external_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get_external(external_id=\"<id>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.update_external(external_id=\"<id>\", customer_update={\n        \"external_id\": \"usr_1337\",\n        \"email\": \"customer@example.com\",\n        \"name\": \"John Doe\",\n        \"billing_address\": {\n            \"country\": \"US\",\n        },\n        \"tax_id\": [\n            \"FR61954506077\",\n            \"eu_vat\",\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/external/{external_id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get_state_external(external_id=\"<id>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.customers.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customers/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.update(id=\"<value>\", customer_update={\n        \"external_id\": \"usr_1337\",\n        \"email\": \"customer@example.com\",\n        \"name\": \"John Doe\",\n        \"billing_address\": {\n            \"country\": \"FR\",\n        },\n        \"tax_id\": [\n            \"FR61954506077\",\n            \"eu_vat\",\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/{id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get_state(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/discounts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/discounts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.create(request={\n        \"duration\": polar_sdk.DiscountDuration.FOREVER,\n        \"duration_in_months\": 417458,\n        \"type\": polar_sdk.DiscountType.FIXED,\n        \"amount\": 69025,\n        \"currency\": \"usd\",\n        \"name\": \"<value>\",\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/discounts/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.discounts.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/discounts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/discounts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.update(id=\"<value>\", discount_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/events/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/events/ingest"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.ingest(request={\n        \"events\": [\n            {\n                \"name\": \"<value>\",\n                \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                \"customer_id\": \"<value>\",\n            },\n            {\n                \"name\": \"<value>\",\n                \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                \"external_customer_id\": \"<id>\",\n            },\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/events/names"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.list_names(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/events/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/files/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/files/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.create(request={\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        \"name\": \"<value>\",\n        \"mime_type\": \"<value>\",\n        \"size\": 638424,\n        \"upload\": {\n            \"parts\": [\n                {\n                    \"number\": 417458,\n                    \"chunk_start\": 134365,\n                    \"chunk_end\": 69025,\n                },\n            ],\n        },\n        \"service\": \"organization_avatar\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/files/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.files.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/files/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.update(id=\"<value>\", file_patch={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/files/{id}/uploaded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.uploaded(id=\"<value>\", file_upload_completed={\n        \"id\": \"<id>\",\n        \"path\": \"/sys\",\n        \"parts\": [\n            {\n                \"number\": 173116,\n                \"checksum_etag\": \"<value>\",\n                \"checksum_sha256_base64\": \"<value>\",\n            },\n            {\n                \"number\": 894030,\n                \"checksum_etag\": \"<value>\",\n                \"checksum_sha256_base64\": \"<value>\",\n            },\n            {\n                \"number\": 673715,\n                \"checksum_etag\": \"<value>\",\n                \"checksum_sha256_base64\": \"<value>\",\n            },\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/license-keys"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/license-keys/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.update(id=\"<value>\", license_key_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/license-keys/{id}/activations/{activation_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.get_activation(id=\"<value>\", activation_id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/meters/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.create(request={\n        \"name\": \"<value>\",\n        \"filter_\": {\n            \"conjunction\": polar_sdk.FilterConjunction.AND,\n            \"clauses\": [\n\n            ],\n        },\n        \"aggregation\": {\n            \"func\": polar_sdk.Func.SUM,\n            \"property\": \"<value>\",\n        },\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.update(id=\"<value>\", meter_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/{id}/quantities"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.quantities(id=\"<value>\", start_timestamp=dateutil.parser.isoparse(\"2023-09-17T00:45:34.608Z\"), end_timestamp=dateutil.parser.isoparse(\"2023-07-21T18:11:39.069Z\"), interval=polar_sdk.TimeInterval.HOUR)\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/metrics/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.metrics.get(start_date=dateutil.parser.parse(\"2025-02-06\").date(), end_date=dateutil.parser.parse(\"2024-09-04\").date(), interval=polar_sdk.TimeInterval.WEEK, organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/metrics/limits"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.metrics.limits()\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.clients.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/oauth2/authorize"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.authorize()\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/introspect"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.oauth2.introspect(request={\n        \"token\": \"<value>\",\n        \"client_id\": \"<id>\",\n        \"client_secret\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/register"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.clients.create(request={\n        \"redirect_uris\": [\n            \"https://inferior-chainstay.com\",\n        ],\n        \"client_name\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.clients.delete(client_id=\"<id>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.clients.get(client_id=\"<id>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["put"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.clients.update(client_id=\"<id>\", o_auth2_client_configuration_update={\n        \"redirect_uris\": [\n            \"https://grown-worth.name\",\n            \"https://worthwhile-avalanche.org/\",\n            \"https://general-digit.com/\",\n        ],\n        \"client_name\": \"<value>\",\n        \"client_id\": \"<id>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/revoke"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.oauth2.revoke(request={\n        \"token\": \"<value>\",\n        \"client_id\": \"<id>\",\n        \"client_secret\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/token"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.oauth2.token(request={\n        \"grant_type\": \"authorization_code\",\n        \"client_id\": \"<id>\",\n        \"client_secret\": \"<value>\",\n        \"code\": \"<value>\",\n        \"redirect_uri\": \"https://old-fort.name\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/userinfo"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.userinfo()\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.orders.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.orders.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.orders.invoice(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/organizations/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/organizations/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.create(request={\n        \"name\": \"<value>\",\n        \"slug\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/organizations/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.get(id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/organizations/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.update(id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", organization_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/products/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.create(request={\n        \"name\": \"<value>\",\n        \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n        \"prices\": [\n            {\n                \"amount_type\": \"custom\",\n                \"price_currency\": \"usd\",\n            },\n            {\n                \"amount_type\": \"free\",\n            },\n        ],\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.update(id=\"<value>\", product_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/{id}/benefits"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.update_benefits(id=\"<value>\", product_benefits_update={\n        \"benefits\": [\n            \"<value>\",\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/refunds/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.refunds.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/refunds/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.refunds.create(request={\n        \"order_id\": \"<value>\",\n        \"reason\": polar_sdk.RefundReason.CUSTOMER_REQUEST,\n        \"amount\": 638424,\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/subscriptions/export"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.export(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.revoke(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.update(id=\"<value>\", subscription_update={\n        \"revoke\": True,\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_created_post(request={\n        \"type\": \"benefit.created\",\n        \"data\": {\n            \"id\": \"<value>\",\n            \"created_at\": dateutil.parser.isoparse(\"2023-04-15T11:45:18.891Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2025-06-17T12:04:55.002Z\"),\n            \"metadata\": {\n                \"key\": \"<value>\",\n            },\n            \"type\": \"license_keys\",\n            \"description\": \"unless barring heartbeat narrate weight task rarely\",\n            \"selectable\": False,\n            \"deletable\": False,\n            \"organization_id\": \"<value>\",\n            \"properties\": {\n                \"prefix\": \"<value>\",\n                \"expires\": {\n                    \"ttl\": 404687,\n                    \"timeframe\": polar_sdk.Timeframe.YEAR,\n                },\n                \"activations\": {\n                    \"limit\": 247086,\n                    \"enable_customer_admin\": False,\n                },\n                \"limit_usage\": 207712,\n            },\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_updated_post(request={\n        \"type\": \"benefit.updated\",\n        \"data\": {\n            \"id\": \"<value>\",\n            \"created_at\": dateutil.parser.isoparse(\"2025-11-19T14:31:03.333Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2023-08-21T02:54:25.671Z\"),\n            \"metadata\": {\n                \"key\": False,\n            },\n            \"type\": \"downloadables\",\n            \"description\": \"ha gee inasmuch vague grizzled wherever bah\",\n            \"selectable\": False,\n            \"deletable\": False,\n            \"organization_id\": \"<value>\",\n            \"properties\": {\n                \"archived\": {\n                    \"key\": False,\n                },\n                \"files\": [\n                    \"<value>\",\n                ],\n            },\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_created_post(request=polar_sdk.WebhookBenefitGrantCreatedPayload(\n        data=polar_sdk.BenefitGrantWebhook(\n            created_at=dateutil.parser.isoparse(\"2025-01-04T13:03:27.870Z\"),\n            modified_at=dateutil.parser.isoparse(\"2023-05-08T00:47:14.556Z\"),\n            id=\"<value>\",\n            is_granted=True,\n            is_revoked=False,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            user_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer=polar_sdk.Customer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2025-08-25T12:22:42.430Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-03-03T22:39:55.256Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"SE\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2023-04-05T03:50:05.028Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            properties=polar_sdk.BenefitGrantDiscordProperties(),\n            benefit=polar_sdk.BenefitLicenseKeys(\n                id=\"<value>\",\n                created_at=dateutil.parser.isoparse(\"2023-05-08T00:47:14.556Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-02-20T12:28:33.166Z\"),\n                metadata={\n                    \"key\": 8827.7,\n                },\n                description=\"beneath agitated out\",\n                selectable=False,\n                deletable=False,\n                organization_id=\"<value>\",\n                properties=polar_sdk.BenefitLicenseKeysProperties(\n                    prefix=\"<value>\",\n                    expires=polar_sdk.BenefitLicenseKeyExpirationProperties(\n                        ttl=341637,\n                        timeframe=polar_sdk.Timeframe.DAY,\n                    ),\n                    activations=polar_sdk.BenefitLicenseKeyActivationProperties(\n                        limit=409617,\n                        enable_customer_admin=False,\n                    ),\n                    limit_usage=157250,\n                ),\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.cycled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_cycled_post(request=polar_sdk.WebhookBenefitGrantCycledPayload(\n        data=polar_sdk.BenefitGrantWebhook(\n            created_at=dateutil.parser.isoparse(\"2024-09-17T22:29:23.174Z\"),\n            modified_at=dateutil.parser.isoparse(\"2025-06-14T11:07:13.305Z\"),\n            id=\"<value>\",\n            is_granted=False,\n            is_revoked=True,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            user_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer=polar_sdk.Customer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2024-11-28T04:36:34.627Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-12-06T09:05:10.912Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"FR61954506077\",\n                    \"eu_vat\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2025-10-18T02:05:35.631Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            properties=polar_sdk.BenefitGrantDiscordProperties(),\n            benefit=polar_sdk.BenefitDownloadables(\n                id=\"<value>\",\n                created_at=dateutil.parser.isoparse(\"2025-06-14T11:07:13.305Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-10-15T03:09:38.180Z\"),\n                metadata={\n                    \"key\": \"<value>\",\n                },\n                description=\"as oof colon whoever lanky wearily woefully unabashedly\",\n                selectable=False,\n                deletable=False,\n                organization_id=\"<value>\",\n                properties=polar_sdk.BenefitDownloadablesProperties(\n                    archived={\n                        \"key\": False,\n                    },\n                    files=[\n                        \"<value>\",\n                    ],\n                ),\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_revoked_post(request=polar_sdk.WebhookBenefitGrantRevokedPayload(\n        data=polar_sdk.BenefitGrantWebhook(\n            created_at=dateutil.parser.isoparse(\"2025-03-12T10:35:36.881Z\"),\n            modified_at=dateutil.parser.isoparse(\"2025-04-12T13:10:16.426Z\"),\n            id=\"<value>\",\n            is_granted=True,\n            is_revoked=False,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            user_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer=polar_sdk.Customer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2025-03-29T21:56:48.008Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-07-18T16:16:40.562Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"FR\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2024-11-01T21:51:36.732Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            properties=polar_sdk.BenefitGrantDiscordProperties(),\n            benefit=polar_sdk.BenefitLicenseKeys(\n                id=\"<value>\",\n                created_at=dateutil.parser.isoparse(\"2025-04-12T13:10:16.426Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-03-08T05:20:11.943Z\"),\n                metadata={\n                    \"key\": False,\n                },\n                description=\"that decouple uh-huh geez wedge or oh ah\",\n                selectable=False,\n                deletable=False,\n                organization_id=\"<value>\",\n                properties=polar_sdk.BenefitLicenseKeysProperties(\n                    prefix=\"<value>\",\n                    expires=polar_sdk.BenefitLicenseKeyExpirationProperties(\n                        ttl=935243,\n                        timeframe=polar_sdk.Timeframe.MONTH,\n                    ),\n                    activations=polar_sdk.BenefitLicenseKeyActivationProperties(\n                        limit=287527,\n                        enable_customer_admin=False,\n                    ),\n                    limit_usage=262329,\n                ),\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_updated_post(request=polar_sdk.WebhookBenefitGrantUpdatedPayload(\n        data=polar_sdk.BenefitGrantWebhook(\n            created_at=dateutil.parser.isoparse(\"2025-01-02T13:54:42.243Z\"),\n            modified_at=dateutil.parser.isoparse(\"2024-02-25T11:58:59.486Z\"),\n            id=\"<value>\",\n            is_granted=False,\n            is_revoked=False,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            user_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer=polar_sdk.Customer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2025-08-08T07:44:28.757Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-08-31T04:19:19.970Z\"),\n                metadata={\n                    \"key\": \"<value>\",\n                    \"key1\": 5493.71,\n                    \"key2\": 5023.5,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"FR\",\n                ),\n                tax_id=[\n                    \"FR61954506077\",\n                    \"eu_vat\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2024-07-15T16:39:59.264Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            properties=polar_sdk.BenefitGrantDiscordProperties(),\n            benefit=polar_sdk.BenefitLicenseKeys(\n                id=\"<value>\",\n                created_at=dateutil.parser.isoparse(\"2024-02-25T11:58:59.486Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-04-04T12:08:04.168Z\"),\n                metadata={\n                    \"key\": 8670.83,\n                },\n                description=\"uneven near access collaboration ascertain draft hearten\",\n                selectable=False,\n                deletable=False,\n                organization_id=\"<value>\",\n                properties=polar_sdk.BenefitLicenseKeysProperties(\n                    prefix=\"<value>\",\n                    expires=polar_sdk.BenefitLicenseKeyExpirationProperties(\n                        ttl=295110,\n                        timeframe=polar_sdk.Timeframe.DAY,\n                    ),\n                    activations=polar_sdk.BenefitLicenseKeyActivationProperties(\n                        limit=552103,\n                        enable_customer_admin=False,\n                    ),\n                    limit_usage=884885,\n                ),\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["checkout.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcheckout_created_post(request=polar_sdk.WebhookCheckoutCreatedPayload(\n        data=polar_sdk.Checkout(\n            created_at=dateutil.parser.isoparse(\"2025-11-12T14:26:42.882Z\"),\n            modified_at=dateutil.parser.isoparse(\"2024-05-27T05:08:06.235Z\"),\n            id=\"<value>\",\n            payment_processor=polar_sdk.PaymentProcessor.STRIPE,\n            status=polar_sdk.CheckoutStatus.FAILED,\n            client_secret=\"<value>\",\n            url=\"https://heavy-beret.com/\",\n            expires_at=dateutil.parser.isoparse(\"2023-02-25T02:26:48.460Z\"),\n            success_url=\"https://sardonic-final.info/\",\n            embed_origin=\"<value>\",\n            amount=962818,\n            discount_amount=6400,\n            net_amount=426090,\n            tax_amount=648726,\n            total_amount=210702,\n            currency=\"Riel\",\n            product_id=\"<value>\",\n            product_price_id=\"<value>\",\n            discount_id=\"<value>\",\n            allow_discount_codes=False,\n            is_discount_applicable=False,\n            is_free_product_price=False,\n            is_payment_required=False,\n            is_payment_setup_required=False,\n            is_payment_form_required=False,\n            customer_id=\"<value>\",\n            customer_name=\"<value>\",\n            customer_email=\"<value>\",\n            customer_ip_address=\"<value>\",\n            customer_billing_address=polar_sdk.Address(\n                country=\"FR\",\n            ),\n            customer_tax_id=\"<id>\",\n            payment_processor_metadata={\n                \"key\": \"<value>\",\n            },\n            subtotal_amount=219352,\n            metadata={\n                \"key\": 366960,\n                \"key1\": False,\n            },\n            customer_external_id=\"<id>\",\n            products=[\n                polar_sdk.CheckoutProduct(\n                    created_at=dateutil.parser.isoparse(\"2023-01-21T11:17:02.173Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-08-14T19:11:10.463Z\"),\n                    id=\"<value>\",\n                    name=\"<value>\",\n                    description=\"accessorise ack pave\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    is_recurring=False,\n                    is_archived=False,\n                    organization_id=\"<value>\",\n                    prices=[\n                        polar_sdk.LegacyRecurringProductPriceFree(\n                            created_at=dateutil.parser.isoparse(\"2023-11-17T00:11:23.972Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2024-02-03T11:05:02.671Z\"),\n                            id=\"<value>\",\n                            is_archived=False,\n                            product_id=\"<value>\",\n                            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        ),\n                        polar_sdk.LegacyRecurringProductPriceCustom(\n                            created_at=dateutil.parser.isoparse(\"2024-06-03T08:42:54.736Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2025-02-14T09:22:19.644Z\"),\n                            id=\"<value>\",\n                            is_archived=False,\n                            product_id=\"<value>\",\n                            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                            price_currency=\"<value>\",\n                            minimum_amount=417896,\n                            maximum_amount=962818,\n                            preset_amount=6400,\n                        ),\n                    ],\n                    benefits=[\n\n                    ],\n                    medias=[\n                        polar_sdk.ProductMediaFileRead(\n                            id=\"<value>\",\n                            organization_id=\"<value>\",\n                            name=\"<value>\",\n                            path=\"/media\",\n                            mime_type=\"<value>\",\n                            size=757308,\n                            storage_version=\"<value>\",\n                            checksum_etag=\"<value>\",\n                            checksum_sha256_base64=\"<value>\",\n                            checksum_sha256_hex=\"<value>\",\n                            last_modified_at=dateutil.parser.isoparse(\"2024-07-16T16:32:06.101Z\"),\n                            version=\"<value>\",\n                            is_uploaded=False,\n                            created_at=dateutil.parser.isoparse(\"2025-12-08T10:05:37.208Z\"),\n                            size_readable=\"<value>\",\n                            public_url=\"https://separate-pinstripe.com\",\n                        ),\n                    ],\n                ),\n            ],\n            product=polar_sdk.CheckoutProduct(\n                created_at=dateutil.parser.isoparse(\"2025-08-22T02:17:20.661Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-09-12T19:41:14.261Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"darling lined nephew crank\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=True,\n                is_archived=False,\n                organization_id=\"<value>\",\n                prices=[\n\n                ],\n                benefits=[\n                    polar_sdk.BenefitBase(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2025-11-18T07:12:26.749Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-08-14T14:29:29.201Z\"),\n                        metadata={\n                            \"key\": 9257.57,\n                        },\n                        type=polar_sdk.BenefitType.LICENSE_KEYS,\n                        description=\"underpants fund ethical tune-up kindly politely\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                    ),\n                    polar_sdk.BenefitBase(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2023-11-25T09:31:17.263Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-11-07T16:19:41.246Z\"),\n                        metadata={\n\n                        },\n                        type=polar_sdk.BenefitType.METER_CREDIT,\n                        description=\"aha quickly unusual brr against secrecy masticate wordy\",\n                        selectable=True,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                    ),\n                    polar_sdk.BenefitBase(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2024-05-19T20:00:25.150Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-02-11T20:15:55.821Z\"),\n                        metadata={\n\n                        },\n                        type=polar_sdk.BenefitType.DISCORD,\n                        description=\"screw lift lazy ha regarding pupil\",\n                        selectable=True,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                    ),\n                ],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/usr/sbin\",\n                        mime_type=\"<value>\",\n                        size=229102,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2025-12-30T17:25:31.182Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=dateutil.parser.isoparse(\"2024-07-18T17:01:45.899Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://jealous-underneath.info/\",\n                    ),\n                ],\n            ),\n            product_price=polar_sdk.LegacyRecurringProductPriceFixed(\n                created_at=dateutil.parser.isoparse(\"2023-08-19T22:18:44.316Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-04-28T23:39:10.699Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                price_currency=\"<value>\",\n                price_amount=598949,\n            ),\n            discount=polar_sdk.CheckoutDiscountFixedRepeatDuration(\n                duration=polar_sdk.DiscountDuration.REPEATING,\n                duration_in_months=472727,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                amount=227725,\n                currency=\"Egyptian Pound\",\n                id=\"<value>\",\n                name=\"<value>\",\n                code=\"<value>\",\n            ),\n            subscription_id=\"<value>\",\n            attached_custom_fields=[\n                polar_sdk.AttachedCustomField(\n                    custom_field_id=\"<value>\",\n                    custom_field=polar_sdk.CustomFieldNumber(\n                        created_at=dateutil.parser.isoparse(\"2025-01-24T18:08:49.597Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-07-22T12:18:02.066Z\"),\n                        id=\"<value>\",\n                        metadata={\n                            \"key\": False,\n                        },\n                        slug=\"<value>\",\n                        name=\"<value>\",\n                        organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        properties=polar_sdk.CustomFieldNumberProperties(),\n                    ),\n                    order=343582,\n                    required=False,\n                ),\n                polar_sdk.AttachedCustomField(\n                    custom_field_id=\"<value>\",\n                    custom_field=polar_sdk.CustomFieldText(\n                        created_at=dateutil.parser.isoparse(\"2023-11-12T09:40:10.044Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-08-29T09:50:00.241Z\"),\n                        id=\"<value>\",\n                        metadata={\n                            \"key\": 3852.18,\n                        },\n                        slug=\"<value>\",\n                        name=\"<value>\",\n                        organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        properties=polar_sdk.CustomFieldTextProperties(),\n                    ),\n                    order=886408,\n                    required=False,\n                ),\n            ],\n            customer_metadata={\n                \"key\": 488063,\n                \"key1\": True,\n            },\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["checkout.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcheckout_updated_post(request=polar_sdk.WebhookCheckoutUpdatedPayload(\n        data=polar_sdk.Checkout(\n            created_at=dateutil.parser.isoparse(\"2025-10-04T13:06:10.658Z\"),\n            modified_at=dateutil.parser.isoparse(\"2024-10-02T21:25:15.366Z\"),\n            id=\"<value>\",\n            payment_processor=polar_sdk.PaymentProcessor.STRIPE,\n            status=polar_sdk.CheckoutStatus.FAILED,\n            client_secret=\"<value>\",\n            url=\"https://square-cafe.biz/\",\n            expires_at=dateutil.parser.isoparse(\"2025-03-25T08:55:11.873Z\"),\n            success_url=\"https://physical-import.name/\",\n            embed_origin=\"<value>\",\n            amount=245418,\n            discount_amount=624213,\n            net_amount=615580,\n            tax_amount=24587,\n            total_amount=447013,\n            currency=\"New Israeli Sheqel\",\n            product_id=\"<value>\",\n            product_price_id=\"<value>\",\n            discount_id=\"<value>\",\n            allow_discount_codes=True,\n            is_discount_applicable=True,\n            is_free_product_price=False,\n            is_payment_required=False,\n            is_payment_setup_required=True,\n            is_payment_form_required=False,\n            customer_id=\"<value>\",\n            customer_name=\"<value>\",\n            customer_email=\"<value>\",\n            customer_ip_address=\"<value>\",\n            customer_billing_address=polar_sdk.Address(\n                country=\"SE\",\n            ),\n            customer_tax_id=\"<id>\",\n            payment_processor_metadata={\n\n            },\n            subtotal_amount=752191,\n            metadata={\n                \"key\": 879426,\n            },\n            customer_external_id=\"<id>\",\n            products=[\n                polar_sdk.CheckoutProduct(\n                    created_at=dateutil.parser.isoparse(\"2023-07-11T15:52:54.020Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-01-24T14:28:29.444Z\"),\n                    id=\"<value>\",\n                    name=\"<value>\",\n                    description=\"sashay thankfully overreact yum before overspend red bitter recklessly along\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    is_recurring=True,\n                    is_archived=False,\n                    organization_id=\"<value>\",\n                    prices=[\n                        polar_sdk.ProductPriceFree(\n                            created_at=dateutil.parser.isoparse(\"2025-10-20T04:48:05.954Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2024-03-12T21:45:21.173Z\"),\n                            id=\"<value>\",\n                            is_archived=False,\n                            product_id=\"<value>\",\n                            type=polar_sdk.ProductPriceType.RECURRING,\n                            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        ),\n                        polar_sdk.LegacyRecurringProductPriceFree(\n                            created_at=dateutil.parser.isoparse(\"2023-12-02T12:51:00.416Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2024-10-28T13:46:29.597Z\"),\n                            id=\"<value>\",\n                            is_archived=False,\n                            product_id=\"<value>\",\n                            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        ),\n                    ],\n                    benefits=[\n                        polar_sdk.BenefitBase(\n                            id=\"<value>\",\n                            created_at=dateutil.parser.isoparse(\"2024-03-31T06:14:16.097Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2023-08-22T12:21:49.089Z\"),\n                            metadata={\n                                \"key\": True,\n                                \"key1\": True,\n                            },\n                            type=polar_sdk.BenefitType.GITHUB_REPOSITORY,\n                            description=\"joyfully whether until ouch wholly petticoat\",\n                            selectable=False,\n                            deletable=True,\n                            organization_id=\"<value>\",\n                        ),\n                    ],\n                    medias=[\n                        polar_sdk.ProductMediaFileRead(\n                            id=\"<value>\",\n                            organization_id=\"<value>\",\n                            name=\"<value>\",\n                            path=\"/boot\",\n                            mime_type=\"<value>\",\n                            size=652142,\n                            storage_version=\"<value>\",\n                            checksum_etag=\"<value>\",\n                            checksum_sha256_base64=\"<value>\",\n                            checksum_sha256_hex=\"<value>\",\n                            last_modified_at=dateutil.parser.isoparse(\"2024-05-22T21:40:49.309Z\"),\n                            version=\"<value>\",\n                            is_uploaded=False,\n                            created_at=dateutil.parser.isoparse(\"2023-01-26T11:43:21.966Z\"),\n                            size_readable=\"<value>\",\n                            public_url=\"https://incomplete-bump.org/\",\n                        ),\n                    ],\n                ),\n            ],\n            product=polar_sdk.CheckoutProduct(\n                created_at=dateutil.parser.isoparse(\"2024-09-11T05:29:24.606Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-08-18T15:02:26.640Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"frightened enfold colorfully\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=True,\n                is_archived=False,\n                organization_id=\"<value>\",\n                prices=[\n\n                ],\n                benefits=[\n                    polar_sdk.BenefitBase(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2024-01-15T18:22:33.094Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-11-11T01:37:51.103Z\"),\n                        metadata={\n                            \"key\": 649165,\n                        },\n                        type=polar_sdk.BenefitType.METER_CREDIT,\n                        description=\"abaft rebuff diversity until numb after abscond aha finally inasmuch\",\n                        selectable=True,\n                        deletable=True,\n                        organization_id=\"<value>\",\n                    ),\n                    polar_sdk.BenefitBase(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2025-06-12T09:37:30.671Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-06-30T13:40:54.950Z\"),\n                        metadata={\n                            \"key\": \"<value>\",\n                        },\n                        type=polar_sdk.BenefitType.METER_CREDIT,\n                        description=\"independence celsius ouch rarely\",\n                        selectable=True,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                    ),\n                    polar_sdk.BenefitBase(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2025-05-18T23:02:34.459Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-01-29T14:45:50.822Z\"),\n                        metadata={\n                            \"key\": 6044.54,\n                            \"key1\": 16598,\n                            \"key2\": 607983,\n                        },\n                        type=polar_sdk.BenefitType.LICENSE_KEYS,\n                        description=\"phew unless pfft stall scale scented own though mentor\",\n                        selectable=False,\n                        deletable=True,\n                        organization_id=\"<value>\",\n                    ),\n                ],\n                medias=[\n\n                ],\n            ),\n            product_price=polar_sdk.ProductPriceFixed(\n                created_at=dateutil.parser.isoparse(\"2024-11-15T03:18:06.755Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-11-05T16:13:01.569Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                type=polar_sdk.ProductPriceType.ONE_TIME,\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                price_currency=\"<value>\",\n                price_amount=371362,\n            ),\n            discount=polar_sdk.CheckoutDiscountPercentageRepeatDuration(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                duration_in_months=66650,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                basis_points=505472,\n                id=\"<value>\",\n                name=\"<value>\",\n                code=\"<value>\",\n            ),\n            subscription_id=\"<value>\",\n            attached_custom_fields=[\n                polar_sdk.AttachedCustomField(\n                    custom_field_id=\"<value>\",\n                    custom_field=polar_sdk.CustomFieldNumber(\n                        created_at=dateutil.parser.isoparse(\"2023-09-21T13:33:23.592Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-08-02T14:33:19.677Z\"),\n                        id=\"<value>\",\n                        metadata={\n                            \"key\": 2260.88,\n                        },\n                        slug=\"<value>\",\n                        name=\"<value>\",\n                        organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        properties=polar_sdk.CustomFieldNumberProperties(),\n                    ),\n                    order=421262,\n                    required=False,\n                ),\n                polar_sdk.AttachedCustomField(\n                    custom_field_id=\"<value>\",\n                    custom_field=polar_sdk.CustomFieldText(\n                        created_at=dateutil.parser.isoparse(\"2024-05-20T07:44:41.798Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-05-28T03:09:46.401Z\"),\n                        id=\"<value>\",\n                        metadata={\n                            \"key\": False,\n                        },\n                        slug=\"<value>\",\n                        name=\"<value>\",\n                        organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        properties=polar_sdk.CustomFieldTextProperties(),\n                    ),\n                    order=9641,\n                    required=True,\n                ),\n            ],\n            customer_metadata={\n                \"key\": 396660,\n                \"key1\": \"<value>\",\n            },\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["customer.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcustomer_created_post(request={\n        \"type\": \"customer.created\",\n        \"data\": {\n            \"id\": \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n            \"created_at\": dateutil.parser.isoparse(\"2023-11-05T00:02:45.979Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2025-11-25T19:38:56.737Z\"),\n            \"metadata\": {\n                \"key\": True,\n            },\n            \"external_id\": \"usr_1337\",\n            \"email\": \"customer@example.com\",\n            \"email_verified\": True,\n            \"name\": \"John Doe\",\n            \"billing_address\": {\n                \"country\": \"SE\",\n            },\n            \"tax_id\": [\n                \"FR61954506077\",\n                \"eu_vat\",\n            ],\n            \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"deleted_at\": dateutil.parser.isoparse(\"2024-12-23T01:13:50.641Z\"),\n            \"avatar_url\": \"https://www.gravatar.com/avatar/xxx?d=blank\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["customer.deleted"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcustomer_deleted_post(request={\n        \"type\": \"customer.deleted\",\n        \"data\": {\n            \"id\": \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n            \"created_at\": dateutil.parser.isoparse(\"2023-07-23T22:06:15.045Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2025-04-24T07:05:50.504Z\"),\n            \"metadata\": {\n                \"key\": \"<value>\",\n            },\n            \"external_id\": \"usr_1337\",\n            \"email\": \"customer@example.com\",\n            \"email_verified\": True,\n            \"name\": \"John Doe\",\n            \"billing_address\": {\n                \"country\": \"US\",\n            },\n            \"tax_id\": [\n                \"FR61954506077\",\n                \"eu_vat\",\n            ],\n            \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"deleted_at\": dateutil.parser.isoparse(\"2024-05-11T04:45:12.206Z\"),\n            \"avatar_url\": \"https://www.gravatar.com/avatar/xxx?d=blank\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["customer.state_changed"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcustomer_state_changed_post(request={\n        \"type\": \"customer.state_changed\",\n        \"data\": {\n            \"id\": \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n            \"created_at\": dateutil.parser.isoparse(\"2024-04-26T07:11:39.517Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2023-06-21T11:54:36.368Z\"),\n            \"metadata\": {\n                \"key\": 6612.66,\n                \"key1\": 162534,\n            },\n            \"external_id\": \"usr_1337\",\n            \"email\": \"customer@example.com\",\n            \"email_verified\": True,\n            \"name\": \"John Doe\",\n            \"billing_address\": {\n                \"country\": \"US\",\n            },\n            \"tax_id\": [\n                \"FR61954506077\",\n                \"eu_vat\",\n            ],\n            \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"deleted_at\": dateutil.parser.isoparse(\"2025-11-01T16:24:29.890Z\"),\n            \"active_subscriptions\": [\n                {\n                    \"id\": \"e5149aae-e521-42b9-b24c-abb3d71eea2e\",\n                    \"created_at\": dateutil.parser.isoparse(\"2025-12-23T00:00:00.457Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2024-03-19T21:14:46.825Z\"),\n                    \"metadata\": {\n\n                    },\n                    \"status\": \"active\",\n                    \"amount\": 1000,\n                    \"currency\": \"usd\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    \"current_period_start\": dateutil.parser.isoparse(\"2025-02-03T13:37:00Z\"),\n                    \"current_period_end\": dateutil.parser.isoparse(\"2025-03-03T13:37:00Z\"),\n                    \"cancel_at_period_end\": False,\n                    \"canceled_at\": None,\n                    \"started_at\": dateutil.parser.isoparse(\"2025-01-03T13:37:00Z\"),\n                    \"ends_at\": None,\n                    \"product_id\": \"d8dd2de1-21b7-4a41-8bc3-ce909c0cfe23\",\n                    \"discount_id\": None,\n                    \"price_id\": \"196ca717-4d84-4d28-a1b8-777255797dbc\",\n                    \"meters\": [\n                        {\n                            \"created_at\": dateutil.parser.isoparse(\"2025-06-03T23:57:08.417Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2025-07-31T05:42:27.761Z\"),\n                            \"id\": \"<value>\",\n                            \"consumed_units\": 25,\n                            \"credited_units\": 100,\n                            \"amount\": 0,\n                            \"meter_id\": \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                        },\n                        {\n                            \"created_at\": dateutil.parser.isoparse(\"2024-07-04T21:55:47.759Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2025-09-17T10:53:45.757Z\"),\n                            \"id\": \"<value>\",\n                            \"consumed_units\": 25,\n                            \"credited_units\": 100,\n                            \"amount\": 0,\n                            \"meter_id\": \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                        },\n                        {\n                            \"created_at\": dateutil.parser.isoparse(\"2024-04-19T12:37:55.806Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2025-02-24T12:54:31.112Z\"),\n                            \"id\": \"<value>\",\n                            \"consumed_units\": 25,\n                            \"credited_units\": 100,\n                            \"amount\": 0,\n                            \"meter_id\": \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                        },\n                    ],\n                },\n                {\n                    \"id\": \"e5149aae-e521-42b9-b24c-abb3d71eea2e\",\n                    \"created_at\": dateutil.parser.isoparse(\"2025-07-09T06:32:19.884Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2024-02-15T21:51:13.048Z\"),\n                    \"metadata\": {\n\n                    },\n                    \"status\": \"active\",\n                    \"amount\": 1000,\n                    \"currency\": \"usd\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    \"current_period_start\": dateutil.parser.isoparse(\"2025-02-03T13:37:00Z\"),\n                    \"current_period_end\": dateutil.parser.isoparse(\"2025-03-03T13:37:00Z\"),\n                    \"cancel_at_period_end\": False,\n                    \"canceled_at\": None,\n                    \"started_at\": dateutil.parser.isoparse(\"2025-01-03T13:37:00Z\"),\n                    \"ends_at\": None,\n                    \"product_id\": \"d8dd2de1-21b7-4a41-8bc3-ce909c0cfe23\",\n                    \"discount_id\": None,\n                    \"price_id\": \"196ca717-4d84-4d28-a1b8-777255797dbc\",\n                    \"meters\": [\n                        {\n                            \"created_at\": dateutil.parser.isoparse(\"2024-05-21T10:11:40.885Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2024-05-01T05:59:19.269Z\"),\n                            \"id\": \"<value>\",\n                            \"consumed_units\": 25,\n                            \"credited_units\": 100,\n                            \"amount\": 0,\n                            \"meter_id\": \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                        },\n                        {\n                            \"created_at\": dateutil.parser.isoparse(\"2023-11-21T13:12:44.218Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2023-02-15T23:19:28.506Z\"),\n                            \"id\": \"<value>\",\n                            \"consumed_units\": 25,\n                            \"credited_units\": 100,\n                            \"amount\": 0,\n                            \"meter_id\": \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                        },\n                    ],\n                },\n            ],\n            \"granted_benefits\": [\n                {\n                    \"id\": \"d322132c-a9d0-4e0d-b8d3-d81ad021a3a9\",\n                    \"created_at\": dateutil.parser.isoparse(\"2024-01-06T17:05:41.501Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2024-06-15T05:38:38.765Z\"),\n                    \"granted_at\": dateutil.parser.isoparse(\"2025-01-03T13:37:00Z\"),\n                    \"benefit_id\": \"397a17aa-15cf-4cb4-9333-18040203cf98\",\n                    \"benefit_type\": polar_sdk.BenefitType.DOWNLOADABLES,\n                    \"properties\": {},\n                },\n            ],\n            \"active_meters\": [\n                {\n                    \"created_at\": dateutil.parser.isoparse(\"2023-04-30T20:06:18.800Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2025-06-17T18:24:55.187Z\"),\n                    \"meter_id\": \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    \"consumed_units\": 25,\n                    \"credited_units\": 100,\n                    \"balance\": 75,\n                },\n            ],\n            \"avatar_url\": \"https://www.gravatar.com/avatar/xxx?d=blank\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["customer.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcustomer_updated_post(request={\n        \"type\": \"customer.updated\",\n        \"data\": {\n            \"id\": \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n            \"created_at\": dateutil.parser.isoparse(\"2023-10-11T01:52:16.669Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2024-07-17T00:54:05.167Z\"),\n            \"metadata\": {\n                \"key\": 906944,\n                \"key1\": 513720,\n            },\n            \"external_id\": \"usr_1337\",\n            \"email\": \"customer@example.com\",\n            \"email_verified\": True,\n            \"name\": \"John Doe\",\n            \"billing_address\": {\n                \"country\": \"US\",\n            },\n            \"tax_id\": [\n                \"FR61954506077\",\n                \"eu_vat\",\n            ],\n            \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"deleted_at\": dateutil.parser.isoparse(\"2025-10-11T03:02:11.318Z\"),\n            \"avatar_url\": \"https://www.gravatar.com/avatar/xxx?d=blank\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_created_post(request=polar_sdk.WebhookOrderCreatedPayload(\n        data=polar_sdk.Order(\n            created_at=dateutil.parser.isoparse(\"2024-11-11T12:46:15.007Z\"),\n            modified_at=dateutil.parser.isoparse(\"2024-03-23T03:54:38.261Z\"),\n            id=\"<value>\",\n            metadata={\n                \"key\": 196366,\n                \"key1\": 81588,\n            },\n            status=polar_sdk.OrderStatus.REFUNDED,\n            paid=True,\n            subtotal_amount=738083,\n            discount_amount=409401,\n            net_amount=229323,\n            amount=543579,\n            tax_amount=909216,\n            total_amount=983596,\n            refunded_amount=979645,\n            refunded_tax_amount=328114,\n            currency=\"Egyptian Pound\",\n            billing_reason=polar_sdk.OrderBillingReason.SUBSCRIPTION_CYCLE,\n            billing_address=polar_sdk.Address(\n                country=\"SE\",\n            ),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            product_price_id=\"<value>\",\n            discount_id=\"<value>\",\n            subscription_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer=polar_sdk.OrderCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2023-01-27T10:40:59.012Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-04-15T20:14:00.592Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"FR\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2024-12-20T02:35:43.406Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            user=polar_sdk.OrderUser(\n                id=\"<value>\",\n                email=\"Theresia_Powlowski68@hotmail.com\",\n                public_name=\"<value>\",\n            ),\n            product=polar_sdk.OrderProduct(\n                created_at=dateutil.parser.isoparse(\"2025-08-31T17:55:50.952Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-06-30T23:22:53.052Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"useless or requirement mutate including whimsical\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=False,\n                is_archived=True,\n                organization_id=\"<value>\",\n            ),\n            product_price=polar_sdk.ProductPriceCustom(\n                created_at=dateutil.parser.isoparse(\"2025-03-27T08:15:55.821Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-11-08T15:41:27.758Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                type=polar_sdk.ProductPriceType.ONE_TIME,\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                price_currency=\"<value>\",\n                minimum_amount=81588,\n                maximum_amount=605593,\n                preset_amount=738083,\n            ),\n            discount=polar_sdk.DiscountFixedOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                type=polar_sdk.DiscountType.FIXED,\n                amount=214419,\n                currency=\"Bahamian Dollar\",\n                created_at=dateutil.parser.isoparse(\"2024-09-04T00:08:56.749Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-11-15T18:43:37.749Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": 229323,\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2023-07-09T03:49:36.649Z\"),\n                ends_at=dateutil.parser.isoparse(\"2025-05-09T06:10:47.548Z\"),\n                max_redemptions=706922,\n                redemptions_count=420337,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            subscription=polar_sdk.OrderSubscription(\n                metadata={\n                    \"key\": 106.35,\n                    \"key1\": True,\n                },\n                created_at=dateutil.parser.isoparse(\"2025-08-11T01:22:59.503Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-11-15T11:53:36.436Z\"),\n                id=\"<value>\",\n                amount=959999,\n                currency=\"Netherlands Antillian Guilder\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                status=polar_sdk.SubscriptionStatus.ACTIVE,\n                current_period_start=dateutil.parser.isoparse(\"2023-10-13T23:31:11.679Z\"),\n                current_period_end=dateutil.parser.isoparse(\"2024-01-13T08:53:51.019Z\"),\n                cancel_at_period_end=False,\n                canceled_at=dateutil.parser.isoparse(\"2025-11-25T12:09:36.879Z\"),\n                started_at=dateutil.parser.isoparse(\"2025-11-03T05:50:26.584Z\"),\n                ends_at=dateutil.parser.isoparse(\"2025-06-16T03:30:59.854Z\"),\n                ended_at=dateutil.parser.isoparse(\"2023-06-21T07:48:19.604Z\"),\n                customer_id=\"<value>\",\n                product_id=\"<value>\",\n                discount_id=\"<value>\",\n                checkout_id=\"<value>\",\n                customer_cancellation_reason=polar_sdk.CustomerCancellationReason.OTHER,\n                customer_cancellation_comment=\"<value>\",\n                price_id=\"<value>\",\n                user_id=\"<value>\",\n            ),\n            items=[\n\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.paid"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_paid_post(request=polar_sdk.WebhookOrderPaidPayload(\n        data=polar_sdk.Order(\n            created_at=dateutil.parser.isoparse(\"2023-06-20T16:51:26.974Z\"),\n            modified_at=dateutil.parser.isoparse(\"2023-07-05T02:29:13.883Z\"),\n            id=\"<value>\",\n            metadata={\n                \"key\": 937633,\n            },\n            status=polar_sdk.OrderStatus.PARTIALLY_REFUNDED,\n            paid=True,\n            subtotal_amount=296121,\n            discount_amount=852158,\n            net_amount=356116,\n            amount=518304,\n            tax_amount=963472,\n            total_amount=214173,\n            refunded_amount=945808,\n            refunded_tax_amount=928326,\n            currency=\"Liberian Dollar\",\n            billing_reason=polar_sdk.OrderBillingReason.PURCHASE,\n            billing_address=polar_sdk.Address(\n                country=\"SE\",\n            ),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            product_price_id=\"<value>\",\n            discount_id=\"<value>\",\n            subscription_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer=polar_sdk.OrderCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2025-01-21T10:43:46.171Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-09-05T01:56:49.572Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"SE\",\n                ),\n                tax_id=[\n                    \"FR61954506077\",\n                    \"eu_vat\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2024-06-27T22:26:24.407Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            user=polar_sdk.OrderUser(\n                id=\"<value>\",\n                email=\"Rafael18@yahoo.com\",\n                public_name=\"<value>\",\n            ),\n            product=polar_sdk.OrderProduct(\n                created_at=dateutil.parser.isoparse(\"2023-08-29T00:07:39.616Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-02-17T04:27:04.551Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"elegantly lest among about unless fortunate inculcate and passport\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=True,\n                is_archived=True,\n                organization_id=\"<value>\",\n            ),\n            product_price=polar_sdk.LegacyRecurringProductPriceCustom(\n                created_at=dateutil.parser.isoparse(\"2024-04-13T11:21:08.225Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-11-03T02:24:15.609Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                price_currency=\"<value>\",\n                minimum_amount=789757,\n                maximum_amount=296121,\n                preset_amount=852158,\n            ),\n            discount=polar_sdk.DiscountFixedRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.FOREVER,\n                duration_in_months=142519,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                amount=282703,\n                currency=\"Pakistan Rupee\",\n                created_at=dateutil.parser.isoparse(\"2023-09-30T23:14:30.854Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-06-21T06:18:28.152Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": 518304,\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2023-08-16T01:18:31.971Z\"),\n                ends_at=dateutil.parser.isoparse(\"2025-11-25T02:54:38.042Z\"),\n                max_redemptions=840915,\n                redemptions_count=742493,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            subscription=polar_sdk.OrderSubscription(\n                metadata={\n\n                },\n                created_at=dateutil.parser.isoparse(\"2023-05-03T19:21:58.691Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-11-22T09:04:22.184Z\"),\n                id=\"<value>\",\n                amount=602070,\n                currency=\"Won\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                status=polar_sdk.SubscriptionStatus.INCOMPLETE_EXPIRED,\n                current_period_start=dateutil.parser.isoparse(\"2024-02-06T12:52:54.063Z\"),\n                current_period_end=dateutil.parser.isoparse(\"2023-02-06T10:12:36.856Z\"),\n                cancel_at_period_end=True,\n                canceled_at=dateutil.parser.isoparse(\"2024-08-01T02:17:43.062Z\"),\n                started_at=dateutil.parser.isoparse(\"2025-04-27T22:32:05.274Z\"),\n                ends_at=dateutil.parser.isoparse(\"2023-10-11T22:44:52.128Z\"),\n                ended_at=dateutil.parser.isoparse(\"2023-07-09T23:44:18.854Z\"),\n                customer_id=\"<value>\",\n                product_id=\"<value>\",\n                discount_id=\"<value>\",\n                checkout_id=\"<value>\",\n                customer_cancellation_reason=polar_sdk.CustomerCancellationReason.LOW_QUALITY,\n                customer_cancellation_comment=\"<value>\",\n                price_id=\"<value>\",\n                user_id=\"<value>\",\n            ),\n            items=[\n                polar_sdk.OrderItemSchema(\n                    created_at=dateutil.parser.isoparse(\"2023-05-15T15:42:51.131Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-09-26T16:14:33.681Z\"),\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=715678,\n                    tax_amount=523223,\n                    proration=False,\n                    product_price_id=\"<value>\",\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.refunded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_refunded_post(request=polar_sdk.WebhookOrderRefundedPayload(\n        data=polar_sdk.Order(\n            created_at=dateutil.parser.isoparse(\"2023-01-02T23:38:59.363Z\"),\n            modified_at=dateutil.parser.isoparse(\"2025-02-28T12:31:35.473Z\"),\n            id=\"<value>\",\n            metadata={\n                \"key\": True,\n                \"key1\": True,\n                \"key2\": 528865,\n            },\n            status=polar_sdk.OrderStatus.PARTIALLY_REFUNDED,\n            paid=True,\n            subtotal_amount=158895,\n            discount_amount=509231,\n            net_amount=890779,\n            amount=952371,\n            tax_amount=607176,\n            total_amount=142855,\n            refunded_amount=315343,\n            refunded_tax_amount=594696,\n            currency=\"Belize Dollar\",\n            billing_reason=polar_sdk.OrderBillingReason.SUBSCRIPTION_CYCLE,\n            billing_address=polar_sdk.Address(\n                country=\"US\",\n            ),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            product_price_id=\"<value>\",\n            discount_id=\"<value>\",\n            subscription_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer=polar_sdk.OrderCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2024-04-10T12:40:37.234Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-06-05T18:36:35.351Z\"),\n                metadata={\n                    \"key\": True,\n                    \"key1\": \"<value>\",\n                    \"key2\": 403095,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2024-11-25T06:39:16.384Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            user=polar_sdk.OrderUser(\n                id=\"<value>\",\n                email=\"Don.Pagac@hotmail.com\",\n                public_name=\"<value>\",\n            ),\n            product=polar_sdk.OrderProduct(\n                created_at=dateutil.parser.isoparse(\"2024-02-21T23:02:17.394Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-06-25T13:04:22.231Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"off appreciate round standard infatuated unwilling tempting magnificent\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=True,\n                is_archived=True,\n                organization_id=\"<value>\",\n            ),\n            product_price=polar_sdk.LegacyRecurringProductPriceFree(\n                created_at=dateutil.parser.isoparse(\"2025-10-05T18:25:49.221Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-10-25T11:18:00.181Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            ),\n            discount=polar_sdk.DiscountFixedOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.FOREVER,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                amount=798101,\n                currency=\"UAE Dirham\",\n                created_at=dateutil.parser.isoparse(\"2023-07-31T17:16:21.805Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-12-19T01:36:36.664Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": 8022.9,\n                    \"key1\": 6677,\n                    \"key2\": 8983.71,\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2025-10-04T09:22:51.824Z\"),\n                ends_at=dateutil.parser.isoparse(\"2025-05-25T20:59:26.748Z\"),\n                max_redemptions=625636,\n                redemptions_count=302499,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            subscription=polar_sdk.OrderSubscription(\n                metadata={\n                    \"key\": \"<value>\",\n                    \"key1\": 434679,\n                },\n                created_at=dateutil.parser.isoparse(\"2023-03-11T03:15:27.257Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-08-05T00:21:50.603Z\"),\n                id=\"<value>\",\n                amount=690659,\n                currency=\"Lari\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                status=polar_sdk.SubscriptionStatus.CANCELED,\n                current_period_start=dateutil.parser.isoparse(\"2025-08-31T07:32:06.622Z\"),\n                current_period_end=dateutil.parser.isoparse(\"2023-12-09T23:03:57.242Z\"),\n                cancel_at_period_end=False,\n                canceled_at=dateutil.parser.isoparse(\"2024-09-03T00:25:25.397Z\"),\n                started_at=dateutil.parser.isoparse(\"2023-07-04T15:25:35.943Z\"),\n                ends_at=dateutil.parser.isoparse(\"2024-09-24T05:43:42.179Z\"),\n                ended_at=dateutil.parser.isoparse(\"2024-11-02T16:14:59.150Z\"),\n                customer_id=\"<value>\",\n                product_id=\"<value>\",\n                discount_id=\"<value>\",\n                checkout_id=\"<value>\",\n                customer_cancellation_reason=polar_sdk.CustomerCancellationReason.MISSING_FEATURES,\n                customer_cancellation_comment=\"<value>\",\n                price_id=\"<value>\",\n                user_id=\"<value>\",\n            ),\n            items=[\n                polar_sdk.OrderItemSchema(\n                    created_at=dateutil.parser.isoparse(\"2023-02-21T19:31:04.867Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-06-17T14:21:24.989Z\"),\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=954979,\n                    tax_amount=464023,\n                    proration=True,\n                    product_price_id=\"<value>\",\n                ),\n                polar_sdk.OrderItemSchema(\n                    created_at=dateutil.parser.isoparse(\"2023-03-20T08:59:13.901Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-11-27T02:46:49.869Z\"),\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=436193,\n                    tax_amount=334120,\n                    proration=True,\n                    product_price_id=\"<value>\",\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_updated_post(request=polar_sdk.WebhookOrderUpdatedPayload(\n        data=polar_sdk.Order(\n            created_at=dateutil.parser.isoparse(\"2023-07-30T20:50:28.569Z\"),\n            modified_at=dateutil.parser.isoparse(\"2024-03-02T13:14:46.788Z\"),\n            id=\"<value>\",\n            metadata={\n                \"key\": \"<value>\",\n            },\n            status=polar_sdk.OrderStatus.PENDING,\n            paid=True,\n            subtotal_amount=334220,\n            discount_amount=7263,\n            net_amount=832690,\n            amount=700550,\n            tax_amount=61899,\n            total_amount=190491,\n            refunded_amount=400227,\n            refunded_tax_amount=279797,\n            currency=\"Bahamian Dollar\",\n            billing_reason=polar_sdk.OrderBillingReason.PURCHASE,\n            billing_address=polar_sdk.Address(\n                country=\"FR\",\n            ),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            product_price_id=\"<value>\",\n            discount_id=\"<value>\",\n            subscription_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer=polar_sdk.OrderCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2025-11-29T21:44:19.115Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-10-30T08:05:04.104Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"FR\",\n                ),\n                tax_id=[\n                    \"FR61954506077\",\n                    \"eu_vat\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2023-03-18T10:39:58.209Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            user=polar_sdk.OrderUser(\n                id=\"<value>\",\n                email=\"Prudence51@hotmail.com\",\n                public_name=\"<value>\",\n            ),\n            product=polar_sdk.OrderProduct(\n                created_at=dateutil.parser.isoparse(\"2024-03-21T21:55:05.137Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-02-05T08:10:52.828Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"icebreaker gah sentimental gray meanwhile\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=False,\n                is_archived=True,\n                organization_id=\"<value>\",\n            ),\n            product_price=polar_sdk.LegacyRecurringProductPriceCustom(\n                created_at=dateutil.parser.isoparse(\"2025-09-24T08:56:04.909Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-03-20T18:12:36.939Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                price_currency=\"<value>\",\n                minimum_amount=334220,\n                maximum_amount=7263,\n                preset_amount=832690,\n            ),\n            discount=polar_sdk.DiscountFixedOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.FOREVER,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                amount=352171,\n                currency=\"Azerbaijanian Manat\",\n                created_at=dateutil.parser.isoparse(\"2023-10-05T02:53:48.703Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-04-25T05:09:07.981Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": True,\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2024-02-28T01:41:38.707Z\"),\n                ends_at=dateutil.parser.isoparse(\"2024-08-02T19:05:58.642Z\"),\n                max_redemptions=118118,\n                redemptions_count=641753,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            subscription=polar_sdk.OrderSubscription(\n                metadata={\n                    \"key\": 6452.84,\n                },\n                created_at=dateutil.parser.isoparse(\"2025-07-22T13:25:10.034Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-10-13T14:11:16.615Z\"),\n                id=\"<value>\",\n                amount=559325,\n                currency=\"Fiji Dollar\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                status=polar_sdk.SubscriptionStatus.INCOMPLETE,\n                current_period_start=dateutil.parser.isoparse(\"2023-05-18T21:27:20.128Z\"),\n                current_period_end=dateutil.parser.isoparse(\"2024-07-11T06:32:04.767Z\"),\n                cancel_at_period_end=True,\n                canceled_at=dateutil.parser.isoparse(\"2025-07-23T10:15:32.137Z\"),\n                started_at=dateutil.parser.isoparse(\"2024-08-15T13:04:18.126Z\"),\n                ends_at=dateutil.parser.isoparse(\"2023-09-03T17:23:26.541Z\"),\n                ended_at=dateutil.parser.isoparse(\"2024-04-27T20:21:39.429Z\"),\n                customer_id=\"<value>\",\n                product_id=\"<value>\",\n                discount_id=\"<value>\",\n                checkout_id=\"<value>\",\n                customer_cancellation_reason=polar_sdk.CustomerCancellationReason.CUSTOMER_SERVICE,\n                customer_cancellation_comment=\"<value>\",\n                price_id=\"<value>\",\n                user_id=\"<value>\",\n            ),\n            items=[\n                polar_sdk.OrderItemSchema(\n                    created_at=dateutil.parser.isoparse(\"2023-01-07T04:01:29.671Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-12-04T07:00:35.238Z\"),\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=766029,\n                    tax_amount=3532,\n                    proration=True,\n                    product_price_id=\"<value>\",\n                ),\n                polar_sdk.OrderItemSchema(\n                    created_at=dateutil.parser.isoparse(\"2025-07-13T15:12:52.856Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-07-02T07:53:49.841Z\"),\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=541142,\n                    tax_amount=25445,\n                    proration=True,\n                    product_price_id=\"<value>\",\n                ),\n                polar_sdk.OrderItemSchema(\n                    created_at=dateutil.parser.isoparse(\"2024-08-25T01:40:10.911Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-05-27T01:46:10.631Z\"),\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=600914,\n                    tax_amount=157162,\n                    proration=True,\n                    product_price_id=\"<value>\",\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["organization.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorganization_updated_post(request={\n        \"type\": \"organization.updated\",\n        \"data\": {\n            \"created_at\": dateutil.parser.isoparse(\"2023-08-12T18:45:04.236Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2025-12-29T16:35:25.119Z\"),\n            \"id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"name\": \"<value>\",\n            \"slug\": \"<value>\",\n            \"avatar_url\": \"https://devoted-bump.net\",\n            \"email\": \"Shaylee26@hotmail.com\",\n            \"website\": \"<value>\",\n            \"socials\": [\n                {\n                    \"platform\": polar_sdk.OrganizationSocialPlatforms.TIKTOK,\n                    \"url\": \"https://bright-bug.biz\",\n                },\n            ],\n            \"details_submitted_at\": dateutil.parser.isoparse(\"2025-09-21T05:55:39.282Z\"),\n            \"feature_settings\": {},\n            \"subscription_settings\": {\n                \"allow_multiple_subscriptions\": False,\n                \"allow_customer_updates\": True,\n                \"proration_behavior\": polar_sdk.SubscriptionProrationBehavior.PRORATE,\n            },\n            \"bio\": \"<value>\",\n            \"company\": \"Glover and Sons\",\n            \"blog\": \"<value>\",\n            \"location\": \"<value>\",\n            \"twitter_username\": \"<value>\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["product.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointproduct_created_post(request={\n        \"type\": \"product.created\",\n        \"data\": {\n            \"created_at\": dateutil.parser.isoparse(\"2023-03-27T06:36:20.130Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2025-04-21T12:05:16.637Z\"),\n            \"id\": \"<value>\",\n            \"name\": \"<value>\",\n            \"description\": \"into horst metal grimy clinch big grounded industrialize\",\n            \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n            \"is_recurring\": True,\n            \"is_archived\": True,\n            \"organization_id\": \"<value>\",\n            \"metadata\": {\n                \"key\": 273829,\n                \"key1\": 168.26,\n            },\n            \"prices\": [\n                {\n                    \"created_at\": dateutil.parser.isoparse(\"2024-12-07T23:31:39.577Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2024-04-25T10:21:28.587Z\"),\n                    \"id\": \"<value>\",\n                    \"amount_type\": \"free\",\n                    \"is_archived\": False,\n                    \"product_id\": \"<value>\",\n                    \"type\": \"recurring\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    \"legacy\": True,\n                },\n            ],\n            \"benefits\": [\n                {\n                    \"id\": \"<value>\",\n                    \"created_at\": dateutil.parser.isoparse(\"2024-11-29T13:37:27.569Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2024-09-06T02:23:36.299Z\"),\n                    \"metadata\": {\n                        \"key\": 5276.08,\n                    },\n                    \"type\": \"downloadables\",\n                    \"description\": \"deduction before requite\",\n                    \"selectable\": False,\n                    \"deletable\": False,\n                    \"organization_id\": \"<value>\",\n                    \"properties\": {\n                        \"archived\": {\n                            \"key\": False,\n                        },\n                        \"files\": [\n                            \"<value>\",\n                        ],\n                    },\n                },\n            ],\n            \"medias\": [\n                {\n                    \"id\": \"<value>\",\n                    \"organization_id\": \"<value>\",\n                    \"name\": \"<value>\",\n                    \"path\": \"/dev\",\n                    \"mime_type\": \"<value>\",\n                    \"size\": 35600,\n                    \"storage_version\": \"<value>\",\n                    \"checksum_etag\": \"<value>\",\n                    \"checksum_sha256_base64\": \"<value>\",\n                    \"checksum_sha256_hex\": \"<value>\",\n                    \"last_modified_at\": dateutil.parser.isoparse(\"2024-08-14T09:04:03.608Z\"),\n                    \"version\": \"<value>\",\n                    \"service\": \"product_media\",\n                    \"is_uploaded\": False,\n                    \"created_at\": dateutil.parser.isoparse(\"2023-11-02T05:28:54.474Z\"),\n                    \"size_readable\": \"<value>\",\n                    \"public_url\": \"https://broken-conversation.org/\",\n                },\n                {\n                    \"id\": \"<value>\",\n                    \"organization_id\": \"<value>\",\n                    \"name\": \"<value>\",\n                    \"path\": \"/boot/defaults\",\n                    \"mime_type\": \"<value>\",\n                    \"size\": 689155,\n                    \"storage_version\": \"<value>\",\n                    \"checksum_etag\": \"<value>\",\n                    \"checksum_sha256_base64\": \"<value>\",\n                    \"checksum_sha256_hex\": \"<value>\",\n                    \"last_modified_at\": dateutil.parser.isoparse(\"2025-05-08T13:47:15.979Z\"),\n                    \"version\": \"<value>\",\n                    \"service\": \"product_media\",\n                    \"is_uploaded\": False,\n                    \"created_at\": dateutil.parser.isoparse(\"2024-11-11T23:57:26.081Z\"),\n                    \"size_readable\": \"<value>\",\n                    \"public_url\": \"https://shameful-digit.net/\",\n                },\n            ],\n            \"attached_custom_fields\": [\n                {\n                    \"custom_field_id\": \"<value>\",\n                    \"custom_field\": {\n                        \"created_at\": dateutil.parser.isoparse(\"2024-11-02T13:07:13.416Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2024-10-29T13:26:33.615Z\"),\n                        \"id\": \"<value>\",\n                        \"metadata\": {\n                            \"key\": False,\n                        },\n                        \"type\": \"checkbox\",\n                        \"slug\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        \"properties\": {},\n                    },\n                    \"order\": 598052,\n                    \"required\": False,\n                },\n                {\n                    \"custom_field_id\": \"<value>\",\n                    \"custom_field\": {\n                        \"created_at\": dateutil.parser.isoparse(\"2023-05-31T06:45:13.507Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2024-11-07T08:23:04.365Z\"),\n                        \"id\": \"<value>\",\n                        \"metadata\": {\n                            \"key\": \"<value>\",\n                        },\n                        \"type\": \"number\",\n                        \"slug\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        \"properties\": {},\n                    },\n                    \"order\": 158822,\n                    \"required\": False,\n                },\n            ],\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["product.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointproduct_updated_post(request={\n        \"type\": \"product.updated\",\n        \"data\": {\n            \"created_at\": dateutil.parser.isoparse(\"2024-06-25T03:46:32.479Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2023-06-04T01:47:33.158Z\"),\n            \"id\": \"<value>\",\n            \"name\": \"<value>\",\n            \"description\": \"er ick birdcage\",\n            \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n            \"is_recurring\": False,\n            \"is_archived\": True,\n            \"organization_id\": \"<value>\",\n            \"metadata\": {\n                \"key\": 498845,\n            },\n            \"prices\": [\n                {\n                    \"created_at\": dateutil.parser.isoparse(\"2023-04-14T23:22:06.974Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2023-11-27T16:49:54.775Z\"),\n                    \"id\": \"<value>\",\n                    \"amount_type\": \"custom\",\n                    \"is_archived\": False,\n                    \"product_id\": \"<value>\",\n                    \"type\": \"recurring\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    \"price_currency\": \"<value>\",\n                    \"minimum_amount\": 147529,\n                    \"maximum_amount\": 389871,\n                    \"preset_amount\": 137830,\n                    \"legacy\": True,\n                },\n            ],\n            \"benefits\": [\n                {\n                    \"id\": \"<value>\",\n                    \"created_at\": dateutil.parser.isoparse(\"2025-10-01T01:25:21.739Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2023-04-13T14:11:42.240Z\"),\n                    \"metadata\": {\n                        \"key\": 2892.3,\n                    },\n                    \"type\": \"github_repository\",\n                    \"description\": \"ugh once cuckoo warped antelope\",\n                    \"selectable\": False,\n                    \"deletable\": False,\n                    \"organization_id\": \"<value>\",\n                    \"properties\": {\n                        \"repository_owner\": \"polarsource\",\n                        \"repository_name\": \"private_repo\",\n                        \"permission\": polar_sdk.Permission.ADMIN,\n                    },\n                },\n            ],\n            \"medias\": [\n                {\n                    \"id\": \"<value>\",\n                    \"organization_id\": \"<value>\",\n                    \"name\": \"<value>\",\n                    \"path\": \"/mnt\",\n                    \"mime_type\": \"<value>\",\n                    \"size\": 629119,\n                    \"storage_version\": \"<value>\",\n                    \"checksum_etag\": \"<value>\",\n                    \"checksum_sha256_base64\": \"<value>\",\n                    \"checksum_sha256_hex\": \"<value>\",\n                    \"last_modified_at\": dateutil.parser.isoparse(\"2023-02-26T17:48:06.596Z\"),\n                    \"version\": \"<value>\",\n                    \"service\": \"product_media\",\n                    \"is_uploaded\": True,\n                    \"created_at\": dateutil.parser.isoparse(\"2023-11-28T07:13:01.689Z\"),\n                    \"size_readable\": \"<value>\",\n                    \"public_url\": \"https://waterlogged-mixture.biz\",\n                },\n                {\n                    \"id\": \"<value>\",\n                    \"organization_id\": \"<value>\",\n                    \"name\": \"<value>\",\n                    \"path\": \"/sys\",\n                    \"mime_type\": \"<value>\",\n                    \"size\": 573,\n                    \"storage_version\": \"<value>\",\n                    \"checksum_etag\": \"<value>\",\n                    \"checksum_sha256_base64\": \"<value>\",\n                    \"checksum_sha256_hex\": \"<value>\",\n                    \"last_modified_at\": dateutil.parser.isoparse(\"2024-04-09T20:24:15.645Z\"),\n                    \"version\": \"<value>\",\n                    \"service\": \"product_media\",\n                    \"is_uploaded\": False,\n                    \"created_at\": dateutil.parser.isoparse(\"2023-02-20T13:21:56.387Z\"),\n                    \"size_readable\": \"<value>\",\n                    \"public_url\": \"https://cooperative-hovel.net/\",\n                },\n            ],\n            \"attached_custom_fields\": [\n                {\n                    \"custom_field_id\": \"<value>\",\n                    \"custom_field\": {\n                        \"created_at\": dateutil.parser.isoparse(\"2023-01-31T01:25:14.969Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2024-08-13T08:46:11.488Z\"),\n                        \"id\": \"<value>\",\n                        \"metadata\": {\n                            \"key\": \"<value>\",\n                        },\n                        \"type\": \"date\",\n                        \"slug\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        \"properties\": {},\n                    },\n                    \"order\": 15578,\n                    \"required\": False,\n                },\n                {\n                    \"custom_field_id\": \"<value>\",\n                    \"custom_field\": {\n                        \"created_at\": dateutil.parser.isoparse(\"2025-03-17T11:57:55.112Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2025-08-07T02:29:32.090Z\"),\n                        \"id\": \"<value>\",\n                        \"metadata\": {\n                            \"key\": 5813.83,\n                        },\n                        \"type\": \"text\",\n                        \"slug\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        \"properties\": {},\n                    },\n                    \"order\": 72985,\n                    \"required\": True,\n                },\n                {\n                    \"custom_field_id\": \"<value>\",\n                    \"custom_field\": {\n                        \"created_at\": dateutil.parser.isoparse(\"2023-12-21T16:33:04.375Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2023-01-13T22:09:23.125Z\"),\n                        \"id\": \"<value>\",\n                        \"metadata\": {\n                            \"key\": False,\n                        },\n                        \"type\": \"select\",\n                        \"slug\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        \"properties\": {\n                            \"options\": [\n                                {\n                                    \"value\": \"<value>\",\n                                    \"label\": \"<value>\",\n                                },\n                            ],\n                        },\n                    },\n                    \"order\": 144912,\n                    \"required\": False,\n                },\n            ],\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["refund.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointrefund_created_post(request={\n        \"type\": \"refund.created\",\n        \"data\": {\n            \"created_at\": dateutil.parser.isoparse(\"2025-12-29T06:17:19.062Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2023-06-28T13:27:59.588Z\"),\n            \"id\": \"<value>\",\n            \"metadata\": {\n                \"key\": False,\n                \"key1\": True,\n            },\n            \"status\": polar_sdk.RefundStatus.CANCELED,\n            \"reason\": polar_sdk.RefundReason.FRAUDULENT,\n            \"amount\": 872325,\n            \"tax_amount\": 273821,\n            \"currency\": \"New Israeli Sheqel\",\n            \"organization_id\": \"<value>\",\n            \"order_id\": \"<value>\",\n            \"subscription_id\": \"<value>\",\n            \"customer_id\": \"<value>\",\n            \"revoke_benefits\": True,\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["refund.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointrefund_updated_post(request={\n        \"type\": \"refund.updated\",\n        \"data\": {\n            \"created_at\": dateutil.parser.isoparse(\"2024-01-23T03:57:31.216Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2024-04-24T01:16:45.429Z\"),\n            \"id\": \"<value>\",\n            \"metadata\": {\n\n            },\n            \"status\": polar_sdk.RefundStatus.SUCCEEDED,\n            \"reason\": polar_sdk.RefundReason.OTHER,\n            \"amount\": 397442,\n            \"tax_amount\": 509120,\n            \"currency\": \"Rufiyaa\",\n            \"organization_id\": \"<value>\",\n            \"order_id\": \"<value>\",\n            \"subscription_id\": \"<value>\",\n            \"customer_id\": \"<value>\",\n            \"revoke_benefits\": False,\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.active"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_active_post(request=polar_sdk.WebhookSubscriptionActivePayload(\n        data=polar_sdk.Subscription(\n            created_at=dateutil.parser.isoparse(\"2023-09-17T11:03:44.679Z\"),\n            modified_at=dateutil.parser.isoparse(\"2025-07-24T20:02:17.426Z\"),\n            id=\"<value>\",\n            amount=116760,\n            currency=\"Quetzal\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            status=polar_sdk.SubscriptionStatus.INCOMPLETE,\n            current_period_start=dateutil.parser.isoparse(\"2023-08-25T00:14:50.252Z\"),\n            current_period_end=dateutil.parser.isoparse(\"2023-12-10T18:25:01.577Z\"),\n            cancel_at_period_end=False,\n            canceled_at=dateutil.parser.isoparse(\"2024-07-05T14:07:23.099Z\"),\n            started_at=dateutil.parser.isoparse(\"2024-06-30T08:12:48.355Z\"),\n            ends_at=dateutil.parser.isoparse(\"2023-06-29T07:42:54.895Z\"),\n            ended_at=dateutil.parser.isoparse(\"2025-10-30T02:51:06.576Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.SWITCHED_SERVICE,\n            customer_cancellation_comment=\"<value>\",\n            price_id=\"<value>\",\n            metadata={\n                \"key\": 4802.79,\n                \"key1\": \"<value>\",\n                \"key2\": 6152.12,\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2023-04-25T08:49:41.567Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-09-05T08:50:11.879Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"FR\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2024-04-06T03:26:32.986Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            user=polar_sdk.SubscriptionUser(\n                id=\"<value>\",\n                email=\"Marisol.Wisozk@hotmail.com\",\n                public_name=\"<value>\",\n            ),\n            product=polar_sdk.Product(\n                created_at=dateutil.parser.isoparse(\"2024-10-30T00:00:20.195Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-03-11T01:30:09.272Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"thoughtfully skyline ouch openly aboard moisten graffiti\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=True,\n                is_archived=False,\n                organization_id=\"<value>\",\n                metadata={\n\n                },\n                prices=[\n                    polar_sdk.LegacyRecurringProductPriceFree(\n                        created_at=dateutil.parser.isoparse(\"2023-05-08T23:16:06.519Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-12-23T21:06:29.057Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    ),\n                ],\n                benefits=[\n                    polar_sdk.BenefitCustom(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2023-08-25T00:14:50.252Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-12-10T18:25:01.577Z\"),\n                        metadata={\n                            \"key\": 5032.74,\n                        },\n                        description=\"braid incidentally excitedly sympathetically pro tremendously\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitCustomProperties(\n                            note=\"<value>\",\n                        ),\n                        is_tax_applicable=False,\n                    ),\n                    polar_sdk.BenefitGitHubRepository(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2025-09-13T20:09:33.336Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-02-26T09:31:26.338Z\"),\n                        metadata={\n                            \"key\": 4095.9,\n                        },\n                        description=\"where onto than admonish\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitGitHubRepositoryProperties(\n                            repository_owner=\"polarsource\",\n                            repository_name=\"private_repo\",\n                            permission=polar_sdk.Permission.PUSH,\n                        ),\n                    ),\n                    polar_sdk.BenefitCustom(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2024-02-09T05:47:51.810Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-09-18T05:20:53.809Z\"),\n                        metadata={\n                            \"key\": 7083.88,\n                        },\n                        description=\"across colorfully evince evenly old medium pfft dally giggle sure-footed\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitCustomProperties(\n                            note=\"<value>\",\n                        ),\n                        is_tax_applicable=False,\n                    ),\n                ],\n                medias=[\n\n                ],\n                attached_custom_fields=[\n\n                ],\n            ),\n            discount=polar_sdk.DiscountFixedOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.FOREVER,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                amount=872895,\n                currency=\"Saudi Riyal\",\n                created_at=dateutil.parser.isoparse(\"2025-09-19T20:00:57.621Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-11-06T08:52:59.872Z\"),\n                id=\"<value>\",\n                metadata={\n\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2024-09-10T19:54:29.821Z\"),\n                ends_at=dateutil.parser.isoparse(\"2025-12-12T13:31:49.606Z\"),\n                max_redemptions=392581,\n                redemptions_count=953845,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            price=polar_sdk.ProductPriceFree(\n                created_at=dateutil.parser.isoparse(\"2024-11-28T08:29:34.035Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-03-08T08:26:36.119Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                type=polar_sdk.ProductPriceType.ONE_TIME,\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n            ),\n            prices=[\n                polar_sdk.ProductPriceFree(\n                    created_at=dateutil.parser.isoparse(\"2024-05-16T02:18:51.238Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2023-06-21T22:09:57.615Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    type=polar_sdk.ProductPriceType.ONE_TIME,\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                ),\n                polar_sdk.LegacyRecurringProductPriceFixed(\n                    created_at=dateutil.parser.isoparse(\"2023-11-21T01:41:06.339Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-02-15T00:55:56.516Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    price_currency=\"<value>\",\n                    price_amount=931655,\n                ),\n            ],\n            meters=[\n\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.canceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_canceled_post(request=polar_sdk.WebhookSubscriptionCanceledPayload(\n        data=polar_sdk.Subscription(\n            created_at=dateutil.parser.isoparse(\"2024-02-08T10:04:43.200Z\"),\n            modified_at=dateutil.parser.isoparse(\"2023-02-20T09:16:44.963Z\"),\n            id=\"<value>\",\n            amount=384017,\n            currency=\"Nakfa\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            status=polar_sdk.SubscriptionStatus.CANCELED,\n            current_period_start=dateutil.parser.isoparse(\"2025-08-29T23:51:26.505Z\"),\n            current_period_end=dateutil.parser.isoparse(\"2024-01-30T14:57:29.126Z\"),\n            cancel_at_period_end=False,\n            canceled_at=dateutil.parser.isoparse(\"2023-05-31T10:57:35.559Z\"),\n            started_at=dateutil.parser.isoparse(\"2024-10-31T08:13:37.012Z\"),\n            ends_at=dateutil.parser.isoparse(\"2023-08-22T21:50:14.399Z\"),\n            ended_at=dateutil.parser.isoparse(\"2023-07-13T20:08:34.251Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.TOO_EXPENSIVE,\n            customer_cancellation_comment=\"<value>\",\n            price_id=\"<value>\",\n            metadata={\n                \"key\": 38827,\n                \"key1\": 199269,\n                \"key2\": 668826,\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2024-03-16T21:08:54.900Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-10-15T15:32:03.593Z\"),\n                metadata={\n                    \"key\": 497112,\n                    \"key1\": True,\n                    \"key2\": True,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"FR\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2024-09-21T11:12:46.571Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            user=polar_sdk.SubscriptionUser(\n                id=\"<value>\",\n                email=\"Freeda63@hotmail.com\",\n                public_name=\"<value>\",\n            ),\n            product=polar_sdk.Product(\n                created_at=dateutil.parser.isoparse(\"2024-01-21T12:02:52.493Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-11-20T16:08:42.528Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"pfft upside-down ick rust bestride circa\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                is_recurring=True,\n                is_archived=True,\n                organization_id=\"<value>\",\n                metadata={\n\n                },\n                prices=[\n                    polar_sdk.LegacyRecurringProductPriceCustom(\n                        created_at=dateutil.parser.isoparse(\"2024-02-25T21:11:48.890Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-10-06T06:04:45.294Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        price_currency=\"<value>\",\n                        minimum_amount=803599,\n                        maximum_amount=886856,\n                        preset_amount=360058,\n                    ),\n                ],\n                benefits=[\n                    polar_sdk.BenefitDownloadables(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2023-05-31T10:57:35.559Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-10-31T08:13:37.012Z\"),\n                        metadata={\n                            \"key\": \"<value>\",\n                        },\n                        description=\"if upon whoever by\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitDownloadablesProperties(\n                            archived={\n                                \"key\": False,\n                            },\n                            files=[\n                                \"<value>\",\n                            ],\n                        ),\n                    ),\n                    polar_sdk.BenefitDownloadables(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2024-04-22T15:20:36.336Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-02-02T14:55:14.427Z\"),\n                        metadata={\n                            \"key\": \"<value>\",\n                        },\n                        description=\"whether futon carpool\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitDownloadablesProperties(\n                            archived={\n                                \"key\": False,\n                            },\n                            files=[\n                                \"<value>\",\n                            ],\n                        ),\n                    ),\n                    polar_sdk.BenefitLicenseKeys(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2025-04-12T18:57:51.082Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-02-01T11:25:35.223Z\"),\n                        metadata={\n                            \"key\": False,\n                        },\n                        description=\"whose unto peony sometimes frantically\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitLicenseKeysProperties(\n                            prefix=\"<value>\",\n                            expires=polar_sdk.BenefitLicenseKeyExpirationProperties(\n                                ttl=722165,\n                                timeframe=polar_sdk.Timeframe.YEAR,\n                            ),\n                            activations=polar_sdk.BenefitLicenseKeyActivationProperties(\n                                limit=853043,\n                                enable_customer_admin=False,\n                            ),\n                            limit_usage=533766,\n                        ),\n                    ),\n                ],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/var\",\n                        mime_type=\"<value>\",\n                        size=865417,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2025-03-01T04:19:05.273Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=dateutil.parser.isoparse(\"2023-05-28T03:41:27.850Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://free-galoshes.org/\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/dev\",\n                        mime_type=\"<value>\",\n                        size=663654,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2025-04-14T18:35:05.425Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=dateutil.parser.isoparse(\"2024-04-16T14:39:45.849Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://posh-pilot.org/\",\n                    ),\n                ],\n                attached_custom_fields=[\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldDate(\n                            created_at=dateutil.parser.isoparse(\"2025-01-19T07:20:12.775Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2025-12-28T00:16:36.233Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": 501804,\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldDateProperties(),\n                        ),\n                        order=404052,\n                        required=False,\n                    ),\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldSelect(\n                            created_at=dateutil.parser.isoparse(\"2025-03-01T00:15:21.815Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2023-07-05T21:20:50.074Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": False,\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldSelectProperties(\n                                options=[\n                                    polar_sdk.CustomFieldSelectOption(\n                                        value=\"<value>\",\n                                        label=\"<value>\",\n                                    ),\n                                ],\n                            ),\n                        ),\n                        order=848717,\n                        required=True,\n                    ),\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldDate(\n                            created_at=dateutil.parser.isoparse(\"2024-06-13T07:16:17.167Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2023-09-11T15:15:55.577Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": \"<value>\",\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldDateProperties(),\n                        ),\n                        order=491060,\n                        required=False,\n                    ),\n                ],\n            ),\n            discount=polar_sdk.DiscountPercentageRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                duration_in_months=750631,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                basis_points=227101,\n                created_at=dateutil.parser.isoparse(\"2025-05-26T10:17:12.643Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-04-14T14:43:41.523Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": 609127,\n                    \"key1\": 936190,\n                    \"key2\": \"<value>\",\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2024-06-03T06:31:24.432Z\"),\n                ends_at=dateutil.parser.isoparse(\"2024-02-09T18:18:33.467Z\"),\n                max_redemptions=631638,\n                redemptions_count=632054,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            price=polar_sdk.ProductPriceFree(\n                created_at=dateutil.parser.isoparse(\"2025-05-02T16:31:57.212Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-03-30T22:07:25.990Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                type=polar_sdk.ProductPriceType.RECURRING,\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n            ),\n            prices=[\n                polar_sdk.ProductPriceFixed(\n                    created_at=dateutil.parser.isoparse(\"2025-09-03T03:41:33.199Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-07-30T17:23:59.652Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    type=polar_sdk.ProductPriceType.ONE_TIME,\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    price_currency=\"<value>\",\n                    price_amount=307453,\n                ),\n                polar_sdk.LegacyRecurringProductPriceFree(\n                    created_at=dateutil.parser.isoparse(\"2023-10-27T13:26:08.325Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-08-04T08:26:05.471Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                ),\n                polar_sdk.LegacyRecurringProductPriceFixed(\n                    created_at=dateutil.parser.isoparse(\"2024-08-22T17:07:21.257Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-08-24T04:18:58.722Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    price_currency=\"<value>\",\n                    price_amount=525988,\n                ),\n            ],\n            meters=[\n\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_created_post(request=polar_sdk.WebhookSubscriptionCreatedPayload(\n        data=polar_sdk.Subscription(\n            created_at=dateutil.parser.isoparse(\"2024-07-03T01:29:40.920Z\"),\n            modified_at=dateutil.parser.isoparse(\"2023-02-20T03:35:25.500Z\"),\n            id=\"<value>\",\n            amount=78980,\n            currency=\"Dong\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            status=polar_sdk.SubscriptionStatus.INCOMPLETE_EXPIRED,\n            current_period_start=dateutil.parser.isoparse(\"2025-01-25T02:46:12.208Z\"),\n            current_period_end=dateutil.parser.isoparse(\"2023-10-08T16:07:22.449Z\"),\n            cancel_at_period_end=False,\n            canceled_at=dateutil.parser.isoparse(\"2025-10-17T20:21:29.819Z\"),\n            started_at=dateutil.parser.isoparse(\"2023-02-26T17:52:17.099Z\"),\n            ends_at=dateutil.parser.isoparse(\"2023-07-04T19:46:53.033Z\"),\n            ended_at=dateutil.parser.isoparse(\"2023-09-06T09:33:34.348Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.UNUSED,\n            customer_cancellation_comment=\"<value>\",\n            price_id=\"<value>\",\n            metadata={\n                \"key\": \"<value>\",\n                \"key1\": 2294.09,\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2023-04-01T11:22:10.531Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-06-26T00:08:47.301Z\"),\n                metadata={\n                    \"key\": True,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"FR\",\n                ),\n                tax_id=[\n                    \"FR61954506077\",\n                    \"eu_vat\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2025-05-16T01:12:33.254Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            user=polar_sdk.SubscriptionUser(\n                id=\"<value>\",\n                email=\"Krystel_Skiles@hotmail.com\",\n                public_name=\"<value>\",\n            ),\n            product=polar_sdk.Product(\n                created_at=dateutil.parser.isoparse(\"2024-10-31T02:44:33.320Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-06-08T04:17:45.373Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"publication partially afore under subsidy why\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                is_recurring=True,\n                is_archived=False,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": 8199.07,\n                    \"key1\": 966758,\n                },\n                prices=[\n\n                ],\n                benefits=[\n                    polar_sdk.BenefitDownloadables(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2023-02-20T03:35:25.500Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-03-28T13:29:27.613Z\"),\n                        metadata={\n                            \"key\": False,\n                        },\n                        description=\"anti because squeaky limply edge behest\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitDownloadablesProperties(\n                            archived={\n                                \"key\": False,\n                            },\n                            files=[\n                                \"<value>\",\n                            ],\n                        ),\n                    ),\n                ],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/usr/bin\",\n                        mime_type=\"<value>\",\n                        size=918930,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2023-11-27T13:44:20.258Z\"),\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=dateutil.parser.isoparse(\"2024-12-17T15:27:45.433Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://simplistic-meadow.org\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/var/yp\",\n                        mime_type=\"<value>\",\n                        size=409794,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2024-10-25T02:46:47.052Z\"),\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=dateutil.parser.isoparse(\"2025-06-23T21:40:44.558Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://mindless-honesty.com/\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/sbin\",\n                        mime_type=\"<value>\",\n                        size=112711,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2023-08-21T15:39:35.709Z\"),\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=dateutil.parser.isoparse(\"2024-03-05T01:33:52.385Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://cloudy-chasuble.net/\",\n                    ),\n                ],\n                attached_custom_fields=[\n\n                ],\n            ),\n            discount=polar_sdk.DiscountFixedOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.FOREVER,\n                type=polar_sdk.DiscountType.FIXED,\n                amount=224228,\n                currency=\"Uganda Shilling\",\n                created_at=dateutil.parser.isoparse(\"2024-12-27T19:45:50.280Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-04-15T23:37:48.735Z\"),\n                id=\"<value>\",\n                metadata={\n\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2024-12-30T11:33:29.704Z\"),\n                ends_at=dateutil.parser.isoparse(\"2025-08-07T10:12:08.922Z\"),\n                max_redemptions=717090,\n                redemptions_count=633790,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            price=polar_sdk.ProductPriceCustom(\n                created_at=dateutil.parser.isoparse(\"2024-09-16T15:58:20.823Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-09-23T09:29:03.139Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                type=polar_sdk.ProductPriceType.ONE_TIME,\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                price_currency=\"<value>\",\n                minimum_amount=808157,\n                maximum_amount=226703,\n                preset_amount=939535,\n            ),\n            prices=[\n                polar_sdk.LegacyRecurringProductPriceCustom(\n                    created_at=dateutil.parser.isoparse(\"2023-11-17T10:05:58.520Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2023-04-25T16:52:58.082Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    price_currency=\"<value>\",\n                    minimum_amount=20399,\n                    maximum_amount=228255,\n                    preset_amount=876353,\n                ),\n                polar_sdk.ProductPriceFree(\n                    created_at=dateutil.parser.isoparse(\"2024-06-15T07:33:50.720Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2023-02-18T09:48:15.743Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    type=polar_sdk.ProductPriceType.ONE_TIME,\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                ),\n                polar_sdk.ProductPriceFixed(\n                    created_at=dateutil.parser.isoparse(\"2025-04-01T08:49:19.831Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-11-15T12:10:18.586Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    type=polar_sdk.ProductPriceType.ONE_TIME,\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    price_currency=\"<value>\",\n                    price_amount=636919,\n                ),\n            ],\n            meters=[\n\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_revoked_post(request=polar_sdk.WebhookSubscriptionRevokedPayload(\n        data=polar_sdk.Subscription(\n            created_at=dateutil.parser.isoparse(\"2025-11-29T12:00:55.925Z\"),\n            modified_at=dateutil.parser.isoparse(\"2023-03-13T04:36:55.320Z\"),\n            id=\"<value>\",\n            amount=780683,\n            currency=\"CFP Franc\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n            status=polar_sdk.SubscriptionStatus.TRIALING,\n            current_period_start=dateutil.parser.isoparse(\"2023-06-20T05:55:42.170Z\"),\n            current_period_end=dateutil.parser.isoparse(\"2024-05-16T17:55:53.899Z\"),\n            cancel_at_period_end=True,\n            canceled_at=dateutil.parser.isoparse(\"2025-10-25T10:04:20.460Z\"),\n            started_at=dateutil.parser.isoparse(\"2024-09-29T18:36:35.285Z\"),\n            ends_at=dateutil.parser.isoparse(\"2024-02-23T17:26:12.806Z\"),\n            ended_at=dateutil.parser.isoparse(\"2024-01-24T11:12:57.680Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.TOO_EXPENSIVE,\n            customer_cancellation_comment=\"<value>\",\n            price_id=\"<value>\",\n            metadata={\n\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2025-09-02T15:09:07.489Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-06-23T22:13:15.423Z\"),\n                metadata={\n                    \"key\": \"<value>\",\n                    \"key1\": 1826.63,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"SE\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2024-12-07T07:31:07.439Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            user=polar_sdk.SubscriptionUser(\n                id=\"<value>\",\n                email=\"Noemi_Gleichner71@hotmail.com\",\n                public_name=\"<value>\",\n            ),\n            product=polar_sdk.Product(\n                created_at=dateutil.parser.isoparse(\"2023-03-09T13:37:07.084Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-09-27T11:29:41.207Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"evenly footrest whoever happy underpants collaborate license irk yuck whether\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                is_recurring=False,\n                is_archived=True,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": False,\n                    \"key1\": 9348.28,\n                },\n                prices=[\n\n                ],\n                benefits=[\n                    polar_sdk.BenefitCustom(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2025-05-05T15:05:02.863Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-11-17T16:25:39.728Z\"),\n                        metadata={\n                            \"key\": 3207.96,\n                        },\n                        description=\"reprimand boohoo before and\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitCustomProperties(\n                            note=\"<value>\",\n                        ),\n                        is_tax_applicable=False,\n                    ),\n                    polar_sdk.BenefitLicenseKeys(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2025-05-20T20:12:16.322Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-07-25T04:26:10.744Z\"),\n                        metadata={\n                            \"key\": False,\n                        },\n                        description=\"allegation knavishly next unlike\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitLicenseKeysProperties(\n                            prefix=\"<value>\",\n                            expires=polar_sdk.BenefitLicenseKeyExpirationProperties(\n                                ttl=946874,\n                                timeframe=polar_sdk.Timeframe.DAY,\n                            ),\n                            activations=polar_sdk.BenefitLicenseKeyActivationProperties(\n                                limit=11466,\n                                enable_customer_admin=False,\n                            ),\n                            limit_usage=921076,\n                        ),\n                    ),\n                    polar_sdk.BenefitMeterCredit(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2024-02-19T19:14:01.955Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-08-19T08:47:21.294Z\"),\n                        metadata={\n                            \"key\": \"<value>\",\n                        },\n                        description=\"anti ridge reconsideration spirit tromp whereas\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitMeterCreditProperties(\n                            units=650823,\n                            meter_id=\"<value>\",\n                        ),\n                    ),\n                ],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/usr/local/bin\",\n                        mime_type=\"<value>\",\n                        size=554674,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2024-09-12T04:32:59.378Z\"),\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=dateutil.parser.isoparse(\"2023-03-11T13:38:59.234Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://sizzling-distinction.org/\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/usr/sbin\",\n                        mime_type=\"<value>\",\n                        size=974463,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2025-10-25T18:07:36.755Z\"),\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=dateutil.parser.isoparse(\"2025-02-10T23:52:57.207Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://silver-thunderbolt.info/\",\n                    ),\n                ],\n                attached_custom_fields=[\n\n                ],\n            ),\n            discount=polar_sdk.DiscountFixedRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                duration_in_months=528579,\n                type=polar_sdk.DiscountType.FIXED,\n                amount=76103,\n                currency=\"Guyana Dollar\",\n                created_at=dateutil.parser.isoparse(\"2025-10-12T11:15:01.784Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-07-29T05:29:45.670Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": \"<value>\",\n                    \"key1\": 3061.42,\n                    \"key2\": \"<value>\",\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2025-05-01T03:35:09.760Z\"),\n                ends_at=dateutil.parser.isoparse(\"2024-10-04T15:58:28.010Z\"),\n                max_redemptions=269549,\n                redemptions_count=696581,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            price=polar_sdk.LegacyRecurringProductPriceFree(\n                created_at=dateutil.parser.isoparse(\"2024-10-25T16:43:54.572Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-06-30T10:25:57.370Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            ),\n            prices=[\n                polar_sdk.ProductPriceCustom(\n                    created_at=dateutil.parser.isoparse(\"2025-04-10T09:20:53.588Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-07-20T00:25:29.865Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    type=polar_sdk.ProductPriceType.ONE_TIME,\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    price_currency=\"<value>\",\n                    minimum_amount=374556,\n                    maximum_amount=385209,\n                    preset_amount=613688,\n                ),\n            ],\n            meters=[\n\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.uncanceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_uncanceled_post(request=polar_sdk.WebhookSubscriptionUncanceledPayload(\n        data=polar_sdk.Subscription(\n            created_at=dateutil.parser.isoparse(\"2024-06-17T13:11:57.598Z\"),\n            modified_at=dateutil.parser.isoparse(\"2025-03-19T00:33:29.972Z\"),\n            id=\"<value>\",\n            amount=243909,\n            currency=\"Swiss Franc\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            status=polar_sdk.SubscriptionStatus.PAST_DUE,\n            current_period_start=dateutil.parser.isoparse(\"2025-04-10T22:53:35.005Z\"),\n            current_period_end=dateutil.parser.isoparse(\"2025-11-06T14:37:36.152Z\"),\n            cancel_at_period_end=False,\n            canceled_at=dateutil.parser.isoparse(\"2025-11-20T17:26:51.612Z\"),\n            started_at=dateutil.parser.isoparse(\"2023-03-17T23:30:29.508Z\"),\n            ends_at=dateutil.parser.isoparse(\"2024-09-26T10:53:58.966Z\"),\n            ended_at=dateutil.parser.isoparse(\"2023-07-03T15:11:27.108Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.LOW_QUALITY,\n            customer_cancellation_comment=\"<value>\",\n            price_id=\"<value>\",\n            metadata={\n                \"key\": 213.99,\n                \"key1\": 316364,\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2025-01-30T22:08:30.455Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-02-02T22:26:23.446Z\"),\n                metadata={\n                    \"key\": True,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"FR\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2025-10-31T14:46:23.010Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            user=polar_sdk.SubscriptionUser(\n                id=\"<value>\",\n                email=\"King_Windler@yahoo.com\",\n                public_name=\"<value>\",\n            ),\n            product=polar_sdk.Product(\n                created_at=dateutil.parser.isoparse(\"2024-08-27T01:32:28.421Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-11-26T21:39:23.749Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"furthermore where fully pepper\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=False,\n                is_archived=False,\n                organization_id=\"<value>\",\n                metadata={\n\n                },\n                prices=[\n                    polar_sdk.LegacyRecurringProductPriceFree(\n                        created_at=dateutil.parser.isoparse(\"2023-09-25T07:47:22.602Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-07-07T10:48:19.585Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    ),\n                    polar_sdk.ProductPriceMeteredUnit(\n                        created_at=dateutil.parser.isoparse(\"2025-11-06T14:37:36.152Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-05-03T10:18:29.658Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        type=polar_sdk.ProductPriceType.RECURRING,\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        price_currency=\"<value>\",\n                        unit_amount=\"<value>\",\n                        cap_amount=578882,\n                        meter_id=\"<value>\",\n                        meter=polar_sdk.ProductPriceMeter(\n                            id=\"<value>\",\n                            name=\"<value>\",\n                        ),\n                    ),\n                    polar_sdk.LegacyRecurringProductPriceCustom(\n                        created_at=dateutil.parser.isoparse(\"2025-03-15T14:25:14.463Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-10-04T14:51:52.137Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        price_currency=\"<value>\",\n                        minimum_amount=271985,\n                        maximum_amount=316364,\n                        preset_amount=694273,\n                    ),\n                ],\n                benefits=[\n                    polar_sdk.BenefitCustom(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2024-04-14T01:03:37.496Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-10-04T06:49:35.301Z\"),\n                        metadata={\n                            \"key\": 912109,\n                        },\n                        description=\"versus inasmuch uh-huh\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitCustomProperties(\n                            note=\"<value>\",\n                        ),\n                        is_tax_applicable=False,\n                    ),\n                    polar_sdk.BenefitGitHubRepository(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2023-03-30T10:41:05.586Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-10-18T00:21:05.189Z\"),\n                        metadata={\n                            \"key\": False,\n                        },\n                        description=\"surprisingly among gloss before ew quarrelsomely\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitGitHubRepositoryProperties(\n                            repository_owner=\"polarsource\",\n                            repository_name=\"private_repo\",\n                            permission=polar_sdk.Permission.TRIAGE,\n                        ),\n                    ),\n                    polar_sdk.BenefitLicenseKeys(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2023-10-21T02:42:23.850Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-07-30T07:48:30.813Z\"),\n                        metadata={\n                            \"key\": 645337,\n                        },\n                        description=\"foolishly throughout whoever scope\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitLicenseKeysProperties(\n                            prefix=\"<value>\",\n                            expires=polar_sdk.BenefitLicenseKeyExpirationProperties(\n                                ttl=923834,\n                                timeframe=polar_sdk.Timeframe.YEAR,\n                            ),\n                            activations=polar_sdk.BenefitLicenseKeyActivationProperties(\n                                limit=590776,\n                                enable_customer_admin=False,\n                            ),\n                            limit_usage=846802,\n                        ),\n                    ),\n                ],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/etc/periodic\",\n                        mime_type=\"<value>\",\n                        size=110735,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2023-04-29T23:28:30.708Z\"),\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=dateutil.parser.isoparse(\"2025-08-18T12:38:26.974Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://rare-pecan.biz\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/opt/include\",\n                        mime_type=\"<value>\",\n                        size=266430,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2024-02-28T05:07:34.220Z\"),\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=dateutil.parser.isoparse(\"2023-11-01T17:35:18.566Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://far-ice-cream.name\",\n                    ),\n                ],\n                attached_custom_fields=[\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldNumber(\n                            created_at=dateutil.parser.isoparse(\"2024-07-21T13:12:21.266Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2023-10-13T17:36:05.330Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": 6757.66,\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldNumberProperties(),\n                        ),\n                        order=626332,\n                        required=False,\n                    ),\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldCheckbox(\n                            created_at=dateutil.parser.isoparse(\"2023-04-15T01:57:40.170Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2023-03-22T04:24:23.925Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": \"<value>\",\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldCheckboxProperties(),\n                        ),\n                        order=124703,\n                        required=True,\n                    ),\n                ],\n            ),\n            discount=polar_sdk.DiscountPercentageRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.FOREVER,\n                duration_in_months=824864,\n                type=polar_sdk.DiscountType.FIXED,\n                basis_points=560089,\n                created_at=dateutil.parser.isoparse(\"2025-11-16T04:47:47.180Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-08-01T04:44:54.838Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": True,\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2023-06-03T13:48:33.401Z\"),\n                ends_at=dateutil.parser.isoparse(\"2024-07-16T06:03:46.080Z\"),\n                max_redemptions=36204,\n                redemptions_count=939247,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            price=polar_sdk.LegacyRecurringProductPriceCustom(\n                created_at=dateutil.parser.isoparse(\"2024-05-16T15:11:49.398Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-08-09T13:22:10.439Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                price_currency=\"<value>\",\n                minimum_amount=848304,\n                maximum_amount=807422,\n                preset_amount=954601,\n            ),\n            prices=[\n                polar_sdk.ProductPriceFixed(\n                    created_at=dateutil.parser.isoparse(\"2023-04-16T12:10:13.074Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-01-10T20:00:53.719Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    type=polar_sdk.ProductPriceType.ONE_TIME,\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    price_currency=\"<value>\",\n                    price_amount=920569,\n                ),\n            ],\n            meters=[\n\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_updated_post(request=polar_sdk.WebhookSubscriptionUpdatedPayload(\n        data=polar_sdk.Subscription(\n            created_at=dateutil.parser.isoparse(\"2023-08-16T06:35:49.390Z\"),\n            modified_at=dateutil.parser.isoparse(\"2025-11-13T10:48:05.575Z\"),\n            id=\"<value>\",\n            amount=299644,\n            currency=\"Baht\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n            status=polar_sdk.SubscriptionStatus.TRIALING,\n            current_period_start=dateutil.parser.isoparse(\"2025-10-06T07:01:55.000Z\"),\n            current_period_end=dateutil.parser.isoparse(\"2025-01-20T06:59:31.349Z\"),\n            cancel_at_period_end=False,\n            canceled_at=dateutil.parser.isoparse(\"2023-10-04T04:56:04.382Z\"),\n            started_at=dateutil.parser.isoparse(\"2023-01-22T12:57:07.430Z\"),\n            ends_at=dateutil.parser.isoparse(\"2025-08-08T17:53:12.513Z\"),\n            ended_at=dateutil.parser.isoparse(\"2023-10-08T02:40:52.099Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.TOO_EXPENSIVE,\n            customer_cancellation_comment=\"<value>\",\n            price_id=\"<value>\",\n            metadata={\n                \"key\": 394013,\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2025-09-14T04:37:19.722Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-03-24T00:03:13.207Z\"),\n                metadata={\n                    \"key\": \"<value>\",\n                    \"key1\": True,\n                    \"key2\": 3929,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"SE\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2025-03-10T21:57:02.022Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            user=polar_sdk.SubscriptionUser(\n                id=\"<value>\",\n                email=\"Abner86@hotmail.com\",\n                public_name=\"<value>\",\n            ),\n            product=polar_sdk.Product(\n                created_at=dateutil.parser.isoparse(\"2024-08-13T18:10:19.346Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-11-04T08:18:09.170Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"sans now duh mysteriously bleach ack even who joyous\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                is_recurring=False,\n                is_archived=True,\n                organization_id=\"<value>\",\n                metadata={\n\n                },\n                prices=[\n                    polar_sdk.LegacyRecurringProductPriceFree(\n                        created_at=dateutil.parser.isoparse(\"2023-11-25T09:50:52.301Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-06-16T22:58:18.488Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    ),\n                    polar_sdk.LegacyRecurringProductPriceFree(\n                        created_at=dateutil.parser.isoparse(\"2025-01-20T06:59:31.349Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-10-02T11:51:36.131Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    ),\n                ],\n                benefits=[\n                    polar_sdk.BenefitCustom(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2025-08-08T17:53:12.513Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-10-08T02:40:52.099Z\"),\n                        metadata={\n                            \"key\": 4428.59,\n                        },\n                        description=\"amount accurate pleasing delicious book frenetically\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitCustomProperties(\n                            note=\"<value>\",\n                        ),\n                        is_tax_applicable=False,\n                    ),\n                    polar_sdk.BenefitLicenseKeys(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2025-06-01T07:51:49.479Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-04-13T12:53:46.660Z\"),\n                        metadata={\n                            \"key\": \"<value>\",\n                        },\n                        description=\"department seemingly majestically wrongly drat bootleg oh electrify velvety\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitLicenseKeysProperties(\n                            prefix=\"<value>\",\n                            expires=polar_sdk.BenefitLicenseKeyExpirationProperties(\n                                ttl=343130,\n                                timeframe=polar_sdk.Timeframe.YEAR,\n                            ),\n                            activations=polar_sdk.BenefitLicenseKeyActivationProperties(\n                                limit=66044,\n                                enable_customer_admin=False,\n                            ),\n                            limit_usage=838500,\n                        ),\n                    ),\n                ],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/usr/lib\",\n                        mime_type=\"<value>\",\n                        size=385245,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2023-04-12T19:12:21.520Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=dateutil.parser.isoparse(\"2025-05-08T03:07:17.345Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://menacing-dulcimer.org/\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/selinux\",\n                        mime_type=\"<value>\",\n                        size=69343,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2025-05-07T10:45:34.589Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=dateutil.parser.isoparse(\"2024-05-15T10:44:23.423Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://snoopy-quart.net/\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/private/var\",\n                        mime_type=\"<value>\",\n                        size=573795,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2023-09-28T17:34:07.391Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=dateutil.parser.isoparse(\"2024-10-15T18:15:02.073Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://sick-follower.net/\",\n                    ),\n                ],\n                attached_custom_fields=[\n\n                ],\n            ),\n            discount=polar_sdk.DiscountPercentageOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.REPEATING,\n                type=polar_sdk.DiscountType.FIXED,\n                basis_points=936968,\n                created_at=dateutil.parser.isoparse(\"2024-08-25T09:47:45.326Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-06-05T09:14:00.691Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": \"<value>\",\n                    \"key1\": \"<value>\",\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2025-05-10T11:32:31.668Z\"),\n                ends_at=dateutil.parser.isoparse(\"2025-12-13T04:03:07.992Z\"),\n                max_redemptions=782787,\n                redemptions_count=948929,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            price=polar_sdk.LegacyRecurringProductPriceCustom(\n                created_at=dateutil.parser.isoparse(\"2025-05-30T13:10:48.001Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-12-12T00:26:44.150Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                price_currency=\"<value>\",\n                minimum_amount=902240,\n                maximum_amount=199966,\n                preset_amount=75695,\n            ),\n            prices=[\n                polar_sdk.LegacyRecurringProductPriceFree(\n                    created_at=dateutil.parser.isoparse(\"2024-06-22T20:54:57.375Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-06-18T15:11:45.647Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                ),\n                polar_sdk.ProductPriceCustom(\n                    created_at=dateutil.parser.isoparse(\"2025-10-03T06:31:47.366Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2023-01-04T14:07:16.701Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    type=polar_sdk.ProductPriceType.ONE_TIME,\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    price_currency=\"<value>\",\n                    minimum_amount=697774,\n                    maximum_amount=247567,\n                    preset_amount=606425,\n                ),\n                polar_sdk.LegacyRecurringProductPriceFixed(\n                    created_at=dateutil.parser.isoparse(\"2025-04-10T06:30:49.511Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-10-15T05:33:30.452Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    price_currency=\"<value>\",\n                    price_amount=352607,\n                ),\n            ],\n            meters=[\n\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
