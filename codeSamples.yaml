overlay: 1.0.0
info:
  title: CodeSamples overlay for python target
  version: 0.0.0
actions:
  - target: $["paths"]["/v1/benefits/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/benefits/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.create(request={\n        \"type\": \"downloadables\",\n        \"description\": \"delightfully fumigate convection though zowie up bulky electronics\",\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        \"properties\": {\n            \"files\": [\n                \"<value>\",\n            ],\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/benefits/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.benefits.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/benefits/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/benefits/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.update(id=\"<value>\", request_body={\n        \"type\": \"license_keys\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/benefits/{id}/grants"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.grants(id=\"<value>\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/checkout-links/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/checkout-links/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.create(request={\n        \"payment_processor\": \"stripe\",\n        \"allow_discount_codes\": True,\n        \"product_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkout-links/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.checkout_links.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/checkout-links/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkout-links/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.update(id=\"<value>\", checkout_link_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/checkouts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.create(request={\n        \"allow_discount_codes\": True,\n        \"customer_billing_address\": {\n            \"country\": \"SE\",\n        },\n        \"product_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.checkouts.client_get(client_secret=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.checkouts.client_update(client_secret=\"<value>\", checkout_update_public={\n        \"customer_billing_address\": {\n            \"country\": \"FR\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}/confirm"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.client_confirm(client_secret=\"<value>\", checkout_confirm_stripe={\n        \"customer_billing_address\": {\n            \"country\": \"FR\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.update(id=\"<value>\", checkout_update={\n        \"customer_billing_address\": {\n            \"country\": \"FR\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/custom-fields/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/custom-fields/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.create(request={\n        \"type\": \"number\",\n        \"slug\": \"<value>\",\n        \"name\": \"<value>\",\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        \"properties\": {},\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/custom-fields/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.custom_fields.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/custom-fields/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/custom-fields/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.update(id=\"<value>\", custom_field_update={\n        \"type\": \"text\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.benefit_grants.list(security=polar_sdk.CustomerPortalBenefitGrantsListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.benefit_grants.get(security=polar_sdk.CustomerPortalBenefitGrantsGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.benefit_grants.update(security=polar_sdk.CustomerPortalBenefitGrantsUpdateSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\", customer_benefit_grant_update={\n        \"benefit_type\": \"license_keys\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.get(security=polar_sdk.CustomerPortalCustomersGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.update(security=polar_sdk.CustomerPortalCustomersUpdateSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), request={\n        \"billing_address\": {\n            \"country\": \"FR\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.get_payment_methods(security=polar_sdk.CustomerPortalCustomersGetPaymentMethodsSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ))\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.add_payment_method(security=polar_sdk.CustomerPortalCustomersAddPaymentMethodSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), request={\n        \"confirmation_token_id\": \"<id>\",\n        \"set_default\": False,\n        \"return_url\": \"https://slight-digestive.info\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    polar.customer_portal.customers.delete_payment_method(security=polar_sdk.CustomerPortalCustomersDeletePaymentMethodSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<id>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customer-portal/downloadables/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.downloadables.list(security=polar_sdk.CustomerPortalDownloadablesListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/downloadables/{token}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.downloadables.get(token=\"<value>\")\n\n    assert res is not None\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/license-keys/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.list(security=polar_sdk.CustomerPortalLicenseKeysListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/license-keys/activate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.activate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n        \"label\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/license-keys/deactivate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    polar.customer_portal.license_keys.deactivate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n        \"activation_id\": \"<value>\",\n    })\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customer-portal/license-keys/validate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.validate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.get(security=polar_sdk.CustomerPortalLicenseKeysGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.list(security=polar_sdk.CustomerPortalOrdersListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.get(security=polar_sdk.CustomerPortalOrdersGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.invoice(security=polar_sdk.CustomerPortalOrdersInvoiceSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/organizations/{slug}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customer_portal.organizations.get(slug=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.list(security=polar_sdk.CustomerPortalSubscriptionsListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.cancel(security=polar_sdk.CustomerPortalSubscriptionsCancelSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.get(security=polar_sdk.CustomerPortalSubscriptionsGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.update(security=polar_sdk.CustomerPortalSubscriptionsUpdateSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\", customer_subscription_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-sessions/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customer_sessions.create(request={\n        \"customer_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customers/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.create(request={\n        \"external_id\": \"usr_1337\",\n        \"email\": \"customer@example.com\",\n        \"name\": \"John Doe\",\n        \"billing_address\": {\n            \"country\": \"SE\",\n        },\n        \"tax_id\": [\n            \"FR61954506077\",\n            \"eu_vat\",\n        ],\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.customers.delete_external(external_id=\"<id>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customers/external/{external_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get_external(external_id=\"<id>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.update_external(external_id=\"<id>\", customer_update={\n        \"external_id\": \"usr_1337\",\n        \"email\": \"customer@example.com\",\n        \"name\": \"John Doe\",\n        \"billing_address\": {\n            \"country\": \"US\",\n        },\n        \"tax_id\": [\n            \"FR61954506077\",\n            \"eu_vat\",\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/external/{external_id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get_state_external(external_id=\"<id>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.customers.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customers/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.update(id=\"<value>\", customer_update={\n        \"external_id\": \"usr_1337\",\n        \"email\": \"customer@example.com\",\n        \"name\": \"John Doe\",\n        \"billing_address\": {\n            \"country\": \"FR\",\n        },\n        \"tax_id\": [\n            \"FR61954506077\",\n            \"eu_vat\",\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/{id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get_state(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/discounts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/discounts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.create(request={\n        \"duration\": polar_sdk.DiscountDuration.FOREVER,\n        \"duration_in_months\": 417458,\n        \"type\": polar_sdk.DiscountType.FIXED,\n        \"amount\": 69025,\n        \"currency\": \"usd\",\n        \"name\": \"<value>\",\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/discounts/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.discounts.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/discounts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/discounts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.update(id=\"<value>\", discount_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/events/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/events/ingest"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.ingest(request={\n        \"events\": [\n            {\n                \"name\": \"<value>\",\n                \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                \"customer_id\": \"<value>\",\n            },\n            {\n                \"name\": \"<value>\",\n                \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                \"external_customer_id\": \"<id>\",\n            },\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/events/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/external_organizations/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.external_organizations.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/files/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/files/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.create(request={\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        \"name\": \"<value>\",\n        \"mime_type\": \"<value>\",\n        \"size\": 638424,\n        \"upload\": {\n            \"parts\": [\n                {\n                    \"number\": 417458,\n                    \"chunk_start\": 134365,\n                    \"chunk_end\": 69025,\n                },\n            ],\n        },\n        \"service\": \"organization_avatar\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/files/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.files.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/files/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.update(id=\"<value>\", file_patch={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/files/{id}/uploaded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.uploaded(id=\"<value>\", file_upload_completed={\n        \"id\": \"<id>\",\n        \"path\": \"/sys\",\n        \"parts\": [\n            {\n                \"number\": 173116,\n                \"checksum_etag\": \"<value>\",\n                \"checksum_sha256_base64\": \"<value>\",\n            },\n            {\n                \"number\": 894030,\n                \"checksum_etag\": \"<value>\",\n                \"checksum_sha256_base64\": \"<value>\",\n            },\n            {\n                \"number\": 673715,\n                \"checksum_etag\": \"<value>\",\n                \"checksum_sha256_base64\": \"<value>\",\n            },\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/license-keys"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/license-keys/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.update(id=\"<value>\", license_key_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/license-keys/{id}/activations/{activation_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.get_activation(id=\"<value>\", activation_id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/meters/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.create(request={\n        \"name\": \"<value>\",\n        \"filter_\": {\n            \"conjunction\": polar_sdk.FilterConjunction.AND,\n            \"clauses\": [\n\n            ],\n        },\n        \"aggregation\": {\n            \"func\": polar_sdk.Func.SUM,\n            \"property\": \"<value>\",\n        },\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.update(id=\"<value>\", meter_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/{id}/events"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.events(id=\"<value>\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/meters/{id}/quantities"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.quantities(id=\"<value>\", start_timestamp=dateutil.parser.isoparse(\"2023-09-17T00:45:34.608Z\"), end_timestamp=dateutil.parser.isoparse(\"2023-07-21T18:11:39.069Z\"), interval=polar_sdk.TimeInterval.HOUR)\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/metrics/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.metrics.get(start_date=dateutil.parser.parse(\"2025-02-06\").date(), end_date=dateutil.parser.parse(\"2024-09-04\").date(), interval=polar_sdk.TimeInterval.WEEK, organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/metrics/limits"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.metrics.limits()\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.clients.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/oauth2/authorize"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.authorize()\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/introspect"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.oauth2.introspect(request={\n        \"token\": \"<value>\",\n        \"client_id\": \"<id>\",\n        \"client_secret\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/register"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.clients.create(request={\n        \"redirect_uris\": [\n            \"https://inferior-chainstay.com\",\n        ],\n        \"client_name\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.clients.delete(client_id=\"<id>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.clients.get(client_id=\"<id>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["put"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.clients.update(client_id=\"<id>\", o_auth2_client_configuration_update={\n        \"redirect_uris\": [\n            \"https://grown-worth.name\",\n            \"https://worthwhile-avalanche.org/\",\n            \"https://general-digit.com/\",\n        ],\n        \"client_name\": \"<value>\",\n        \"client_id\": \"<id>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/revoke"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.oauth2.revoke(request={\n        \"token\": \"<value>\",\n        \"client_id\": \"<id>\",\n        \"client_secret\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/token"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.oauth2.token(request={\n        \"grant_type\": \"authorization_code\",\n        \"client_id\": \"<id>\",\n        \"client_secret\": \"<value>\",\n        \"code\": \"<value>\",\n        \"redirect_uri\": \"https://old-fort.name\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/userinfo"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.userinfo()\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.orders.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.orders.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.orders.invoice(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/organizations/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/organizations/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.create(request={\n        \"name\": \"<value>\",\n        \"slug\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/organizations/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.get(id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/organizations/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.update(id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", organization_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/products/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.create(request={\n        \"name\": \"<value>\",\n        \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n        \"prices\": [\n            {\n                \"amount_type\": \"custom\",\n                \"price_currency\": \"usd\",\n            },\n            {\n                \"amount_type\": \"custom\",\n                \"price_currency\": \"usd\",\n            },\n        ],\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.update(id=\"<value>\", product_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/{id}/benefits"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.update_benefits(id=\"<value>\", product_benefits_update={\n        \"benefits\": [\n            \"<value>\",\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/refunds/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.refunds.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/refunds/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.refunds.create(request={\n        \"order_id\": \"<value>\",\n        \"reason\": polar_sdk.RefundReason.CUSTOMER_REQUEST,\n        \"amount\": 638424,\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/repositories/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.repositories.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/repositories/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.repositories.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/repositories/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.repositories.update(id=\"<value>\", repository_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/subscriptions/export"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.export(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.revoke(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.update(id=\"<value>\", subscription_update={\n        \"revoke\": True,\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_created_post(request={\n        \"type\": \"benefit.created\",\n        \"data\": {\n            \"created_at\": dateutil.parser.isoparse(\"2023-04-15T11:45:18.891Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2025-06-17T12:04:55.002Z\"),\n            \"id\": \"<value>\",\n            \"type\": \"downloadables\",\n            \"description\": \"vastly lest but\",\n            \"selectable\": False,\n            \"deletable\": False,\n            \"organization_id\": \"<value>\",\n            \"properties\": {\n                \"archived\": {\n                    \"key\": False,\n                },\n                \"files\": [\n                    \"<value>\",\n                ],\n            },\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_updated_post(request={\n        \"type\": \"benefit.updated\",\n        \"data\": {\n            \"created_at\": dateutil.parser.isoparse(\"2025-11-19T14:31:03.333Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2023-08-21T02:54:25.671Z\"),\n            \"id\": \"<value>\",\n            \"type\": \"github_repository\",\n            \"description\": \"merge when gratefully sparse hmph throughout honesty untried gripping um\",\n            \"selectable\": False,\n            \"deletable\": False,\n            \"organization_id\": \"<value>\",\n            \"properties\": {\n                \"repository_owner\": \"polarsource\",\n                \"repository_name\": \"private_repo\",\n                \"permission\": polar_sdk.Permission.PUSH,\n            },\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_created_post(request=polar_sdk.WebhookBenefitGrantCreatedPayload(\n        data=polar_sdk.BenefitGrantWebhook(\n            created_at=dateutil.parser.isoparse(\"2025-01-04T13:03:27.870Z\"),\n            modified_at=dateutil.parser.isoparse(\"2023-05-08T00:47:14.556Z\"),\n            id=\"<value>\",\n            is_granted=True,\n            is_revoked=False,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            user_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer=polar_sdk.Customer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2025-08-25T12:22:42.430Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-03-03T22:39:55.256Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"SE\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2023-04-05T03:50:05.028Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            properties=polar_sdk.BenefitGrantDiscordProperties(),\n            benefit=polar_sdk.BenefitDownloadables(\n                created_at=dateutil.parser.isoparse(\"2023-05-08T00:47:14.556Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-02-20T12:28:33.166Z\"),\n                id=\"<value>\",\n                description=\"ick form ack lest plus worriedly gifted\",\n                selectable=False,\n                deletable=False,\n                organization_id=\"<value>\",\n                properties=polar_sdk.BenefitDownloadablesProperties(\n                    archived={\n                        \"key\": False,\n                    },\n                    files=[\n                        \"<value>\",\n                    ],\n                ),\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_revoked_post(request=polar_sdk.WebhookBenefitGrantRevokedPayload(\n        data=polar_sdk.BenefitGrantWebhook(\n            created_at=dateutil.parser.isoparse(\"2025-03-12T10:35:36.881Z\"),\n            modified_at=dateutil.parser.isoparse(\"2025-04-12T13:10:16.426Z\"),\n            id=\"<value>\",\n            is_granted=True,\n            is_revoked=False,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            user_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer=polar_sdk.Customer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2025-03-29T21:56:48.008Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-07-18T16:16:40.562Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"FR\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2024-11-01T21:51:36.732Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            properties=polar_sdk.BenefitGrantDiscordProperties(),\n            benefit=polar_sdk.BenefitDownloadables(\n                created_at=dateutil.parser.isoparse(\"2025-04-12T13:10:16.426Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-03-08T05:20:11.943Z\"),\n                id=\"<value>\",\n                description=\"incidentally immense scotch meh quaff generously supposing however ugh kindly\",\n                selectable=False,\n                deletable=False,\n                organization_id=\"<value>\",\n                properties=polar_sdk.BenefitDownloadablesProperties(\n                    archived={\n                        \"key\": False,\n                    },\n                    files=[\n                        \"<value>\",\n                    ],\n                ),\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_updated_post(request=polar_sdk.WebhookBenefitGrantUpdatedPayload(\n        data=polar_sdk.BenefitGrantWebhook(\n            created_at=dateutil.parser.isoparse(\"2025-01-02T13:54:42.243Z\"),\n            modified_at=dateutil.parser.isoparse(\"2024-02-25T11:58:59.486Z\"),\n            id=\"<value>\",\n            is_granted=False,\n            is_revoked=False,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            user_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer=polar_sdk.Customer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2025-08-08T07:44:28.757Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-08-31T04:19:19.970Z\"),\n                metadata={\n                    \"key\": \"<value>\",\n                    \"key1\": 549371,\n                    \"key2\": 502350,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"FR\",\n                ),\n                tax_id=[\n                    \"FR61954506077\",\n                    \"eu_vat\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2024-07-15T16:39:59.264Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            properties=polar_sdk.BenefitGrantDiscordProperties(),\n            benefit=polar_sdk.BenefitDownloadables(\n                created_at=dateutil.parser.isoparse(\"2024-02-25T11:58:59.486Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-04-04T12:08:04.168Z\"),\n                id=\"<value>\",\n                description=\"oil painfully spring requirement import lest to tragic\",\n                selectable=False,\n                deletable=False,\n                organization_id=\"<value>\",\n                properties=polar_sdk.BenefitDownloadablesProperties(\n                    archived={\n                        \"key\": False,\n                    },\n                    files=[\n                        \"<value>\",\n                    ],\n                ),\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["checkout.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcheckout_created_post(request=polar_sdk.WebhookCheckoutCreatedPayload(\n        data=polar_sdk.Checkout(\n            created_at=dateutil.parser.isoparse(\"2025-11-12T14:26:42.882Z\"),\n            modified_at=dateutil.parser.isoparse(\"2024-05-27T05:08:06.235Z\"),\n            id=\"<value>\",\n            payment_processor=polar_sdk.PaymentProcessor.STRIPE,\n            status=polar_sdk.CheckoutStatus.FAILED,\n            client_secret=\"<value>\",\n            url=\"https://heavy-beret.com/\",\n            expires_at=dateutil.parser.isoparse(\"2023-02-25T02:26:48.460Z\"),\n            success_url=\"https://sardonic-final.info/\",\n            embed_origin=\"<value>\",\n            amount=962818,\n            tax_amount=6400,\n            currency=\"Yen\",\n            subtotal_amount=648726,\n            total_amount=210702,\n            product_id=\"<value>\",\n            product_price_id=\"<value>\",\n            discount_id=\"<value>\",\n            allow_discount_codes=True,\n            is_discount_applicable=False,\n            is_free_product_price=False,\n            is_payment_required=False,\n            is_payment_setup_required=False,\n            is_payment_form_required=False,\n            customer_id=\"<value>\",\n            customer_name=\"<value>\",\n            customer_email=\"<value>\",\n            customer_ip_address=\"<value>\",\n            customer_billing_address=polar_sdk.Address(\n                country=\"FR\",\n            ),\n            customer_tax_id=\"<id>\",\n            payment_processor_metadata={\n                \"key\": \"<value>\",\n                \"key1\": \"<value>\",\n                \"key2\": \"<value>\",\n            },\n            metadata={\n                \"key\": \"<value>\",\n            },\n            customer_external_id=\"<id>\",\n            products=[\n                polar_sdk.CheckoutProduct(\n                    created_at=dateutil.parser.isoparse(\"2024-02-27T04:46:39.621Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-02-07T04:30:48.802Z\"),\n                    id=\"<value>\",\n                    name=\"<value>\",\n                    description=\"really capitalize um restructure prickly rationale certainly these restfully\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    is_recurring=True,\n                    is_archived=False,\n                    organization_id=\"<value>\",\n                    prices=[\n                        polar_sdk.ProductPriceCustom(\n                            created_at=dateutil.parser.isoparse(\"2025-11-19T15:59:15.588Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2023-11-17T00:11:23.972Z\"),\n                            id=\"<value>\",\n                            is_archived=False,\n                            product_id=\"<value>\",\n                            type=polar_sdk.ProductPriceType.ONE_TIME,\n                            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                            price_currency=\"<value>\",\n                            minimum_amount=82334,\n                            maximum_amount=50275,\n                            preset_amount=473871,\n                        ),\n                    ],\n                    benefits=[\n                        polar_sdk.BenefitBase(\n                            created_at=dateutil.parser.isoparse(\"2025-10-01T00:10:58.922Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2023-01-30T18:58:55.355Z\"),\n                            id=\"<value>\",\n                            type=polar_sdk.BenefitType.DOWNLOADABLES,\n                            description=\"via archaeology scientific forsaken who suspiciously mmm bleak\",\n                            selectable=True,\n                            deletable=False,\n                            organization_id=\"<value>\",\n                        ),\n                    ],\n                    medias=[\n                        polar_sdk.ProductMediaFileRead(\n                            id=\"<value>\",\n                            organization_id=\"<value>\",\n                            name=\"<value>\",\n                            path=\"/usr/include\",\n                            mime_type=\"<value>\",\n                            size=169862,\n                            storage_version=\"<value>\",\n                            checksum_etag=\"<value>\",\n                            checksum_sha256_base64=\"<value>\",\n                            checksum_sha256_hex=\"<value>\",\n                            last_modified_at=dateutil.parser.isoparse(\"2023-06-26T19:30:29.818Z\"),\n                            version=\"<value>\",\n                            is_uploaded=True,\n                            created_at=dateutil.parser.isoparse(\"2024-10-05T17:30:08.836Z\"),\n                            size_readable=\"<value>\",\n                            public_url=\"https://spanish-essence.name\",\n                        ),\n                        polar_sdk.ProductMediaFileRead(\n                            id=\"<value>\",\n                            organization_id=\"<value>\",\n                            name=\"<value>\",\n                            path=\"/etc/mail\",\n                            mime_type=\"<value>\",\n                            size=852701,\n                            storage_version=\"<value>\",\n                            checksum_etag=\"<value>\",\n                            checksum_sha256_base64=\"<value>\",\n                            checksum_sha256_hex=\"<value>\",\n                            last_modified_at=dateutil.parser.isoparse(\"2025-01-15T00:45:10.927Z\"),\n                            version=\"<value>\",\n                            is_uploaded=False,\n                            created_at=dateutil.parser.isoparse(\"2023-01-18T00:51:17.880Z\"),\n                            size_readable=\"<value>\",\n                            public_url=\"https://best-pharmacopoeia.org/\",\n                        ),\n                    ],\n                ),\n                polar_sdk.CheckoutProduct(\n                    created_at=dateutil.parser.isoparse(\"2024-03-12T06:20:21.161Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-06-27T20:20:27.400Z\"),\n                    id=\"<value>\",\n                    name=\"<value>\",\n                    description=\"since hollow massive offensively painfully what questionably destock pish\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    is_recurring=True,\n                    is_archived=False,\n                    organization_id=\"<value>\",\n                    prices=[\n                        polar_sdk.ProductPriceFixed(\n                            created_at=dateutil.parser.isoparse(\"2024-04-03T00:20:23.805Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2025-11-21T05:56:48.487Z\"),\n                            id=\"<value>\",\n                            is_archived=False,\n                            product_id=\"<value>\",\n                            type=polar_sdk.ProductPriceType.ONE_TIME,\n                            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                            price_currency=\"<value>\",\n                            price_amount=648726,\n                        ),\n                        polar_sdk.LegacyRecurringProductPriceFixed(\n                            created_at=dateutil.parser.isoparse(\"2025-04-20T22:18:45.464Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2024-10-18T10:45:47.767Z\"),\n                            id=\"<value>\",\n                            is_archived=False,\n                            product_id=\"<value>\",\n                            recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                            price_currency=\"<value>\",\n                            price_amount=688646,\n                        ),\n                    ],\n                    benefits=[\n\n                    ],\n                    medias=[\n                        polar_sdk.ProductMediaFileRead(\n                            id=\"<value>\",\n                            organization_id=\"<value>\",\n                            name=\"<value>\",\n                            path=\"/etc/namedb\",\n                            mime_type=\"<value>\",\n                            size=721019,\n                            storage_version=\"<value>\",\n                            checksum_etag=\"<value>\",\n                            checksum_sha256_base64=\"<value>\",\n                            checksum_sha256_hex=\"<value>\",\n                            last_modified_at=dateutil.parser.isoparse(\"2024-01-18T04:40:39.968Z\"),\n                            version=\"<value>\",\n                            is_uploaded=False,\n                            created_at=dateutil.parser.isoparse(\"2023-09-29T18:20:07.088Z\"),\n                            size_readable=\"<value>\",\n                            public_url=\"https://similar-impostor.info/\",\n                        ),\n                        polar_sdk.ProductMediaFileRead(\n                            id=\"<value>\",\n                            organization_id=\"<value>\",\n                            name=\"<value>\",\n                            path=\"/root\",\n                            mime_type=\"<value>\",\n                            size=907325,\n                            storage_version=\"<value>\",\n                            checksum_etag=\"<value>\",\n                            checksum_sha256_base64=\"<value>\",\n                            checksum_sha256_hex=\"<value>\",\n                            last_modified_at=dateutil.parser.isoparse(\"2023-02-26T14:50:51.751Z\"),\n                            version=\"<value>\",\n                            is_uploaded=False,\n                            created_at=dateutil.parser.isoparse(\"2025-03-01T12:36:21.395Z\"),\n                            size_readable=\"<value>\",\n                            public_url=\"https://thin-illusion.org/\",\n                        ),\n                    ],\n                ),\n            ],\n            product=polar_sdk.CheckoutProduct(\n                created_at=dateutil.parser.isoparse(\"2023-09-09T02:18:18.878Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-12-30T17:25:31.182Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"roundabout gah oh hm over\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                is_recurring=False,\n                is_archived=False,\n                organization_id=\"<value>\",\n                prices=[\n                    polar_sdk.ProductPriceFree(\n                        created_at=dateutil.parser.isoparse(\"2025-07-31T13:25:31.669Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-11-12T09:40:10.044Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        type=polar_sdk.ProductPriceType.ONE_TIME,\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    ),\n                    polar_sdk.LegacyRecurringProductPriceFixed(\n                        created_at=dateutil.parser.isoparse(\"2025-06-25T22:47:14.264Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-01-27T19:10:37.564Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        price_currency=\"<value>\",\n                        price_amount=18677,\n                    ),\n                ],\n                benefits=[\n                    polar_sdk.BenefitBase(\n                        created_at=dateutil.parser.isoparse(\"2024-05-22T12:15:14.230Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-05-10T15:49:09.927Z\"),\n                        id=\"<value>\",\n                        type=polar_sdk.BenefitType.DOWNLOADABLES,\n                        description=\"consequently pant ha\",\n                        selectable=True,\n                        deletable=True,\n                        organization_id=\"<value>\",\n                    ),\n                    polar_sdk.BenefitBase(\n                        created_at=dateutil.parser.isoparse(\"2024-09-05T11:03:30.226Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-10-27T06:30:15.454Z\"),\n                        id=\"<value>\",\n                        type=polar_sdk.BenefitType.CUSTOM,\n                        description=\"failing clonk kowtow kookily sunbathe ugh delirious now boohoo lean\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                    ),\n                    polar_sdk.BenefitBase(\n                        created_at=dateutil.parser.isoparse(\"2024-04-20T16:45:08.626Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-10-27T21:24:45.236Z\"),\n                        id=\"<value>\",\n                        type=polar_sdk.BenefitType.GITHUB_REPOSITORY,\n                        description=\"until tenderly chapel quantify optimistically excluding aw because amongst emulsify\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                    ),\n                ],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/etc/ppp\",\n                        mime_type=\"<value>\",\n                        size=933572,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2025-12-28T08:49:03.364Z\"),\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=dateutil.parser.isoparse(\"2024-07-14T04:00:39.280Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://back-pear.name/\",\n                    ),\n                ],\n            ),\n            product_price=polar_sdk.ProductPriceFixed(\n                created_at=dateutil.parser.isoparse(\"2023-04-02T00:05:42.586Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-12-15T03:02:38.803Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                type=polar_sdk.ProductPriceType.RECURRING,\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                price_currency=\"<value>\",\n                price_amount=825463,\n            ),\n            discount=polar_sdk.CheckoutDiscountPercentageRepeatDuration(\n                duration=polar_sdk.DiscountDuration.REPEATING,\n                duration_in_months=41338,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                basis_points=818655,\n                id=\"<value>\",\n                name=\"<value>\",\n                code=\"<value>\",\n            ),\n            subscription_id=\"<value>\",\n            attached_custom_fields=[\n                polar_sdk.AttachedCustomField(\n                    custom_field_id=\"<value>\",\n                    custom_field=polar_sdk.CustomFieldSelect(\n                        created_at=dateutil.parser.isoparse(\"2023-01-09T04:38:53.436Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-12-24T07:52:43.518Z\"),\n                        id=\"<value>\",\n                        metadata={\n                            \"key\": \"<value>\",\n                        },\n                        slug=\"<value>\",\n                        name=\"<value>\",\n                        organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        properties=polar_sdk.CustomFieldSelectProperties(\n                            options=[\n                                polar_sdk.CustomFieldSelectOption(\n                                    value=\"<value>\",\n                                    label=\"<value>\",\n                                ),\n                            ],\n                        ),\n                    ),\n                    order=552387,\n                    required=False,\n                ),\n                polar_sdk.AttachedCustomField(\n                    custom_field_id=\"<value>\",\n                    custom_field=polar_sdk.CustomFieldCheckbox(\n                        created_at=dateutil.parser.isoparse(\"2024-04-28T02:33:08.095Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-07-27T09:28:36.892Z\"),\n                        id=\"<value>\",\n                        metadata={\n                            \"key\": \"<value>\",\n                        },\n                        slug=\"<value>\",\n                        name=\"<value>\",\n                        organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        properties=polar_sdk.CustomFieldCheckboxProperties(),\n                    ),\n                    order=576333,\n                    required=False,\n                ),\n            ],\n            customer_metadata={\n                \"key\": 667273,\n            },\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["checkout.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcheckout_updated_post(request=polar_sdk.WebhookCheckoutUpdatedPayload(\n        data=polar_sdk.Checkout(\n            created_at=dateutil.parser.isoparse(\"2025-10-04T13:06:10.658Z\"),\n            modified_at=dateutil.parser.isoparse(\"2024-10-02T21:25:15.366Z\"),\n            id=\"<value>\",\n            payment_processor=polar_sdk.PaymentProcessor.STRIPE,\n            status=polar_sdk.CheckoutStatus.FAILED,\n            client_secret=\"<value>\",\n            url=\"https://square-cafe.biz/\",\n            expires_at=dateutil.parser.isoparse(\"2025-03-25T08:55:11.873Z\"),\n            success_url=\"https://physical-import.name/\",\n            embed_origin=\"<value>\",\n            amount=245418,\n            tax_amount=624213,\n            currency=\"Naira\",\n            subtotal_amount=24587,\n            total_amount=447013,\n            product_id=\"<value>\",\n            product_price_id=\"<value>\",\n            discount_id=\"<value>\",\n            allow_discount_codes=True,\n            is_discount_applicable=True,\n            is_free_product_price=True,\n            is_payment_required=False,\n            is_payment_setup_required=False,\n            is_payment_form_required=True,\n            customer_id=\"<value>\",\n            customer_name=\"<value>\",\n            customer_email=\"<value>\",\n            customer_ip_address=\"<value>\",\n            customer_billing_address=polar_sdk.Address(\n                country=\"FR\",\n            ),\n            customer_tax_id=\"<id>\",\n            payment_processor_metadata={\n                \"key\": \"<value>\",\n            },\n            metadata={\n\n            },\n            customer_external_id=\"<id>\",\n            products=[\n                polar_sdk.CheckoutProduct(\n                    created_at=dateutil.parser.isoparse(\"2024-03-12T12:25:44.387Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-03-10T17:45:08.857Z\"),\n                    id=\"<value>\",\n                    name=\"<value>\",\n                    description=\"on likewise growing capsize lest overcook vice independence strategy magnetize\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    is_recurring=False,\n                    is_archived=False,\n                    organization_id=\"<value>\",\n                    prices=[\n\n                    ],\n                    benefits=[\n                        polar_sdk.BenefitBase(\n                            created_at=dateutil.parser.isoparse(\"2023-02-02T21:51:07.680Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2025-02-22T05:03:37.259Z\"),\n                            id=\"<value>\",\n                            type=polar_sdk.BenefitType.GITHUB_REPOSITORY,\n                            description=\"kiddingly likewise inveigle\",\n                            selectable=True,\n                            deletable=False,\n                            organization_id=\"<value>\",\n                        ),\n                        polar_sdk.BenefitBase(\n                            created_at=dateutil.parser.isoparse(\"2024-03-23T22:28:05.345Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2025-04-30T11:01:37.991Z\"),\n                            id=\"<value>\",\n                            type=polar_sdk.BenefitType.LICENSE_KEYS,\n                            description=\"repeatedly perky capsize shred loudly though whoever millet\",\n                            selectable=False,\n                            deletable=False,\n                            organization_id=\"<value>\",\n                        ),\n                    ],\n                    medias=[\n                        polar_sdk.ProductMediaFileRead(\n                            id=\"<value>\",\n                            organization_id=\"<value>\",\n                            name=\"<value>\",\n                            path=\"/home\",\n                            mime_type=\"<value>\",\n                            size=339556,\n                            storage_version=\"<value>\",\n                            checksum_etag=\"<value>\",\n                            checksum_sha256_base64=\"<value>\",\n                            checksum_sha256_hex=\"<value>\",\n                            last_modified_at=dateutil.parser.isoparse(\"2024-09-01T01:36:50.867Z\"),\n                            version=\"<value>\",\n                            is_uploaded=False,\n                            created_at=dateutil.parser.isoparse(\"2025-06-17T05:19:25.570Z\"),\n                            size_readable=\"<value>\",\n                            public_url=\"https://forceful-peninsula.name/\",\n                        ),\n                    ],\n                ),\n                polar_sdk.CheckoutProduct(\n                    created_at=dateutil.parser.isoparse(\"2023-01-07T16:39:06.170Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-07-02T04:06:47.300Z\"),\n                    id=\"<value>\",\n                    name=\"<value>\",\n                    description=\"ruin wiggly abaft\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    is_recurring=False,\n                    is_archived=False,\n                    organization_id=\"<value>\",\n                    prices=[\n\n                    ],\n                    benefits=[\n                        polar_sdk.BenefitBase(\n                            created_at=dateutil.parser.isoparse(\"2023-01-13T15:01:23.486Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2025-01-22T18:51:34.092Z\"),\n                            id=\"<value>\",\n                            type=polar_sdk.BenefitType.DISCORD,\n                            description=\"that resource whoa scarcely\",\n                            selectable=True,\n                            deletable=True,\n                            organization_id=\"<value>\",\n                        ),\n                        polar_sdk.BenefitBase(\n                            created_at=dateutil.parser.isoparse(\"2025-10-31T20:58:36.719Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2025-11-05T11:15:53.647Z\"),\n                            id=\"<value>\",\n                            type=polar_sdk.BenefitType.CUSTOM,\n                            description=\"recovery queasily despite concrete independence celsius ouch\",\n                            selectable=True,\n                            deletable=True,\n                            organization_id=\"<value>\",\n                        ),\n                    ],\n                    medias=[\n                        polar_sdk.ProductMediaFileRead(\n                            id=\"<value>\",\n                            organization_id=\"<value>\",\n                            name=\"<value>\",\n                            path=\"/boot\",\n                            mime_type=\"<value>\",\n                            size=913510,\n                            storage_version=\"<value>\",\n                            checksum_etag=\"<value>\",\n                            checksum_sha256_base64=\"<value>\",\n                            checksum_sha256_hex=\"<value>\",\n                            last_modified_at=dateutil.parser.isoparse(\"2023-09-10T21:22:45.561Z\"),\n                            version=\"<value>\",\n                            is_uploaded=False,\n                            created_at=dateutil.parser.isoparse(\"2023-05-08T03:57:28.293Z\"),\n                            size_readable=\"<value>\",\n                            public_url=\"https://stable-fort.org\",\n                        ),\n                        polar_sdk.ProductMediaFileRead(\n                            id=\"<value>\",\n                            organization_id=\"<value>\",\n                            name=\"<value>\",\n                            path=\"/System\",\n                            mime_type=\"<value>\",\n                            size=604454,\n                            storage_version=\"<value>\",\n                            checksum_etag=\"<value>\",\n                            checksum_sha256_base64=\"<value>\",\n                            checksum_sha256_hex=\"<value>\",\n                            last_modified_at=dateutil.parser.isoparse(\"2024-05-15T10:29:39.214Z\"),\n                            version=\"<value>\",\n                            is_uploaded=True,\n                            created_at=dateutil.parser.isoparse(\"2024-01-19T16:36:20.955Z\"),\n                            size_readable=\"<value>\",\n                            public_url=\"https://simplistic-simple.biz\",\n                        ),\n                    ],\n                ),\n                polar_sdk.CheckoutProduct(\n                    created_at=dateutil.parser.isoparse(\"2024-04-10T05:20:18.358Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2023-06-22T09:12:37.578Z\"),\n                    id=\"<value>\",\n                    name=\"<value>\",\n                    description=\"yesterday bleakly sheathe yawningly tinted untrue\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    is_recurring=True,\n                    is_archived=False,\n                    organization_id=\"<value>\",\n                    prices=[\n                        polar_sdk.ProductPriceCustom(\n                            created_at=dateutil.parser.isoparse(\"2025-10-20T04:48:05.954Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2024-03-12T21:45:21.173Z\"),\n                            id=\"<value>\",\n                            is_archived=False,\n                            product_id=\"<value>\",\n                            type=polar_sdk.ProductPriceType.RECURRING,\n                            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                            price_currency=\"<value>\",\n                            minimum_amount=316079,\n                            maximum_amount=743040,\n                            preset_amount=306145,\n                        ),\n                        polar_sdk.ProductPriceCustom(\n                            created_at=dateutil.parser.isoparse(\"2024-10-03T07:55:07.025Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2023-09-26T23:29:16.889Z\"),\n                            id=\"<value>\",\n                            is_archived=False,\n                            product_id=\"<value>\",\n                            type=polar_sdk.ProductPriceType.RECURRING,\n                            recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                            price_currency=\"<value>\",\n                            minimum_amount=24587,\n                            maximum_amount=447013,\n                            preset_amount=371362,\n                        ),\n                        polar_sdk.LegacyRecurringProductPriceCustom(\n                            created_at=dateutil.parser.isoparse(\"2025-08-02T14:33:19.677Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2024-11-17T10:36:50.593Z\"),\n                            id=\"<value>\",\n                            is_archived=False,\n                            product_id=\"<value>\",\n                            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                            price_currency=\"<value>\",\n                            minimum_amount=995460,\n                            maximum_amount=461061,\n                            preset_amount=134244,\n                        ),\n                    ],\n                    benefits=[\n                        polar_sdk.BenefitBase(\n                            created_at=dateutil.parser.isoparse(\"2024-07-07T23:56:09.903Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2024-09-12T11:04:17.318Z\"),\n                            id=\"<value>\",\n                            type=polar_sdk.BenefitType.DISCORD,\n                            description=\"knottily huzzah ick\",\n                            selectable=True,\n                            deletable=False,\n                            organization_id=\"<value>\",\n                        ),\n                        polar_sdk.BenefitBase(\n                            created_at=dateutil.parser.isoparse(\"2024-02-14T16:02:41.163Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2023-04-28T06:23:40.197Z\"),\n                            id=\"<value>\",\n                            type=polar_sdk.BenefitType.DISCORD,\n                            description=\"before inasmuch appreciate\",\n                            selectable=True,\n                            deletable=False,\n                            organization_id=\"<value>\",\n                        ),\n                    ],\n                    medias=[\n                        polar_sdk.ProductMediaFileRead(\n                            id=\"<value>\",\n                            organization_id=\"<value>\",\n                            name=\"<value>\",\n                            path=\"/usr/sbin\",\n                            mime_type=\"<value>\",\n                            size=165243,\n                            storage_version=\"<value>\",\n                            checksum_etag=\"<value>\",\n                            checksum_sha256_base64=\"<value>\",\n                            checksum_sha256_hex=\"<value>\",\n                            last_modified_at=dateutil.parser.isoparse(\"2024-06-20T00:42:56.885Z\"),\n                            version=\"<value>\",\n                            is_uploaded=True,\n                            created_at=dateutil.parser.isoparse(\"2024-06-03T23:30:54.188Z\"),\n                            size_readable=\"<value>\",\n                            public_url=\"https://pleasing-provider.biz\",\n                        ),\n                    ],\n                ),\n            ],\n            product=polar_sdk.CheckoutProduct(\n                created_at=dateutil.parser.isoparse(\"2025-03-02T07:44:00.713Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-11-07T21:48:42.673Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"recommendation soupy tuxedo emboss unlike inscribe frankly zowie um\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=True,\n                is_archived=False,\n                organization_id=\"<value>\",\n                prices=[\n                    polar_sdk.ProductPriceCustom(\n                        created_at=dateutil.parser.isoparse(\"2024-03-10T17:45:08.857Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-08-21T20:24:37.634Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        type=polar_sdk.ProductPriceType.ONE_TIME,\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        price_currency=\"<value>\",\n                        minimum_amount=688507,\n                        maximum_amount=907403,\n                        preset_amount=166544,\n                    ),\n                    polar_sdk.LegacyRecurringProductPriceFixed(\n                        created_at=dateutil.parser.isoparse(\"2025-05-08T16:44:17.277Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-12-03T09:52:08.965Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        price_currency=\"<value>\",\n                        price_amount=751656,\n                    ),\n                ],\n                benefits=[\n                    polar_sdk.BenefitBase(\n                        created_at=dateutil.parser.isoparse(\"2023-08-11T22:46:57.443Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-04-27T10:34:15.837Z\"),\n                        id=\"<value>\",\n                        type=polar_sdk.BenefitType.GITHUB_REPOSITORY,\n                        description=\"of sit jut\",\n                        selectable=True,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                    ),\n                    polar_sdk.BenefitBase(\n                        created_at=dateutil.parser.isoparse(\"2024-08-22T01:13:57.044Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-09-18T08:20:48.636Z\"),\n                        id=\"<value>\",\n                        type=polar_sdk.BenefitType.DOWNLOADABLES,\n                        description=\"relative curiously grim to\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                    ),\n                ],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/home/user\",\n                        mime_type=\"<value>\",\n                        size=558866,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2023-07-21T12:30:10.295Z\"),\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=dateutil.parser.isoparse(\"2023-11-12T16:29:20.536Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://silver-contractor.org\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/usr/ports\",\n                        mime_type=\"<value>\",\n                        size=934999,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2025-09-19T02:05:47.978Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=dateutil.parser.isoparse(\"2023-04-19T21:25:09.653Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://ashamed-platter.com\",\n                    ),\n                ],\n            ),\n            product_price=polar_sdk.LegacyRecurringProductPriceFree(\n                created_at=dateutil.parser.isoparse(\"2024-04-13T13:45:30.435Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-12-31T21:16:51.807Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            ),\n            discount=polar_sdk.CheckoutDiscountPercentageOnceForeverDuration(\n                duration=polar_sdk.DiscountDuration.FOREVER,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                basis_points=701511,\n                id=\"<value>\",\n                name=\"<value>\",\n                code=\"<value>\",\n            ),\n            subscription_id=\"<value>\",\n            attached_custom_fields=[\n                polar_sdk.AttachedCustomField(\n                    custom_field_id=\"<value>\",\n                    custom_field=polar_sdk.CustomFieldDate(\n                        created_at=dateutil.parser.isoparse(\"2025-06-06T19:17:28.589Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-02-23T18:15:44.994Z\"),\n                        id=\"<value>\",\n                        metadata={\n                            \"key\": 343034,\n                        },\n                        slug=\"<value>\",\n                        name=\"<value>\",\n                        organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        properties=polar_sdk.CustomFieldDateProperties(),\n                    ),\n                    order=177975,\n                    required=False,\n                ),\n                polar_sdk.AttachedCustomField(\n                    custom_field_id=\"<value>\",\n                    custom_field=polar_sdk.CustomFieldNumber(\n                        created_at=dateutil.parser.isoparse(\"2023-01-18T13:42:58.942Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-09-27T11:53:33.602Z\"),\n                        id=\"<value>\",\n                        metadata={\n                            \"key\": 388366,\n                        },\n                        slug=\"<value>\",\n                        name=\"<value>\",\n                        organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        properties=polar_sdk.CustomFieldNumberProperties(),\n                    ),\n                    order=492106,\n                    required=True,\n                ),\n            ],\n            customer_metadata={\n                \"key\": 354923,\n            },\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["customer.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcustomer_created_post(request={\n        \"type\": \"customer.created\",\n        \"data\": {\n            \"id\": \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n            \"created_at\": dateutil.parser.isoparse(\"2023-11-05T00:02:45.979Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2025-11-25T19:38:56.737Z\"),\n            \"metadata\": {\n                \"key\": True,\n            },\n            \"external_id\": \"usr_1337\",\n            \"email\": \"customer@example.com\",\n            \"email_verified\": True,\n            \"name\": \"John Doe\",\n            \"billing_address\": {\n                \"country\": \"SE\",\n            },\n            \"tax_id\": [\n                \"FR61954506077\",\n                \"eu_vat\",\n            ],\n            \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"deleted_at\": dateutil.parser.isoparse(\"2024-12-23T01:13:50.641Z\"),\n            \"avatar_url\": \"https://www.gravatar.com/avatar/xxx?d=blank\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["customer.deleted"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcustomer_deleted_post(request={\n        \"type\": \"customer.deleted\",\n        \"data\": {\n            \"id\": \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n            \"created_at\": dateutil.parser.isoparse(\"2023-07-23T22:06:15.045Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2025-04-24T07:05:50.504Z\"),\n            \"metadata\": {\n                \"key\": \"<value>\",\n            },\n            \"external_id\": \"usr_1337\",\n            \"email\": \"customer@example.com\",\n            \"email_verified\": True,\n            \"name\": \"John Doe\",\n            \"billing_address\": {\n                \"country\": \"US\",\n            },\n            \"tax_id\": [\n                \"FR61954506077\",\n                \"eu_vat\",\n            ],\n            \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"deleted_at\": dateutil.parser.isoparse(\"2024-05-11T04:45:12.206Z\"),\n            \"avatar_url\": \"https://www.gravatar.com/avatar/xxx?d=blank\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["customer.state_changed"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcustomer_state_changed_post(request={\n        \"type\": \"customer.state_changed\",\n        \"data\": {\n            \"id\": \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n            \"created_at\": dateutil.parser.isoparse(\"2024-04-26T07:11:39.517Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2023-06-21T11:54:36.368Z\"),\n            \"metadata\": {\n                \"key\": 661266,\n                \"key1\": 162534,\n            },\n            \"external_id\": \"usr_1337\",\n            \"email\": \"customer@example.com\",\n            \"email_verified\": True,\n            \"name\": \"John Doe\",\n            \"billing_address\": {\n                \"country\": \"US\",\n            },\n            \"tax_id\": [\n                \"FR61954506077\",\n                \"eu_vat\",\n            ],\n            \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"deleted_at\": dateutil.parser.isoparse(\"2025-11-01T16:24:29.890Z\"),\n            \"active_subscriptions\": [\n                {\n                    \"id\": \"e5149aae-e521-42b9-b24c-abb3d71eea2e\",\n                    \"created_at\": dateutil.parser.isoparse(\"2025-12-23T00:00:00.457Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2024-03-19T21:14:46.825Z\"),\n                    \"metadata\": {\n\n                    },\n                    \"status\": \"active\",\n                    \"amount\": 1000,\n                    \"currency\": \"usd\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    \"current_period_start\": dateutil.parser.isoparse(\"2025-02-03T13:37:00Z\"),\n                    \"current_period_end\": dateutil.parser.isoparse(\"2025-03-03T13:37:00Z\"),\n                    \"cancel_at_period_end\": False,\n                    \"canceled_at\": None,\n                    \"started_at\": dateutil.parser.isoparse(\"2025-01-03T13:37:00Z\"),\n                    \"ends_at\": None,\n                    \"product_id\": \"d8dd2de1-21b7-4a41-8bc3-ce909c0cfe23\",\n                    \"discount_id\": None,\n                    \"price_id\": \"196ca717-4d84-4d28-a1b8-777255797dbc\",\n                },\n                {\n                    \"id\": \"e5149aae-e521-42b9-b24c-abb3d71eea2e\",\n                    \"created_at\": dateutil.parser.isoparse(\"2025-06-03T06:20:38.244Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2025-06-03T23:57:08.417Z\"),\n                    \"metadata\": {\n                        \"key\": 903699,\n                        \"key1\": 716732,\n                        \"key2\": True,\n                    },\n                    \"status\": \"active\",\n                    \"amount\": 1000,\n                    \"currency\": \"usd\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    \"current_period_start\": dateutil.parser.isoparse(\"2025-02-03T13:37:00Z\"),\n                    \"current_period_end\": dateutil.parser.isoparse(\"2025-03-03T13:37:00Z\"),\n                    \"cancel_at_period_end\": False,\n                    \"canceled_at\": None,\n                    \"started_at\": dateutil.parser.isoparse(\"2025-01-03T13:37:00Z\"),\n                    \"ends_at\": None,\n                    \"product_id\": \"d8dd2de1-21b7-4a41-8bc3-ce909c0cfe23\",\n                    \"discount_id\": None,\n                    \"price_id\": \"196ca717-4d84-4d28-a1b8-777255797dbc\",\n                },\n            ],\n            \"granted_benefits\": [\n\n            ],\n            \"avatar_url\": \"https://www.gravatar.com/avatar/xxx?d=blank\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["customer.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcustomer_updated_post(request={\n        \"type\": \"customer.updated\",\n        \"data\": {\n            \"id\": \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n            \"created_at\": dateutil.parser.isoparse(\"2023-10-11T01:52:16.669Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2024-07-17T00:54:05.167Z\"),\n            \"metadata\": {\n                \"key\": 906944,\n                \"key1\": \"<value>\",\n            },\n            \"external_id\": \"usr_1337\",\n            \"email\": \"customer@example.com\",\n            \"email_verified\": True,\n            \"name\": \"John Doe\",\n            \"billing_address\": {\n                \"country\": \"US\",\n            },\n            \"tax_id\": [\n                \"FR61954506077\",\n                \"eu_vat\",\n            ],\n            \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"deleted_at\": dateutil.parser.isoparse(\"2025-10-11T03:02:11.318Z\"),\n            \"avatar_url\": \"https://www.gravatar.com/avatar/xxx?d=blank\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_created_post(request=polar_sdk.WebhookOrderCreatedPayload(\n        data=polar_sdk.Order(\n            created_at=dateutil.parser.isoparse(\"2024-11-11T12:46:15.007Z\"),\n            modified_at=dateutil.parser.isoparse(\"2024-03-23T03:54:38.261Z\"),\n            id=\"<value>\",\n            metadata={\n                \"key\": \"<value>\",\n                \"key1\": \"<value>\",\n            },\n            status=polar_sdk.OrderStatus.PAID,\n            paid=True,\n            subtotal_amount=81588,\n            discount_amount=605593,\n            net_amount=738083,\n            amount=409401,\n            tax_amount=229323,\n            total_amount=543579,\n            refunded_amount=909216,\n            refunded_tax_amount=983596,\n            currency=\"Lesotho Loti\",\n            billing_reason=polar_sdk.OrderBillingReason.SUBSCRIPTION_CREATE,\n            billing_address=polar_sdk.Address(\n                country=\"US\",\n            ),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            product_price_id=\"<value>\",\n            discount_id=\"<value>\",\n            subscription_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer=polar_sdk.OrderCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2024-07-09T15:43:21.363Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-02-28T23:50:54.596Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2025-08-11T14:36:04.800Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            user=polar_sdk.OrderUser(\n                id=\"<value>\",\n                email=\"Madisen.Walker@gmail.com\",\n                public_name=\"<value>\",\n            ),\n            product=polar_sdk.OrderProduct(\n                created_at=dateutil.parser.isoparse(\"2025-01-19T08:45:08.985Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-05-22T16:28:34.624Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"er especially but searchingly except married whereas healthily the adolescent\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                is_recurring=True,\n                is_archived=False,\n                organization_id=\"<value>\",\n            ),\n            product_price=polar_sdk.ProductPriceCustom(\n                created_at=dateutil.parser.isoparse(\"2025-03-27T08:15:55.821Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-11-08T15:41:27.758Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                type=polar_sdk.ProductPriceType.ONE_TIME,\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                price_currency=\"<value>\",\n                minimum_amount=81588,\n                maximum_amount=605593,\n                preset_amount=738083,\n            ),\n            discount=polar_sdk.DiscountPercentageOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.REPEATING,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                basis_points=818565,\n                created_at=dateutil.parser.isoparse(\"2023-06-21T07:48:19.604Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-09-20T12:07:51.926Z\"),\n                id=\"<value>\",\n                metadata={\n\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2025-10-26T04:20:46.828Z\"),\n                ends_at=dateutil.parser.isoparse(\"2024-02-21T07:49:51.858Z\"),\n                max_redemptions=162785,\n                redemptions_count=667520,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            subscription=polar_sdk.OrderSubscription(\n                metadata={\n                    \"key\": \"<value>\",\n                },\n                created_at=dateutil.parser.isoparse(\"2023-07-16T15:15:20.704Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-07-20T01:25:23.024Z\"),\n                id=\"<value>\",\n                amount=913744,\n                currency=\"South Sudanese pound\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                status=polar_sdk.SubscriptionStatus.INCOMPLETE_EXPIRED,\n                current_period_start=dateutil.parser.isoparse(\"2025-09-25T00:56:37.047Z\"),\n                current_period_end=dateutil.parser.isoparse(\"2024-09-20T00:41:47.938Z\"),\n                cancel_at_period_end=False,\n                canceled_at=dateutil.parser.isoparse(\"2025-01-27T10:45:43.275Z\"),\n                started_at=dateutil.parser.isoparse(\"2024-07-14T13:43:10.873Z\"),\n                ends_at=dateutil.parser.isoparse(\"2024-09-26T20:33:45.975Z\"),\n                ended_at=dateutil.parser.isoparse(\"2024-05-22T17:48:45.407Z\"),\n                customer_id=\"<value>\",\n                product_id=\"<value>\",\n                discount_id=\"<value>\",\n                checkout_id=\"<value>\",\n                customer_cancellation_reason=polar_sdk.CustomerCancellationReason.SWITCHED_SERVICE,\n                customer_cancellation_comment=\"<value>\",\n                price_id=\"<value>\",\n                user_id=\"<value>\",\n            ),\n            items=[\n                polar_sdk.OrderItemSchema(\n                    created_at=dateutil.parser.isoparse(\"2025-09-21T14:39:10.503Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-06-16T21:40:05.453Z\"),\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=575297,\n                    tax_amount=447313,\n                    proration=True,\n                    product_price_id=\"<value>\",\n                ),\n                polar_sdk.OrderItemSchema(\n                    created_at=dateutil.parser.isoparse(\"2023-09-19T11:57:28.594Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-03-10T19:31:46.233Z\"),\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=392620,\n                    tax_amount=171855,\n                    proration=True,\n                    product_price_id=\"<value>\",\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.paid"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_paid_post(request=polar_sdk.WebhookOrderPaidPayload(\n        data=polar_sdk.Order(\n            created_at=dateutil.parser.isoparse(\"2023-06-20T16:51:26.974Z\"),\n            modified_at=dateutil.parser.isoparse(\"2023-07-05T02:29:13.883Z\"),\n            id=\"<value>\",\n            metadata={\n                \"key\": \"<value>\",\n            },\n            status=polar_sdk.OrderStatus.PARTIALLY_REFUNDED,\n            paid=True,\n            subtotal_amount=789757,\n            discount_amount=296121,\n            net_amount=852158,\n            amount=356116,\n            tax_amount=518304,\n            total_amount=963472,\n            refunded_amount=214173,\n            refunded_tax_amount=945808,\n            currency=\"Vatu\",\n            billing_reason=polar_sdk.OrderBillingReason.SUBSCRIPTION_CYCLE,\n            billing_address=polar_sdk.Address(\n                country=\"US\",\n            ),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            product_price_id=\"<value>\",\n            discount_id=\"<value>\",\n            subscription_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer=polar_sdk.OrderCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2024-03-15T20:12:34.914Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-01-21T10:43:46.171Z\"),\n                metadata={\n                    \"key\": \"<value>\",\n                    \"key1\": 532881,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"SE\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2025-06-04T01:01:09.426Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            user=polar_sdk.OrderUser(\n                id=\"<value>\",\n                email=\"Candice71@yahoo.com\",\n                public_name=\"<value>\",\n            ),\n            product=polar_sdk.OrderProduct(\n                created_at=dateutil.parser.isoparse(\"2025-10-13T17:55:13.737Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-02-01T15:29:39.557Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"whoa yet between ack yahoo far beyond\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                is_recurring=True,\n                is_archived=False,\n                organization_id=\"<value>\",\n            ),\n            product_price=polar_sdk.LegacyRecurringProductPriceCustom(\n                created_at=dateutil.parser.isoparse(\"2024-04-13T11:21:08.225Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-11-03T02:24:15.609Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                price_currency=\"<value>\",\n                minimum_amount=789757,\n                maximum_amount=296121,\n                preset_amount=852158,\n            ),\n            discount=polar_sdk.DiscountPercentageOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                type=polar_sdk.DiscountType.FIXED,\n                basis_points=192601,\n                created_at=dateutil.parser.isoparse(\"2023-03-27T12:32:36.522Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-07-19T16:17:24.047Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": 518304,\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2024-10-01T01:32:05.087Z\"),\n                ends_at=dateutil.parser.isoparse(\"2025-03-15T21:06:37.169Z\"),\n                max_redemptions=474664,\n                redemptions_count=590023,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            subscription=polar_sdk.OrderSubscription(\n                metadata={\n\n                },\n                created_at=dateutil.parser.isoparse(\"2025-07-12T14:56:35.077Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-11-06T20:14:02.358Z\"),\n                id=\"<value>\",\n                amount=681345,\n                currency=\"Egyptian Pound\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                status=polar_sdk.SubscriptionStatus.ACTIVE,\n                current_period_start=dateutil.parser.isoparse(\"2025-11-01T02:57:30.371Z\"),\n                current_period_end=dateutil.parser.isoparse(\"2025-09-13T23:53:46.890Z\"),\n                cancel_at_period_end=True,\n                canceled_at=dateutil.parser.isoparse(\"2025-11-25T02:54:38.042Z\"),\n                started_at=dateutil.parser.isoparse(\"2025-07-10T15:24:37.366Z\"),\n                ends_at=dateutil.parser.isoparse(\"2025-03-24T18:32:32.732Z\"),\n                ended_at=dateutil.parser.isoparse(\"2023-02-05T07:45:22.279Z\"),\n                customer_id=\"<value>\",\n                product_id=\"<value>\",\n                discount_id=\"<value>\",\n                checkout_id=\"<value>\",\n                customer_cancellation_reason=polar_sdk.CustomerCancellationReason.CUSTOMER_SERVICE,\n                customer_cancellation_comment=\"<value>\",\n                price_id=\"<value>\",\n                user_id=\"<value>\",\n            ),\n            items=[\n                polar_sdk.OrderItemSchema(\n                    created_at=dateutil.parser.isoparse(\"2024-10-21T20:50:24.490Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-05-21T19:26:34.740Z\"),\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=684174,\n                    tax_amount=154582,\n                    proration=True,\n                    product_price_id=\"<value>\",\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.refunded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_refunded_post(request=polar_sdk.WebhookOrderRefundedPayload(\n        data=polar_sdk.Order(\n            created_at=dateutil.parser.isoparse(\"2023-01-02T23:38:59.363Z\"),\n            modified_at=dateutil.parser.isoparse(\"2025-02-28T12:31:35.473Z\"),\n            id=\"<value>\",\n            metadata={\n                \"key\": True,\n                \"key1\": True,\n                \"key2\": \"<value>\",\n            },\n            status=polar_sdk.OrderStatus.REFUNDED,\n            paid=True,\n            subtotal_amount=824083,\n            discount_amount=158895,\n            net_amount=509231,\n            amount=890779,\n            tax_amount=952371,\n            total_amount=607176,\n            refunded_amount=142855,\n            refunded_tax_amount=315343,\n            currency=\"Mexican Peso\",\n            billing_reason=polar_sdk.OrderBillingReason.PURCHASE,\n            billing_address=polar_sdk.Address(\n                country=\"FR\",\n            ),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            product_price_id=\"<value>\",\n            discount_id=\"<value>\",\n            subscription_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer=polar_sdk.OrderCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2023-09-11T11:53:56.379Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-04-10T12:40:37.234Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"FR\",\n                ),\n                tax_id=[\n                    \"FR61954506077\",\n                    \"eu_vat\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2023-10-03T14:13:24.321Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            user=polar_sdk.OrderUser(\n                id=\"<value>\",\n                email=\"Hipolito63@gmail.com\",\n                public_name=\"<value>\",\n            ),\n            product=polar_sdk.OrderProduct(\n                created_at=dateutil.parser.isoparse(\"2023-10-24T08:02:26.369Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-02-24T04:06:14.907Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"apropos morning fess embody outlandish kit metallic willing\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=False,\n                is_archived=True,\n                organization_id=\"<value>\",\n            ),\n            product_price=polar_sdk.LegacyRecurringProductPriceFree(\n                created_at=dateutil.parser.isoparse(\"2025-10-05T18:25:49.221Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-10-25T11:18:00.181Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            ),\n            discount=polar_sdk.DiscountPercentageOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.REPEATING,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                basis_points=374000,\n                created_at=dateutil.parser.isoparse(\"2025-05-14T18:27:08.842Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-03-29T01:39:29.288Z\"),\n                id=\"<value>\",\n                metadata={\n\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2024-03-08T18:37:23.056Z\"),\n                ends_at=dateutil.parser.isoparse(\"2025-08-05T12:12:48.244Z\"),\n                max_redemptions=798101,\n                redemptions_count=4308,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            subscription=polar_sdk.OrderSubscription(\n                metadata={\n\n                },\n                created_at=dateutil.parser.isoparse(\"2024-12-19T01:36:36.664Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-07-25T07:36:05.277Z\"),\n                id=\"<value>\",\n                amount=586546,\n                currency=\"Dobra\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                status=polar_sdk.SubscriptionStatus.INCOMPLETE,\n                current_period_start=dateutil.parser.isoparse(\"2024-12-09T21:53:19.866Z\"),\n                current_period_end=dateutil.parser.isoparse(\"2025-09-11T14:44:54.680Z\"),\n                cancel_at_period_end=False,\n                canceled_at=dateutil.parser.isoparse(\"2025-05-25T20:59:26.748Z\"),\n                started_at=dateutil.parser.isoparse(\"2024-11-16T16:43:07.776Z\"),\n                ends_at=dateutil.parser.isoparse(\"2023-11-28T12:56:45.736Z\"),\n                ended_at=dateutil.parser.isoparse(\"2024-11-08T08:38:56.844Z\"),\n                customer_id=\"<value>\",\n                product_id=\"<value>\",\n                discount_id=\"<value>\",\n                checkout_id=\"<value>\",\n                customer_cancellation_reason=polar_sdk.CustomerCancellationReason.CUSTOMER_SERVICE,\n                customer_cancellation_comment=\"<value>\",\n                price_id=\"<value>\",\n                user_id=\"<value>\",\n            ),\n            items=[\n                polar_sdk.OrderItemSchema(\n                    created_at=dateutil.parser.isoparse(\"2024-04-21T09:48:26.479Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2023-03-11T03:15:27.257Z\"),\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=531036,\n                    tax_amount=690659,\n                    proration=True,\n                    product_price_id=\"<value>\",\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_updated_post(request=polar_sdk.WebhookOrderUpdatedPayload(\n        data=polar_sdk.Order(\n            created_at=dateutil.parser.isoparse(\"2023-07-30T20:50:28.569Z\"),\n            modified_at=dateutil.parser.isoparse(\"2024-03-02T13:14:46.788Z\"),\n            id=\"<value>\",\n            metadata={\n                \"key\": \"<value>\",\n            },\n            status=polar_sdk.OrderStatus.PENDING,\n            paid=True,\n            subtotal_amount=334220,\n            discount_amount=7263,\n            net_amount=832690,\n            amount=700550,\n            tax_amount=61899,\n            total_amount=190491,\n            refunded_amount=400227,\n            refunded_tax_amount=279797,\n            currency=\"Bahamian Dollar\",\n            billing_reason=polar_sdk.OrderBillingReason.PURCHASE,\n            billing_address=polar_sdk.Address(\n                country=\"FR\",\n            ),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            product_price_id=\"<value>\",\n            discount_id=\"<value>\",\n            subscription_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer=polar_sdk.OrderCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2025-11-29T21:44:19.115Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-10-30T08:05:04.104Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"FR\",\n                ),\n                tax_id=[\n                    \"FR61954506077\",\n                    \"eu_vat\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2023-03-18T10:39:58.209Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            user=polar_sdk.OrderUser(\n                id=\"<value>\",\n                email=\"Prudence51@hotmail.com\",\n                public_name=\"<value>\",\n            ),\n            product=polar_sdk.OrderProduct(\n                created_at=dateutil.parser.isoparse(\"2024-03-21T21:55:05.137Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-02-05T08:10:52.828Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"icebreaker gah sentimental gray meanwhile\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=False,\n                is_archived=True,\n                organization_id=\"<value>\",\n            ),\n            product_price=polar_sdk.LegacyRecurringProductPriceCustom(\n                created_at=dateutil.parser.isoparse(\"2025-09-24T08:56:04.909Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-03-20T18:12:36.939Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                price_currency=\"<value>\",\n                minimum_amount=334220,\n                maximum_amount=7263,\n                preset_amount=832690,\n            ),\n            discount=polar_sdk.DiscountFixedOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.FOREVER,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                amount=352171,\n                currency=\"Azerbaijanian Manat\",\n                created_at=dateutil.parser.isoparse(\"2023-10-05T02:53:48.703Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-04-25T05:09:07.981Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": True,\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2024-02-28T01:41:38.707Z\"),\n                ends_at=dateutil.parser.isoparse(\"2024-08-02T19:05:58.642Z\"),\n                max_redemptions=118118,\n                redemptions_count=641753,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            subscription=polar_sdk.OrderSubscription(\n                metadata={\n                    \"key\": False,\n                },\n                created_at=dateutil.parser.isoparse(\"2025-07-22T13:25:10.034Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-10-13T14:11:16.615Z\"),\n                id=\"<value>\",\n                amount=559325,\n                currency=\"Fiji Dollar\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                status=polar_sdk.SubscriptionStatus.INCOMPLETE,\n                current_period_start=dateutil.parser.isoparse(\"2023-05-18T21:27:20.128Z\"),\n                current_period_end=dateutil.parser.isoparse(\"2024-07-11T06:32:04.767Z\"),\n                cancel_at_period_end=True,\n                canceled_at=dateutil.parser.isoparse(\"2025-07-23T10:15:32.137Z\"),\n                started_at=dateutil.parser.isoparse(\"2024-08-15T13:04:18.126Z\"),\n                ends_at=dateutil.parser.isoparse(\"2023-09-03T17:23:26.541Z\"),\n                ended_at=dateutil.parser.isoparse(\"2024-04-27T20:21:39.429Z\"),\n                customer_id=\"<value>\",\n                product_id=\"<value>\",\n                discount_id=\"<value>\",\n                checkout_id=\"<value>\",\n                customer_cancellation_reason=polar_sdk.CustomerCancellationReason.CUSTOMER_SERVICE,\n                customer_cancellation_comment=\"<value>\",\n                price_id=\"<value>\",\n                user_id=\"<value>\",\n            ),\n            items=[\n                polar_sdk.OrderItemSchema(\n                    created_at=dateutil.parser.isoparse(\"2023-01-07T04:01:29.671Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-12-04T07:00:35.238Z\"),\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=766029,\n                    tax_amount=3532,\n                    proration=True,\n                    product_price_id=\"<value>\",\n                ),\n                polar_sdk.OrderItemSchema(\n                    created_at=dateutil.parser.isoparse(\"2025-07-13T15:12:52.856Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-07-02T07:53:49.841Z\"),\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=541142,\n                    tax_amount=25445,\n                    proration=True,\n                    product_price_id=\"<value>\",\n                ),\n                polar_sdk.OrderItemSchema(\n                    created_at=dateutil.parser.isoparse(\"2024-08-25T01:40:10.911Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-05-27T01:46:10.631Z\"),\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=600914,\n                    tax_amount=157162,\n                    proration=True,\n                    product_price_id=\"<value>\",\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["organization.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorganization_updated_post(request={\n        \"type\": \"organization.updated\",\n        \"data\": {\n            \"created_at\": dateutil.parser.isoparse(\"2023-08-12T18:45:04.236Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2025-12-29T16:35:25.119Z\"),\n            \"id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"name\": \"<value>\",\n            \"slug\": \"<value>\",\n            \"avatar_url\": \"https://devoted-bump.net\",\n            \"email\": \"Shaylee26@hotmail.com\",\n            \"website\": \"<value>\",\n            \"socials\": [\n                {\n                    \"platform\": polar_sdk.OrganizationSocialPlatforms.TIKTOK,\n                    \"url\": \"https://bright-bug.biz\",\n                },\n            ],\n            \"details_submitted_at\": dateutil.parser.isoparse(\"2025-09-21T05:55:39.282Z\"),\n            \"feature_settings\": {},\n            \"subscription_settings\": {\n                \"allow_multiple_subscriptions\": False,\n                \"allow_customer_updates\": True,\n                \"proration_behavior\": polar_sdk.SubscriptionProrationBehavior.PRORATE,\n            },\n            \"bio\": \"<value>\",\n            \"company\": \"Glover and Sons\",\n            \"blog\": \"<value>\",\n            \"location\": \"<value>\",\n            \"twitter_username\": \"<value>\",\n            \"pledge_minimum_amount\": 949055,\n            \"pledge_badge_show_amount\": False,\n            \"default_upfront_split_to_contributors\": 950986,\n            \"profile_settings\": {},\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["pledge.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointpledge_created_post(request=polar_sdk.WebhookPledgeCreatedPayload(\n        data=polar_sdk.Pledge(\n            created_at=dateutil.parser.isoparse(\"2025-03-12T00:19:41.487Z\"),\n            modified_at=dateutil.parser.isoparse(\"2023-04-19T01:42:59.169Z\"),\n            id=\"<value>\",\n            amount=330877,\n            currency=\"Jamaican Dollar\",\n            state=polar_sdk.PledgeState.DISPUTED,\n            type=polar_sdk.PledgeType.PAY_DIRECTLY,\n            issue=polar_sdk.Issue(\n                id=\"66524b69-aa0b-47ac-bb9a-0cee5d3a9110\",\n                platform=polar_sdk.Platforms.GITHUB,\n                number=280857,\n                title=\"<value>\",\n                state=polar_sdk.State.OPEN,\n                issue_created_at=dateutil.parser.isoparse(\"2024-02-26T00:33:35.289Z\"),\n                needs_confirmation_solved=False,\n                funding=polar_sdk.Funding(),\n                repository=polar_sdk.Repository(\n                    id=\"356e14cb-87a4-484c-bcfa-ebfe50487706\",\n                    platform=polar_sdk.Platforms.GITHUB,\n                    is_private=True,\n                    name=\"MyOrg\",\n                    description=\"different premium tinderbox peter under often buzzing hastily\",\n                    stars=1337,\n                    license=\"<value>\",\n                    homepage=\"<value>\",\n                    profile_settings=polar_sdk.RepositoryProfileSettings(),\n                    organization=polar_sdk.ExternalOrganization(\n                        id=\"29159f56-74c0-464d-b598-8d5bc3b9cdda\",\n                        platform=polar_sdk.Platforms.GITHUB,\n                        name=\"<value>\",\n                        avatar_url=\"https://frightened-poppy.com/\",\n                        is_personal=False,\n                        bio=\"<value>\",\n                        pretty_name=\"<value>\",\n                        company=\"Bailey - Towne\",\n                        blog=\"<value>\",\n                        location=\"<value>\",\n                        email=\"Cortez_Stehr70@yahoo.com\",\n                        twitter_username=\"<value>\",\n                        organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                    ),\n                    internal_organization=polar_sdk.Organization(\n                        created_at=dateutil.parser.isoparse(\"2025-01-03T15:27:13.109Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-02-15T22:10:17.041Z\"),\n                        id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        name=\"<value>\",\n                        slug=\"<value>\",\n                        avatar_url=\"https://hard-to-find-thyme.org\",\n                        email=\"Peter.Windler-Schimmel@gmail.com\",\n                        website=\"<value>\",\n                        socials=[\n                            polar_sdk.OrganizationSocialLink(\n                                platform=polar_sdk.OrganizationSocialPlatforms.INSTAGRAM,\n                                url=\"https://muted-wallaby.com/\",\n                            ),\n                            polar_sdk.OrganizationSocialLink(\n                                platform=polar_sdk.OrganizationSocialPlatforms.FACEBOOK,\n                                url=\"https://warmhearted-tomography.net/\",\n                            ),\n                        ],\n                        details_submitted_at=dateutil.parser.isoparse(\"2024-10-15T23:04:30.538Z\"),\n                        feature_settings=polar_sdk.OrganizationFeatureSettings(),\n                        subscription_settings=polar_sdk.OrganizationSubscriptionSettings(\n                            allow_multiple_subscriptions=False,\n                            allow_customer_updates=True,\n                            proration_behavior=polar_sdk.SubscriptionProrationBehavior.PRORATE,\n                        ),\n                        bio=\"<value>\",\n                        company=\"Aufderhar - Moore\",\n                        blog=\"<value>\",\n                        location=\"<value>\",\n                        twitter_username=\"<value>\",\n                        pledge_minimum_amount=832231,\n                        pledge_badge_show_amount=True,\n                        default_upfront_split_to_contributors=314718,\n                        profile_settings=polar_sdk.OrganizationProfileSettings(),\n                    ),\n                ),\n                pledge_badge_currently_embedded=True,\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["pledge.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointpledge_updated_post(request=polar_sdk.WebhookPledgeUpdatedPayload(\n        data=polar_sdk.Pledge(\n            created_at=dateutil.parser.isoparse(\"2024-11-29T00:10:39.674Z\"),\n            modified_at=dateutil.parser.isoparse(\"2025-10-02T21:42:49.754Z\"),\n            id=\"<value>\",\n            amount=634567,\n            currency=\"Singapore Dollar\",\n            state=polar_sdk.PledgeState.REFUNDED,\n            type=polar_sdk.PledgeType.PAY_ON_COMPLETION,\n            issue=polar_sdk.Issue(\n                id=\"d2e1349d-085a-441c-abf4-379a1f21d0da\",\n                platform=polar_sdk.Platforms.GITHUB,\n                number=218372,\n                title=\"<value>\",\n                state=polar_sdk.State.CLOSED,\n                issue_created_at=dateutil.parser.isoparse(\"2024-08-12T14:08:31.083Z\"),\n                needs_confirmation_solved=True,\n                funding=polar_sdk.Funding(),\n                repository=polar_sdk.Repository(\n                    id=\"814bd7c6-3412-4f11-b523-7b38c659f44a\",\n                    platform=polar_sdk.Platforms.GITHUB,\n                    is_private=False,\n                    name=\"MyOrg\",\n                    description=\"hm however microchip\",\n                    stars=1337,\n                    license=\"<value>\",\n                    homepage=\"<value>\",\n                    profile_settings=polar_sdk.RepositoryProfileSettings(),\n                    organization=polar_sdk.ExternalOrganization(\n                        id=\"3ddd5cc2-de10-41ef-baa1-7551cf671cc3\",\n                        platform=polar_sdk.Platforms.GITHUB,\n                        name=\"<value>\",\n                        avatar_url=\"https://gummy-interviewer.biz\",\n                        is_personal=False,\n                        bio=\"<value>\",\n                        pretty_name=\"<value>\",\n                        company=\"Ferry - Tremblay\",\n                        blog=\"<value>\",\n                        location=\"<value>\",\n                        email=\"Reggie_Crist@yahoo.com\",\n                        twitter_username=\"<value>\",\n                        organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                    ),\n                    internal_organization=polar_sdk.Organization(\n                        created_at=dateutil.parser.isoparse(\"2025-12-13T11:00:39.217Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-12-02T09:51:26.214Z\"),\n                        id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        name=\"<value>\",\n                        slug=\"<value>\",\n                        avatar_url=\"https://memorable-numeracy.com/\",\n                        email=\"Reginald_Jaskolski31@gmail.com\",\n                        website=\"<value>\",\n                        socials=[\n                            polar_sdk.OrganizationSocialLink(\n                                platform=polar_sdk.OrganizationSocialPlatforms.FACEBOOK,\n                                url=\"https://quarrelsome-traditionalism.biz/\",\n                            ),\n                        ],\n                        details_submitted_at=dateutil.parser.isoparse(\"2025-02-01T20:03:12.413Z\"),\n                        feature_settings=polar_sdk.OrganizationFeatureSettings(),\n                        subscription_settings=polar_sdk.OrganizationSubscriptionSettings(\n                            allow_multiple_subscriptions=True,\n                            allow_customer_updates=True,\n                            proration_behavior=polar_sdk.SubscriptionProrationBehavior.INVOICE,\n                        ),\n                        bio=\"<value>\",\n                        company=\"Miller LLC\",\n                        blog=\"<value>\",\n                        location=\"<value>\",\n                        twitter_username=\"<value>\",\n                        pledge_minimum_amount=502976,\n                        pledge_badge_show_amount=True,\n                        default_upfront_split_to_contributors=99860,\n                        profile_settings=polar_sdk.OrganizationProfileSettings(),\n                    ),\n                ),\n                pledge_badge_currently_embedded=True,\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["product.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointproduct_created_post(request={\n        \"type\": \"product.created\",\n        \"data\": {\n            \"created_at\": dateutil.parser.isoparse(\"2023-03-27T06:36:20.130Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2025-04-21T12:05:16.637Z\"),\n            \"id\": \"<value>\",\n            \"name\": \"<value>\",\n            \"description\": \"into horst metal grimy clinch big grounded industrialize\",\n            \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n            \"is_recurring\": True,\n            \"is_archived\": True,\n            \"organization_id\": \"<value>\",\n            \"metadata\": {\n                \"key\": \"<value>\",\n                \"key1\": \"<value>\",\n            },\n            \"prices\": [\n                {\n                    \"created_at\": dateutil.parser.isoparse(\"2024-12-07T23:31:39.577Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2024-04-25T10:21:28.587Z\"),\n                    \"id\": \"<value>\",\n                    \"amount_type\": \"free\",\n                    \"is_archived\": False,\n                    \"product_id\": \"<value>\",\n                    \"type\": \"recurring\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    \"legacy\": True,\n                },\n                {\n                    \"created_at\": dateutil.parser.isoparse(\"2024-09-06T02:23:36.299Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2024-10-09T12:20:00.039Z\"),\n                    \"id\": \"<value>\",\n                    \"amount_type\": \"custom\",\n                    \"is_archived\": False,\n                    \"product_id\": \"<value>\",\n                    \"type\": polar_sdk.ProductPriceType.RECURRING,\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    \"price_currency\": \"<value>\",\n                    \"minimum_amount\": 66164,\n                    \"maximum_amount\": 215783,\n                    \"preset_amount\": 203043,\n                },\n            ],\n            \"benefits\": [\n                {\n                    \"created_at\": dateutil.parser.isoparse(\"2023-12-13T12:26:05.455Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2024-04-17T08:36:36.851Z\"),\n                    \"id\": \"<value>\",\n                    \"type\": \"custom\",\n                    \"description\": \"before requite than throughout\",\n                    \"selectable\": False,\n                    \"deletable\": False,\n                    \"organization_id\": \"<value>\",\n                    \"properties\": {\n                        \"note\": \"<value>\",\n                    },\n                    \"is_tax_applicable\": False,\n                },\n                {\n                    \"created_at\": dateutil.parser.isoparse(\"2024-04-16T11:54:19.983Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2024-09-03T21:44:52.825Z\"),\n                    \"id\": \"<value>\",\n                    \"type\": \"discord\",\n                    \"description\": \"unaccountably beneath opposite bah hose fellow surge frankly\",\n                    \"selectable\": False,\n                    \"deletable\": False,\n                    \"organization_id\": \"<value>\",\n                    \"properties\": {\n                        \"guild_id\": \"<id>\",\n                        \"role_id\": \"<id>\",\n                        \"guild_token\": \"<value>\",\n                    },\n                },\n                {\n                    \"created_at\": dateutil.parser.isoparse(\"2023-07-03T13:23:53.646Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2025-10-22T11:14:29.082Z\"),\n                    \"id\": \"<value>\",\n                    \"type\": \"downloadables\",\n                    \"description\": \"though pace shakily stack carefully wherever\",\n                    \"selectable\": False,\n                    \"deletable\": False,\n                    \"organization_id\": \"<value>\",\n                    \"properties\": {\n                        \"archived\": {\n                            \"key\": False,\n                        },\n                        \"files\": [\n                            \"<value>\",\n                        ],\n                    },\n                },\n            ],\n            \"medias\": [\n\n            ],\n            \"attached_custom_fields\": [\n                {\n                    \"custom_field_id\": \"<value>\",\n                    \"custom_field\": {\n                        \"created_at\": dateutil.parser.isoparse(\"2025-10-19T10:03:16.084Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2024-05-28T07:55:26.633Z\"),\n                        \"id\": \"<value>\",\n                        \"metadata\": {\n                            \"key\": False,\n                        },\n                        \"type\": \"date\",\n                        \"slug\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        \"properties\": {},\n                    },\n                    \"order\": 819470,\n                    \"required\": False,\n                },\n            ],\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["product.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointproduct_updated_post(request={\n        \"type\": \"product.updated\",\n        \"data\": {\n            \"created_at\": dateutil.parser.isoparse(\"2024-06-25T03:46:32.479Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2023-06-04T01:47:33.158Z\"),\n            \"id\": \"<value>\",\n            \"name\": \"<value>\",\n            \"description\": \"er ick birdcage\",\n            \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n            \"is_recurring\": False,\n            \"is_archived\": True,\n            \"organization_id\": \"<value>\",\n            \"metadata\": {\n                \"key\": 498845,\n            },\n            \"prices\": [\n                {\n                    \"created_at\": dateutil.parser.isoparse(\"2023-04-14T23:22:06.974Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2023-11-27T16:49:54.775Z\"),\n                    \"id\": \"<value>\",\n                    \"amount_type\": \"custom\",\n                    \"is_archived\": False,\n                    \"product_id\": \"<value>\",\n                    \"type\": \"recurring\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    \"price_currency\": \"<value>\",\n                    \"minimum_amount\": 147529,\n                    \"maximum_amount\": 389871,\n                    \"preset_amount\": 137830,\n                    \"legacy\": True,\n                },\n            ],\n            \"benefits\": [\n                {\n                    \"created_at\": dateutil.parser.isoparse(\"2025-10-01T01:25:21.739Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2023-04-13T14:11:42.240Z\"),\n                    \"id\": \"<value>\",\n                    \"type\": \"discord\",\n                    \"description\": \"ick nauseate louse over snoop consequently glossy probe\",\n                    \"selectable\": False,\n                    \"deletable\": False,\n                    \"organization_id\": \"<value>\",\n                    \"properties\": {\n                        \"guild_id\": \"<id>\",\n                        \"role_id\": \"<id>\",\n                        \"guild_token\": \"<value>\",\n                    },\n                },\n            ],\n            \"medias\": [\n                {\n                    \"id\": \"<value>\",\n                    \"organization_id\": \"<value>\",\n                    \"name\": \"<value>\",\n                    \"path\": \"/etc/defaults\",\n                    \"mime_type\": \"<value>\",\n                    \"size\": 132814,\n                    \"storage_version\": \"<value>\",\n                    \"checksum_etag\": \"<value>\",\n                    \"checksum_sha256_base64\": \"<value>\",\n                    \"checksum_sha256_hex\": \"<value>\",\n                    \"last_modified_at\": dateutil.parser.isoparse(\"2024-04-24T09:18:36.586Z\"),\n                    \"version\": \"<value>\",\n                    \"service\": \"product_media\",\n                    \"is_uploaded\": False,\n                    \"created_at\": dateutil.parser.isoparse(\"2024-02-12T19:04:33.442Z\"),\n                    \"size_readable\": \"<value>\",\n                    \"public_url\": \"https://kaleidoscopic-quart.name/\",\n                },\n                {\n                    \"id\": \"<value>\",\n                    \"organization_id\": \"<value>\",\n                    \"name\": \"<value>\",\n                    \"path\": \"/mnt\",\n                    \"mime_type\": \"<value>\",\n                    \"size\": 173885,\n                    \"storage_version\": \"<value>\",\n                    \"checksum_etag\": \"<value>\",\n                    \"checksum_sha256_base64\": \"<value>\",\n                    \"checksum_sha256_hex\": \"<value>\",\n                    \"last_modified_at\": dateutil.parser.isoparse(\"2023-01-02T06:55:06.076Z\"),\n                    \"version\": \"<value>\",\n                    \"service\": \"product_media\",\n                    \"is_uploaded\": True,\n                    \"created_at\": dateutil.parser.isoparse(\"2024-08-06T03:21:47.848Z\"),\n                    \"size_readable\": \"<value>\",\n                    \"public_url\": \"https://total-pigpen.com/\",\n                },\n            ],\n            \"attached_custom_fields\": [\n                {\n                    \"custom_field_id\": \"<value>\",\n                    \"custom_field\": {\n                        \"created_at\": dateutil.parser.isoparse(\"2024-05-09T01:31:02.965Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2025-12-17T05:54:42.907Z\"),\n                        \"id\": \"<value>\",\n                        \"metadata\": {\n                            \"key\": 513990,\n                        },\n                        \"type\": \"number\",\n                        \"slug\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        \"properties\": {},\n                    },\n                    \"order\": 326849,\n                    \"required\": True,\n                },\n            ],\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["refund.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointrefund_created_post(request={\n        \"type\": \"refund.created\",\n        \"data\": {\n            \"created_at\": dateutil.parser.isoparse(\"2025-12-29T06:17:19.062Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2023-06-28T13:27:59.588Z\"),\n            \"id\": \"<value>\",\n            \"metadata\": {\n                \"key\": False,\n                \"key1\": True,\n            },\n            \"status\": polar_sdk.RefundStatus.CANCELED,\n            \"reason\": polar_sdk.RefundReason.FRAUDULENT,\n            \"amount\": 872325,\n            \"tax_amount\": 273821,\n            \"currency\": \"New Israeli Sheqel\",\n            \"organization_id\": \"<value>\",\n            \"order_id\": \"<value>\",\n            \"subscription_id\": \"<value>\",\n            \"customer_id\": \"<value>\",\n            \"revoke_benefits\": True,\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["refund.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointrefund_updated_post(request={\n        \"type\": \"refund.updated\",\n        \"data\": {\n            \"created_at\": dateutil.parser.isoparse(\"2024-01-23T03:57:31.216Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2024-04-24T01:16:45.429Z\"),\n            \"id\": \"<value>\",\n            \"metadata\": {\n\n            },\n            \"status\": polar_sdk.RefundStatus.SUCCEEDED,\n            \"reason\": polar_sdk.RefundReason.OTHER,\n            \"amount\": 397442,\n            \"tax_amount\": 509120,\n            \"currency\": \"Rufiyaa\",\n            \"organization_id\": \"<value>\",\n            \"order_id\": \"<value>\",\n            \"subscription_id\": \"<value>\",\n            \"customer_id\": \"<value>\",\n            \"revoke_benefits\": False,\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.active"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_active_post(request=polar_sdk.WebhookSubscriptionActivePayload(\n        data=polar_sdk.Subscription(\n            created_at=dateutil.parser.isoparse(\"2023-09-17T11:03:44.679Z\"),\n            modified_at=dateutil.parser.isoparse(\"2025-07-24T20:02:17.426Z\"),\n            id=\"<value>\",\n            amount=116760,\n            currency=\"Quetzal\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            status=polar_sdk.SubscriptionStatus.INCOMPLETE,\n            current_period_start=dateutil.parser.isoparse(\"2023-08-25T00:14:50.252Z\"),\n            current_period_end=dateutil.parser.isoparse(\"2023-12-10T18:25:01.577Z\"),\n            cancel_at_period_end=False,\n            canceled_at=dateutil.parser.isoparse(\"2024-07-05T14:07:23.099Z\"),\n            started_at=dateutil.parser.isoparse(\"2024-06-30T08:12:48.355Z\"),\n            ends_at=dateutil.parser.isoparse(\"2023-06-29T07:42:54.895Z\"),\n            ended_at=dateutil.parser.isoparse(\"2025-10-30T02:51:06.576Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.SWITCHED_SERVICE,\n            customer_cancellation_comment=\"<value>\",\n            price_id=\"<value>\",\n            metadata={\n                \"key\": True,\n                \"key1\": \"<value>\",\n                \"key2\": 615212,\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2023-04-25T08:49:41.567Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-09-05T08:50:11.879Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"FR\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2024-04-06T03:26:32.986Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            user=polar_sdk.SubscriptionUser(\n                id=\"<value>\",\n                email=\"Marisol.Wisozk@hotmail.com\",\n                public_name=\"<value>\",\n            ),\n            product=polar_sdk.Product(\n                created_at=dateutil.parser.isoparse(\"2024-10-30T00:00:20.195Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-03-11T01:30:09.272Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"thoughtfully skyline ouch openly aboard moisten graffiti\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=True,\n                is_archived=False,\n                organization_id=\"<value>\",\n                metadata={\n\n                },\n                prices=[\n                    polar_sdk.LegacyRecurringProductPriceFree(\n                        created_at=dateutil.parser.isoparse(\"2023-05-08T23:16:06.519Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-12-23T21:06:29.057Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    ),\n                ],\n                benefits=[\n                    polar_sdk.BenefitCustom(\n                        created_at=dateutil.parser.isoparse(\"2023-08-25T00:14:50.252Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-12-10T18:25:01.577Z\"),\n                        id=\"<value>\",\n                        description=\"repeat catalyst wiggly table while amidst during\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitCustomProperties(\n                            note=\"<value>\",\n                        ),\n                        is_tax_applicable=False,\n                    ),\n                    polar_sdk.BenefitCustom(\n                        created_at=dateutil.parser.isoparse(\"2023-06-02T05:19:01.352Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-07-07T22:15:53.860Z\"),\n                        id=\"<value>\",\n                        description=\"until below barring\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitCustomProperties(\n                            note=\"<value>\",\n                        ),\n                        is_tax_applicable=False,\n                    ),\n                    polar_sdk.BenefitGitHubRepository(\n                        created_at=dateutil.parser.isoparse(\"2024-03-04T01:17:37.967Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-06-12T20:00:04.431Z\"),\n                        id=\"<value>\",\n                        description=\"um across colorfully\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitGitHubRepositoryProperties(\n                            repository_owner=\"polarsource\",\n                            repository_name=\"private_repo\",\n                            permission=polar_sdk.Permission.PULL,\n                        ),\n                    ),\n                ],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/boot\",\n                        mime_type=\"<value>\",\n                        size=129584,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2023-09-13T10:52:51.388Z\"),\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=dateutil.parser.isoparse(\"2025-10-14T14:47:30.399Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://shabby-testimonial.org\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/dev\",\n                        mime_type=\"<value>\",\n                        size=564626,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2025-12-12T13:31:49.606Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=dateutil.parser.isoparse(\"2025-11-11T09:55:50.927Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://grim-tenant.org\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/rescue\",\n                        mime_type=\"<value>\",\n                        size=294552,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2025-03-31T13:48:09.792Z\"),\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=dateutil.parser.isoparse(\"2024-07-16T18:15:55.505Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://mature-pressure.net/\",\n                    ),\n                ],\n                attached_custom_fields=[\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldDate(\n                            created_at=dateutil.parser.isoparse(\"2025-02-17T13:39:50.808Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2025-03-27T06:27:09.035Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": 775460,\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldDateProperties(),\n                        ),\n                        order=358721,\n                        required=False,\n                    ),\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldDate(\n                            created_at=dateutil.parser.isoparse(\"2023-01-21T03:01:14.288Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2025-03-03T05:42:43.472Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": False,\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldDateProperties(),\n                        ),\n                        order=95354,\n                        required=True,\n                    ),\n                ],\n            ),\n            discount=polar_sdk.DiscountFixedRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.FOREVER,\n                duration_in_months=686324,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                amount=897273,\n                currency=\"Venezuelan bolívar\",\n                created_at=dateutil.parser.isoparse(\"2023-08-10T01:02:56.028Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-07-01T19:13:55.103Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": 675072,\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2025-12-04T16:51:09.966Z\"),\n                ends_at=dateutil.parser.isoparse(\"2023-09-05T21:13:45.582Z\"),\n                max_redemptions=13893,\n                redemptions_count=780374,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            price=polar_sdk.ProductPriceFree(\n                created_at=dateutil.parser.isoparse(\"2023-03-31T14:01:05.007Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-08-21T14:23:30.730Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                type=polar_sdk.ProductPriceType.RECURRING,\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            ),\n            prices=[\n\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.canceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_canceled_post(request=polar_sdk.WebhookSubscriptionCanceledPayload(\n        data=polar_sdk.Subscription(\n            created_at=dateutil.parser.isoparse(\"2024-02-08T10:04:43.200Z\"),\n            modified_at=dateutil.parser.isoparse(\"2023-02-20T09:16:44.963Z\"),\n            id=\"<value>\",\n            amount=384017,\n            currency=\"Nakfa\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            status=polar_sdk.SubscriptionStatus.CANCELED,\n            current_period_start=dateutil.parser.isoparse(\"2025-08-29T23:51:26.505Z\"),\n            current_period_end=dateutil.parser.isoparse(\"2024-01-30T14:57:29.126Z\"),\n            cancel_at_period_end=False,\n            canceled_at=dateutil.parser.isoparse(\"2023-05-31T10:57:35.559Z\"),\n            started_at=dateutil.parser.isoparse(\"2024-10-31T08:13:37.012Z\"),\n            ends_at=dateutil.parser.isoparse(\"2023-08-22T21:50:14.399Z\"),\n            ended_at=dateutil.parser.isoparse(\"2023-07-13T20:08:34.251Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.TOO_EXPENSIVE,\n            customer_cancellation_comment=\"<value>\",\n            price_id=\"<value>\",\n            metadata={\n                \"key\": \"<value>\",\n                \"key1\": \"<value>\",\n                \"key2\": 199269,\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2023-12-04T19:57:16.999Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-01-03T00:48:16.846Z\"),\n                metadata={\n                    \"key\": \"<value>\",\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"FR\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2024-06-28T20:02:35.117Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            user=polar_sdk.SubscriptionUser(\n                id=\"<value>\",\n                email=\"Jazlyn_Botsford@hotmail.com\",\n                public_name=\"<value>\",\n            ),\n            product=polar_sdk.Product(\n                created_at=dateutil.parser.isoparse(\"2025-10-12T16:18:30.796Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-02-08T11:59:00.133Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"excluding pfft upside-down ick rust bestride circa\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                is_recurring=True,\n                is_archived=True,\n                organization_id=\"<value>\",\n                metadata={\n\n                },\n                prices=[\n                    polar_sdk.LegacyRecurringProductPriceCustom(\n                        created_at=dateutil.parser.isoparse(\"2024-02-25T21:11:48.890Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-10-06T06:04:45.294Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        price_currency=\"<value>\",\n                        minimum_amount=803599,\n                        maximum_amount=886856,\n                        preset_amount=360058,\n                    ),\n                ],\n                benefits=[\n\n                ],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/root\",\n                        mime_type=\"<value>\",\n                        size=856792,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2023-05-15T05:51:11.123Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=dateutil.parser.isoparse(\"2023-10-19T06:08:48.337Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://delirious-stir-fry.name\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/mnt\",\n                        mime_type=\"<value>\",\n                        size=683673,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2025-12-28T00:16:36.233Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=dateutil.parser.isoparse(\"2024-07-03T23:27:48.693Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://self-reliant-comestible.org\",\n                    ),\n                ],\n                attached_custom_fields=[\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldSelect(\n                            created_at=dateutil.parser.isoparse(\"2023-05-31T10:57:35.559Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2024-10-31T08:13:37.012Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": \"<value>\",\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldSelectProperties(\n                                options=[\n                                    polar_sdk.CustomFieldSelectOption(\n                                        value=\"<value>\",\n                                        label=\"<value>\",\n                                    ),\n                                ],\n                            ),\n                        ),\n                        order=765648,\n                        required=False,\n                    ),\n                ],\n            ),\n            discount=polar_sdk.DiscountPercentageRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.FOREVER,\n                duration_in_months=559389,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                basis_points=770894,\n                created_at=dateutil.parser.isoparse(\"2023-08-02T14:46:23.927Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-09-03T03:41:33.199Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": \"<value>\",\n                    \"key1\": True,\n                    \"key2\": 925408,\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2023-10-27T13:26:08.325Z\"),\n                ends_at=dateutil.parser.isoparse(\"2025-08-04T08:26:05.471Z\"),\n                max_redemptions=125035,\n                redemptions_count=255928,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            price=polar_sdk.LegacyRecurringProductPriceFixed(\n                created_at=dateutil.parser.isoparse(\"2025-06-06T20:18:50.097Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-10-29T03:39:59.256Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                price_currency=\"<value>\",\n                price_amount=339100,\n            ),\n            prices=[\n                polar_sdk.LegacyRecurringProductPriceCustom(\n                    created_at=dateutil.parser.isoparse(\"2025-01-03T00:48:16.846Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-03-16T21:08:54.900Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    price_currency=\"<value>\",\n                    minimum_amount=767689,\n                    maximum_amount=441086,\n                    preset_amount=497112,\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_created_post(request=polar_sdk.WebhookSubscriptionCreatedPayload(\n        data=polar_sdk.Subscription(\n            created_at=dateutil.parser.isoparse(\"2024-07-03T01:29:40.920Z\"),\n            modified_at=dateutil.parser.isoparse(\"2023-02-20T03:35:25.500Z\"),\n            id=\"<value>\",\n            amount=78980,\n            currency=\"Dong\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            status=polar_sdk.SubscriptionStatus.INCOMPLETE_EXPIRED,\n            current_period_start=dateutil.parser.isoparse(\"2025-01-25T02:46:12.208Z\"),\n            current_period_end=dateutil.parser.isoparse(\"2023-10-08T16:07:22.449Z\"),\n            cancel_at_period_end=False,\n            canceled_at=dateutil.parser.isoparse(\"2025-10-17T20:21:29.819Z\"),\n            started_at=dateutil.parser.isoparse(\"2023-02-26T17:52:17.099Z\"),\n            ends_at=dateutil.parser.isoparse(\"2023-07-04T19:46:53.033Z\"),\n            ended_at=dateutil.parser.isoparse(\"2023-09-06T09:33:34.348Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.UNUSED,\n            customer_cancellation_comment=\"<value>\",\n            price_id=\"<value>\",\n            metadata={\n                \"key\": \"<value>\",\n                \"key1\": 229409,\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2023-04-01T11:22:10.531Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-06-26T00:08:47.301Z\"),\n                metadata={\n                    \"key\": True,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"FR\",\n                ),\n                tax_id=[\n                    \"FR61954506077\",\n                    \"eu_vat\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2025-05-16T01:12:33.254Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            user=polar_sdk.SubscriptionUser(\n                id=\"<value>\",\n                email=\"Krystel_Skiles@hotmail.com\",\n                public_name=\"<value>\",\n            ),\n            product=polar_sdk.Product(\n                created_at=dateutil.parser.isoparse(\"2024-10-31T02:44:33.320Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-06-08T04:17:45.373Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"publication partially afore under subsidy why\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                is_recurring=True,\n                is_archived=False,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": 819907,\n                    \"key1\": 966758,\n                },\n                prices=[\n\n                ],\n                benefits=[\n                    polar_sdk.BenefitGitHubRepository(\n                        created_at=dateutil.parser.isoparse(\"2023-02-20T03:35:25.500Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-03-28T13:29:27.613Z\"),\n                        id=\"<value>\",\n                        description=\"average deer plagiarise carefree qua yippee by capitalise from than\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitGitHubRepositoryProperties(\n                            repository_owner=\"polarsource\",\n                            repository_name=\"private_repo\",\n                            permission=polar_sdk.Permission.PULL,\n                        ),\n                    ),\n                ],\n                medias=[\n\n                ],\n                attached_custom_fields=[\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldCheckbox(\n                            created_at=dateutil.parser.isoparse(\"2024-11-29T01:30:25.624Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2025-11-25T16:26:54.952Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": False,\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldCheckboxProperties(),\n                        ),\n                        order=144670,\n                        required=False,\n                    ),\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldDate(\n                            created_at=dateutil.parser.isoparse(\"2025-03-25T07:32:09.500Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2024-07-07T16:38:42.000Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": 819907,\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldDateProperties(),\n                        ),\n                        order=884463,\n                        required=False,\n                    ),\n                ],\n            ),\n            discount=polar_sdk.DiscountPercentageRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                duration_in_months=665586,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                basis_points=717090,\n                created_at=dateutil.parser.isoparse(\"2024-11-25T15:12:50.077Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-02-21T18:53:58.260Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": \"<value>\",\n                    \"key1\": True,\n                    \"key2\": \"<value>\",\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2025-11-16T14:07:14.983Z\"),\n                ends_at=dateutil.parser.isoparse(\"2025-09-06T05:16:25.831Z\"),\n                max_redemptions=552648,\n                redemptions_count=691741,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            price=polar_sdk.LegacyRecurringProductPriceFree(\n                created_at=dateutil.parser.isoparse(\"2023-05-12T21:59:55.872Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-05-29T03:00:41.121Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            ),\n            prices=[\n                polar_sdk.ProductPriceFixed(\n                    created_at=dateutil.parser.isoparse(\"2024-03-07T15:00:56.495Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-10-04T05:55:28.900Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    type=polar_sdk.ProductPriceType.RECURRING,\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    price_currency=\"<value>\",\n                    price_amount=626461,\n                ),\n                polar_sdk.LegacyRecurringProductPriceCustom(\n                    created_at=dateutil.parser.isoparse(\"2025-03-02T09:10:39.039Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-01-16T19:00:35.270Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    price_currency=\"<value>\",\n                    minimum_amount=25452,\n                    maximum_amount=933452,\n                    preset_amount=725754,\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_revoked_post(request=polar_sdk.WebhookSubscriptionRevokedPayload(\n        data=polar_sdk.Subscription(\n            created_at=dateutil.parser.isoparse(\"2025-11-29T12:00:55.925Z\"),\n            modified_at=dateutil.parser.isoparse(\"2023-03-13T04:36:55.320Z\"),\n            id=\"<value>\",\n            amount=780683,\n            currency=\"CFP Franc\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n            status=polar_sdk.SubscriptionStatus.TRIALING,\n            current_period_start=dateutil.parser.isoparse(\"2023-06-20T05:55:42.170Z\"),\n            current_period_end=dateutil.parser.isoparse(\"2024-05-16T17:55:53.899Z\"),\n            cancel_at_period_end=True,\n            canceled_at=dateutil.parser.isoparse(\"2025-10-25T10:04:20.460Z\"),\n            started_at=dateutil.parser.isoparse(\"2024-09-29T18:36:35.285Z\"),\n            ends_at=dateutil.parser.isoparse(\"2024-02-23T17:26:12.806Z\"),\n            ended_at=dateutil.parser.isoparse(\"2024-01-24T11:12:57.680Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.TOO_EXPENSIVE,\n            customer_cancellation_comment=\"<value>\",\n            price_id=\"<value>\",\n            metadata={\n\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2025-09-02T15:09:07.489Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-06-23T22:13:15.423Z\"),\n                metadata={\n                    \"key\": \"<value>\",\n                    \"key1\": 182663,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"SE\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2024-12-07T07:31:07.439Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            user=polar_sdk.SubscriptionUser(\n                id=\"<value>\",\n                email=\"Noemi_Gleichner71@hotmail.com\",\n                public_name=\"<value>\",\n            ),\n            product=polar_sdk.Product(\n                created_at=dateutil.parser.isoparse(\"2023-03-09T13:37:07.084Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-09-27T11:29:41.207Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"evenly footrest whoever happy underpants collaborate license irk yuck whether\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                is_recurring=False,\n                is_archived=True,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": False,\n                    \"key1\": 934828,\n                },\n                prices=[\n\n                ],\n                benefits=[\n                    polar_sdk.BenefitCustom(\n                        created_at=dateutil.parser.isoparse(\"2025-05-05T15:05:02.863Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-11-17T16:25:39.728Z\"),\n                        id=\"<value>\",\n                        description=\"considering amid scar athwart apropos allegation knavishly\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitCustomProperties(\n                            note=\"<value>\",\n                        ),\n                        is_tax_applicable=False,\n                    ),\n                    polar_sdk.BenefitLicenseKeys(\n                        created_at=dateutil.parser.isoparse(\"2024-04-05T10:37:25.336Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-01-29T01:39:55.088Z\"),\n                        id=\"<value>\",\n                        description=\"begonia verbally blowgun accidentally ick blah altruistic\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitLicenseKeysProperties(\n                            prefix=\"<value>\",\n                            expires=polar_sdk.BenefitLicenseKeyExpirationProperties(\n                                ttl=713532,\n                                timeframe=polar_sdk.Timeframe.DAY,\n                            ),\n                            activations=polar_sdk.BenefitLicenseKeyActivationProperties(\n                                limit=883164,\n                                enable_customer_admin=False,\n                            ),\n                            limit_usage=657600,\n                        ),\n                    ),\n                    polar_sdk.BenefitLicenseKeys(\n                        created_at=dateutil.parser.isoparse(\"2023-01-05T15:16:33.257Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-09-24T13:03:31.087Z\"),\n                        id=\"<value>\",\n                        description=\"which spew smoggy thoroughly silently\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitLicenseKeysProperties(\n                            prefix=\"<value>\",\n                            expires=polar_sdk.BenefitLicenseKeyExpirationProperties(\n                                ttl=920903,\n                                timeframe=polar_sdk.Timeframe.MONTH,\n                            ),\n                            activations=polar_sdk.BenefitLicenseKeyActivationProperties(\n                                limit=338077,\n                                enable_customer_admin=False,\n                            ),\n                            limit_usage=77915,\n                        ),\n                    ),\n                ],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/opt/lib\",\n                        mime_type=\"<value>\",\n                        size=296281,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2024-10-09T11:50:56.327Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=dateutil.parser.isoparse(\"2024-05-20T13:22:07.886Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://lost-detective.name\",\n                    ),\n                ],\n                attached_custom_fields=[\n\n                ],\n            ),\n            discount=polar_sdk.DiscountPercentageRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                duration_in_months=902961,\n                type=polar_sdk.DiscountType.FIXED,\n                basis_points=149973,\n                created_at=dateutil.parser.isoparse(\"2023-03-27T04:49:53.356Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-06-30T01:25:14.934Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": 953242,\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2024-05-26T06:45:28.603Z\"),\n                ends_at=dateutil.parser.isoparse(\"2024-01-15T08:35:53.688Z\"),\n                max_redemptions=586120,\n                redemptions_count=699352,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            price=polar_sdk.LegacyRecurringProductPriceFree(\n                created_at=dateutil.parser.isoparse(\"2023-05-25T03:41:40.124Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-03-24T11:18:28.141Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            ),\n            prices=[\n                polar_sdk.LegacyRecurringProductPriceFree(\n                    created_at=dateutil.parser.isoparse(\"2025-08-02T21:30:57.659Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2023-10-18T08:45:20.322Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                ),\n                polar_sdk.LegacyRecurringProductPriceCustom(\n                    created_at=dateutil.parser.isoparse(\"2024-04-20T17:43:03.484Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-07-02T09:45:36.319Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    price_currency=\"<value>\",\n                    minimum_amount=492830,\n                    maximum_amount=769490,\n                    preset_amount=573396,\n                ),\n                polar_sdk.ProductPriceCustom(\n                    created_at=dateutil.parser.isoparse(\"2023-02-28T15:08:48.052Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-07-12T16:32:48.057Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    type=polar_sdk.ProductPriceType.ONE_TIME,\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    price_currency=\"<value>\",\n                    minimum_amount=379339,\n                    maximum_amount=206819,\n                    preset_amount=54522,\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.uncanceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_uncanceled_post(request=polar_sdk.WebhookSubscriptionUncanceledPayload(\n        data=polar_sdk.Subscription(\n            created_at=dateutil.parser.isoparse(\"2024-06-17T13:11:57.598Z\"),\n            modified_at=dateutil.parser.isoparse(\"2025-03-19T00:33:29.972Z\"),\n            id=\"<value>\",\n            amount=243909,\n            currency=\"Swiss Franc\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            status=polar_sdk.SubscriptionStatus.PAST_DUE,\n            current_period_start=dateutil.parser.isoparse(\"2025-04-10T22:53:35.005Z\"),\n            current_period_end=dateutil.parser.isoparse(\"2025-11-06T14:37:36.152Z\"),\n            cancel_at_period_end=False,\n            canceled_at=dateutil.parser.isoparse(\"2025-11-20T17:26:51.612Z\"),\n            started_at=dateutil.parser.isoparse(\"2023-03-17T23:30:29.508Z\"),\n            ends_at=dateutil.parser.isoparse(\"2024-09-26T10:53:58.966Z\"),\n            ended_at=dateutil.parser.isoparse(\"2023-07-03T15:11:27.108Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.LOW_QUALITY,\n            customer_cancellation_comment=\"<value>\",\n            price_id=\"<value>\",\n            metadata={\n                \"key\": 21399,\n                \"key1\": \"<value>\",\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2023-12-13T17:38:34.053Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-01-30T22:08:30.455Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"SE\",\n                ),\n                tax_id=[\n                    \"FR61954506077\",\n                    \"eu_vat\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2024-04-05T22:18:10.327Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            user=polar_sdk.SubscriptionUser(\n                id=\"<value>\",\n                email=\"Aurelia7@hotmail.com\",\n                public_name=\"<value>\",\n            ),\n            product=polar_sdk.Product(\n                created_at=dateutil.parser.isoparse(\"2025-01-18T19:23:31.548Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-10-26T16:26:20.901Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"toe grouchy tough why digestive trusting nor\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=False,\n                is_archived=False,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": True,\n                },\n                prices=[\n                    polar_sdk.LegacyRecurringProductPriceFree(\n                        created_at=dateutil.parser.isoparse(\"2023-09-25T07:47:22.602Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-07-07T10:48:19.585Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    ),\n                    polar_sdk.ProductPriceFree(\n                        created_at=dateutil.parser.isoparse(\"2025-11-06T14:37:36.152Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-05-03T10:18:29.658Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        type=polar_sdk.ProductPriceType.RECURRING,\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    ),\n                    polar_sdk.ProductPriceFixed(\n                        created_at=dateutil.parser.isoparse(\"2023-07-10T12:06:41.430Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-03-15T14:25:14.463Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        type=polar_sdk.ProductPriceType.RECURRING,\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        price_currency=\"<value>\",\n                        price_amount=271985,\n                    ),\n                ],\n                benefits=[\n                    polar_sdk.BenefitDiscord(\n                        created_at=dateutil.parser.isoparse(\"2025-01-30T22:08:30.455Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-02-02T22:26:23.446Z\"),\n                        id=\"<value>\",\n                        description=\"yippee vulgarise brr whoever glaring transplant\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitDiscordProperties(\n                            guild_id=\"<id>\",\n                            role_id=\"<id>\",\n                            guild_token=\"<value>\",\n                        ),\n                    ),\n                    polar_sdk.BenefitDownloadables(\n                        created_at=dateutil.parser.isoparse(\"2023-05-31T05:38:02.546Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-01-08T21:19:13.910Z\"),\n                        id=\"<value>\",\n                        description=\"provided whoa gloss whereas tomography misjudge between deeply ah duh\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitDownloadablesProperties(\n                            archived={\n                                \"key\": False,\n                            },\n                            files=[\n                                \"<value>\",\n                            ],\n                        ),\n                    ),\n                    polar_sdk.BenefitCustom(\n                        created_at=dateutil.parser.isoparse(\"2023-04-15T01:57:40.170Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-03-22T04:24:23.925Z\"),\n                        id=\"<value>\",\n                        description=\"shovel selfishly softly\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitCustomProperties(\n                            note=\"<value>\",\n                        ),\n                        is_tax_applicable=False,\n                    ),\n                ],\n                medias=[\n\n                ],\n                attached_custom_fields=[\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldCheckbox(\n                            created_at=dateutil.parser.isoparse(\"2024-01-26T13:36:59.644Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2025-04-24T08:23:27.502Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": \"<value>\",\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldCheckboxProperties(),\n                        ),\n                        order=322724,\n                        required=False,\n                    ),\n                ],\n            ),\n            discount=polar_sdk.DiscountFixedRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.REPEATING,\n                duration_in_months=513038,\n                type=polar_sdk.DiscountType.FIXED,\n                amount=397394,\n                currency=\"Cedi\",\n                created_at=dateutil.parser.isoparse(\"2023-09-27T16:59:20.550Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-08-10T09:10:07.342Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": True,\n                    \"key1\": \"<value>\",\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2025-03-21T01:11:20.829Z\"),\n                ends_at=dateutil.parser.isoparse(\"2025-05-08T16:16:52.701Z\"),\n                max_redemptions=165579,\n                redemptions_count=603449,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            price=polar_sdk.ProductPriceFree(\n                created_at=dateutil.parser.isoparse(\"2024-02-25T23:13:27.940Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-10-15T05:45:07.118Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                type=polar_sdk.ProductPriceType.RECURRING,\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n            ),\n            prices=[\n                polar_sdk.ProductPriceFixed(\n                    created_at=dateutil.parser.isoparse(\"2025-10-13T14:21:09.035Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2023-06-21T06:00:53.871Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    type=polar_sdk.ProductPriceType.RECURRING,\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    price_currency=\"<value>\",\n                    price_amount=358515,\n                ),\n                polar_sdk.ProductPriceFree(\n                    created_at=dateutil.parser.isoparse(\"2024-01-01T17:59:54.438Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-04-18T01:55:38.007Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    type=polar_sdk.ProductPriceType.ONE_TIME,\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_updated_post(request=polar_sdk.WebhookSubscriptionUpdatedPayload(\n        data=polar_sdk.Subscription(\n            created_at=dateutil.parser.isoparse(\"2023-08-16T06:35:49.390Z\"),\n            modified_at=dateutil.parser.isoparse(\"2025-11-13T10:48:05.575Z\"),\n            id=\"<value>\",\n            amount=299644,\n            currency=\"Baht\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n            status=polar_sdk.SubscriptionStatus.TRIALING,\n            current_period_start=dateutil.parser.isoparse(\"2025-10-06T07:01:55.000Z\"),\n            current_period_end=dateutil.parser.isoparse(\"2025-01-20T06:59:31.349Z\"),\n            cancel_at_period_end=False,\n            canceled_at=dateutil.parser.isoparse(\"2023-10-04T04:56:04.382Z\"),\n            started_at=dateutil.parser.isoparse(\"2023-01-22T12:57:07.430Z\"),\n            ends_at=dateutil.parser.isoparse(\"2025-08-08T17:53:12.513Z\"),\n            ended_at=dateutil.parser.isoparse(\"2023-10-08T02:40:52.099Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.TOO_EXPENSIVE,\n            customer_cancellation_comment=\"<value>\",\n            price_id=\"<value>\",\n            metadata={\n                \"key\": 394013,\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2025-09-14T04:37:19.722Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-03-24T00:03:13.207Z\"),\n                metadata={\n                    \"key\": \"<value>\",\n                    \"key1\": True,\n                    \"key2\": 392900,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"SE\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2025-03-10T21:57:02.022Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            user=polar_sdk.SubscriptionUser(\n                id=\"<value>\",\n                email=\"Abner86@hotmail.com\",\n                public_name=\"<value>\",\n            ),\n            product=polar_sdk.Product(\n                created_at=dateutil.parser.isoparse(\"2024-08-13T18:10:19.346Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-11-04T08:18:09.170Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"sans now duh mysteriously bleach ack even who joyous\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                is_recurring=False,\n                is_archived=True,\n                organization_id=\"<value>\",\n                metadata={\n\n                },\n                prices=[\n                    polar_sdk.LegacyRecurringProductPriceFree(\n                        created_at=dateutil.parser.isoparse(\"2023-11-25T09:50:52.301Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-06-16T22:58:18.488Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    ),\n                    polar_sdk.LegacyRecurringProductPriceFree(\n                        created_at=dateutil.parser.isoparse(\"2025-01-20T06:59:31.349Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-10-02T11:51:36.131Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    ),\n                ],\n                benefits=[\n                    polar_sdk.BenefitCustom(\n                        created_at=dateutil.parser.isoparse(\"2025-08-08T17:53:12.513Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-10-08T02:40:52.099Z\"),\n                        id=\"<value>\",\n                        description=\"crushing rationale phew yet which fibre whereas department\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitCustomProperties(\n                            note=\"<value>\",\n                        ),\n                        is_tax_applicable=False,\n                    ),\n                    polar_sdk.BenefitCustom(\n                        created_at=dateutil.parser.isoparse(\"2024-02-22T02:13:37.066Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-03-20T07:08:33.141Z\"),\n                        id=\"<value>\",\n                        description=\"bin valuable yippee naturally\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        properties=polar_sdk.BenefitCustomProperties(\n                            note=\"<value>\",\n                        ),\n                        is_tax_applicable=False,\n                    ),\n                ],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/Library\",\n                        mime_type=\"<value>\",\n                        size=12136,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2025-08-23T08:56:53.557Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=dateutil.parser.isoparse(\"2025-11-23T15:10:42.747Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://terrible-request.info\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/etc\",\n                        mime_type=\"<value>\",\n                        size=77973,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2025-05-08T03:07:17.345Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=dateutil.parser.isoparse(\"2024-07-13T05:37:01.860Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://zealous-minister.com/\",\n                    ),\n                ],\n                attached_custom_fields=[\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldSelect(\n                            created_at=dateutil.parser.isoparse(\"2024-03-05T16:20:52.572Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2023-04-01T15:22:55.520Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": 848282,\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldSelectProperties(\n                                options=[\n                                    polar_sdk.CustomFieldSelectOption(\n                                        value=\"<value>\",\n                                        label=\"<value>\",\n                                    ),\n                                ],\n                            ),\n                        ),\n                        order=224212,\n                        required=False,\n                    ),\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldNumber(\n                            created_at=dateutil.parser.isoparse(\"2025-01-08T14:04:12.750Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2023-06-03T02:13:26.324Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": False,\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldNumberProperties(),\n                        ),\n                        order=445921,\n                        required=False,\n                    ),\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldCheckbox(\n                            created_at=dateutil.parser.isoparse(\"2023-03-05T14:45:21.856Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2025-07-17T05:00:37.853Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": False,\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldCheckboxProperties(),\n                        ),\n                        order=59919,\n                        required=False,\n                    ),\n                ],\n            ),\n            discount=polar_sdk.DiscountPercentageRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.REPEATING,\n                duration_in_months=948929,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                basis_points=599523,\n                created_at=dateutil.parser.isoparse(\"2025-02-19T03:27:30.491Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-02-15T16:23:44.018Z\"),\n                id=\"<value>\",\n                metadata={\n\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2024-04-11T22:23:28.500Z\"),\n                ends_at=dateutil.parser.isoparse(\"2024-10-23T19:33:31.827Z\"),\n                max_redemptions=836331,\n                redemptions_count=336922,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            price=polar_sdk.ProductPriceCustom(\n                created_at=dateutil.parser.isoparse(\"2025-08-15T22:46:09.024Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-10-31T03:53:53.771Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                type=polar_sdk.ProductPriceType.RECURRING,\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                price_currency=\"<value>\",\n                minimum_amount=740469,\n                maximum_amount=560596,\n                preset_amount=628247,\n            ),\n            prices=[\n                polar_sdk.ProductPriceFree(\n                    created_at=dateutil.parser.isoparse(\"2024-01-12T01:41:20.021Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2023-07-09T02:27:35.033Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    type=polar_sdk.ProductPriceType.ONE_TIME,\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                ),\n                polar_sdk.LegacyRecurringProductPriceCustom(\n                    created_at=dateutil.parser.isoparse(\"2025-05-30T13:10:48.001Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-12-12T00:26:44.150Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    price_currency=\"<value>\",\n                    minimum_amount=902240,\n                    maximum_amount=199966,\n                    preset_amount=75695,\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
