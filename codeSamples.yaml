overlay: 1.0.0
info:
  title: CodeSamples overlay for python target
  version: 0.0.0
actions:
  - target: $["paths"]["/v1/benefit-grants/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefit_grants.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/benefits/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/benefits/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.create(request={\n        \"type\": \"license_keys\",\n        \"description\": \"mature emergent at outside arrogantly gadzooks zealous equatorial notwithstanding\",\n        \"properties\": {},\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/benefits/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.benefits.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/benefits/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/benefits/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.update(id=\"<value>\", request_body={\n        \"type\": \"meter_credit\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/benefits/{id}/grants"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.grants(id=\"<value>\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/checkout-links/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/checkout-links/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.create(request={\n        \"payment_processor\": \"stripe\",\n        \"allow_discount_codes\": True,\n        \"require_billing_address\": False,\n        \"product_price_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkout-links/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.checkout_links.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/checkout-links/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkout-links/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.update(id=\"<value>\", checkout_link_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/checkouts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.create(request={\n        \"customer_billing_address\": {\n            \"country\": polar_sdk.CountryAlpha2Input.US,\n        },\n        \"products\": [\n            \"<value 1>\",\n            \"<value 2>\",\n            \"<value 3>\",\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.checkouts.client_get(client_secret=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.checkouts.client_update(client_secret=\"<value>\", checkout_update_public={\n        \"customer_billing_address\": None,\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}/confirm"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.client_confirm(client_secret=\"<value>\", checkout_confirm_stripe={\n        \"customer_billing_address\": {\n            \"country\": polar_sdk.CountryAlpha2Input.US,\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.update(id=\"<value>\", checkout_update={\n        \"customer_billing_address\": {\n            \"country\": polar_sdk.CountryAlpha2Input.US,\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/custom-fields/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/custom-fields/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.create(request={\n        \"type\": \"select\",\n        \"slug\": \"<value>\",\n        \"name\": \"<value>\",\n        \"properties\": {\n            \"options\": [],\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/custom-fields/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.custom_fields.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/custom-fields/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/custom-fields/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.update(id=\"<value>\", custom_field_update={\n        \"type\": \"date\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customer_meters.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customer_meters.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.benefit_grants.list(security=polar_sdk.CustomerPortalBenefitGrantsListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=None, page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.benefit_grants.get(security=polar_sdk.CustomerPortalBenefitGrantsGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.benefit_grants.update(security=polar_sdk.CustomerPortalBenefitGrantsUpdateSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\", customer_benefit_grant_update={\n        \"benefit_type\": \"license_keys\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.get(security=polar_sdk.CustomerPortalCustomersGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.update(security=polar_sdk.CustomerPortalCustomersUpdateSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), request={\n        \"billing_address\": {\n            \"country\": polar_sdk.CountryAlpha2Input.US,\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.list_payment_methods(security=polar_sdk.CustomerPortalCustomersListPaymentMethodsSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.add_payment_method(security=polar_sdk.CustomerPortalCustomersAddPaymentMethodSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), request={\n        \"confirmation_token_id\": \"<id>\",\n        \"set_default\": False,\n        \"return_url\": \"https://yearly-custom.net/\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    polar.customer_portal.customers.delete_payment_method(security=polar_sdk.CustomerPortalCustomersDeletePaymentMethodSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customer-portal/downloadables/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.downloadables.list(security=polar_sdk.CustomerPortalDownloadablesListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/license-keys/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.list(security=polar_sdk.CustomerPortalLicenseKeysListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/license-keys/activate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.activate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n        \"label\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/license-keys/deactivate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    polar.customer_portal.license_keys.deactivate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n        \"activation_id\": \"<value>\",\n    })\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customer-portal/license-keys/validate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.validate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.get(security=polar_sdk.CustomerPortalLicenseKeysGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customer_meters.list(security=polar_sdk.CustomerPortalCustomerMetersListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customer_meters.get(security=polar_sdk.CustomerPortalCustomerMetersGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.list(security=polar_sdk.CustomerPortalOrdersListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.get(security=polar_sdk.CustomerPortalOrdersGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/orders/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.update(security=polar_sdk.CustomerPortalOrdersUpdateSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\", customer_order_update={\n        \"billing_name\": \"<value>\",\n        \"billing_address\": {\n            \"country\": polar_sdk.CountryAlpha2Input.US,\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/confirm-payment"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.confirm_retry_payment(security=polar_sdk.CustomerPortalOrdersConfirmRetryPaymentSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\", customer_order_confirm_payment={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.invoice(security=polar_sdk.CustomerPortalOrdersInvoiceSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/invoice"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.generate_invoice(security=polar_sdk.CustomerPortalOrdersGenerateInvoiceSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/payment-status"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.get_payment_status(security=polar_sdk.CustomerPortalOrdersGetPaymentStatusSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/organizations/{slug}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.organizations.get(slug=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.list(security=polar_sdk.CustomerPortalSubscriptionsListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.cancel(security=polar_sdk.CustomerPortalSubscriptionsCancelSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.get(security=polar_sdk.CustomerPortalSubscriptionsGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.update(security=polar_sdk.CustomerPortalSubscriptionsUpdateSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\", customer_subscription_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-sessions/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customer_sessions.create(request={\n        \"external_customer_id\": \"<id>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customers/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.create(request={\n        \"external_id\": \"usr_1337\",\n        \"email\": \"customer@example.com\",\n        \"name\": \"John Doe\",\n        \"billing_address\": {\n            \"country\": polar_sdk.CountryAlpha2Input.US,\n        },\n        \"tax_id\": [\n            \"911144442\",\n            \"us_ein\",\n        ],\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/export"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.export(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.customers.delete_external(external_id=\"<id>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customers/external/{external_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get_external(external_id=\"<id>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.update_external(external_id=\"<id>\", customer_update_external_id={\n        \"email\": \"customer@example.com\",\n        \"name\": \"John Doe\",\n        \"billing_address\": None,\n        \"tax_id\": [\n            \"911144442\",\n            \"us_ein\",\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/external/{external_id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get_state_external(external_id=\"<id>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.customers.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customers/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.update(id=\"<value>\", customer_update={\n        \"email\": \"customer@example.com\",\n        \"name\": \"John Doe\",\n        \"billing_address\": {\n            \"country\": polar_sdk.CountryAlpha2Input.US,\n        },\n        \"tax_id\": [\n            \"911144442\",\n            \"us_ein\",\n        ],\n        \"external_id\": \"usr_1337\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/{id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get_state(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/discounts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/discounts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.create(request={\n        \"duration\": polar_sdk.DiscountDuration.ONCE,\n        \"type\": polar_sdk.DiscountType.FIXED,\n        \"basis_points\": 449604,\n        \"name\": \"<value>\",\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/discounts/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.discounts.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/discounts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/discounts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.update(id=\"<value>\", discount_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/events/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/events/ingest"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.ingest(request={\n        \"events\": [],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/events/names"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.list_names(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/events/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/files/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/files/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.create(request={\n        \"name\": \"<value>\",\n        \"mime_type\": \"<value>\",\n        \"size\": 612128,\n        \"upload\": {\n            \"parts\": [],\n        },\n        \"service\": \"downloadable\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/files/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.files.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/files/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.update(id=\"<value>\", file_patch={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/files/{id}/uploaded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.uploaded(id=\"<value>\", file_upload_completed={\n        \"id\": \"<id>\",\n        \"path\": \"/boot\",\n        \"parts\": [\n            {\n                \"number\": 979613,\n                \"checksum_etag\": \"<value>\",\n                \"checksum_sha256_base64\": \"<value>\",\n            },\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/license-keys/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/license-keys/activate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.activate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n        \"label\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/license-keys/deactivate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.license_keys.deactivate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n        \"activation_id\": \"<value>\",\n    })\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/license-keys/validate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.validate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/license-keys/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.update(id=\"<value>\", license_key_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/license-keys/{id}/activations/{activation_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.get_activation(id=\"<value>\", activation_id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/meters/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.create(request={\n        \"name\": \"<value>\",\n        \"filter_\": {\n            \"conjunction\": polar_sdk.FilterConjunction.OR,\n            \"clauses\": [],\n        },\n        \"aggregation\": {\n            \"func\": \"count\",\n        },\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.update(id=\"<value>\", meter_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/{id}/quantities"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.quantities(id=\"<value>\", start_timestamp=parse_datetime(\"2025-11-25T04:37:16.823Z\"), end_timestamp=parse_datetime(\"2025-11-26T17:06:00.727Z\"), interval=polar_sdk.TimeInterval.DAY)\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/metrics/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from datetime import date\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.metrics.get(start_date=date.fromisoformat(\"2025-03-14\"), end_date=date.fromisoformat(\"2025-03-18\"), interval=polar_sdk.TimeInterval.HOUR, timezone=\"UTC\", organization_id=None)\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/metrics/limits"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.metrics.limits()\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/authorize"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.authorize()\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/introspect"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.oauth2.introspect(request={\n        \"token\": \"<value>\",\n        \"client_id\": \"<id>\",\n        \"client_secret\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/revoke"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.oauth2.revoke(request={\n        \"token\": \"<value>\",\n        \"client_id\": \"<id>\",\n        \"client_secret\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/token"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.oauth2.token(request={\n        \"grant_type\": \"authorization_code\",\n        \"client_id\": \"<id>\",\n        \"client_secret\": \"<value>\",\n        \"code\": \"<value>\",\n        \"redirect_uri\": \"https://memorable-season.name\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/userinfo"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.userinfo()\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.orders.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.orders.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/orders/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.orders.update(id=\"<value>\", order_update={\n        \"billing_name\": \"<value>\",\n        \"billing_address\": {\n            \"country\": polar_sdk.CountryAlpha2Input.US,\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.orders.invoice(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/orders/{id}/invoice"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.orders.generate_invoice(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/organizations/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.list(page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/organizations/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.create(request={\n        \"name\": \"<value>\",\n        \"slug\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/organizations/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.get(id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/organizations/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.update(id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", organization_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/payments/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.payments.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/payments/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.payments.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.list(organization_id=None, page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/products/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.create(request={\n        \"name\": \"<value>\",\n        \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n        \"prices\": [],\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.update(id=\"<value>\", product_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/{id}/benefits"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.update_benefits(id=\"<value>\", product_benefits_update={\n        \"benefits\": [\n            \"<value 1>\",\n            \"<value 2>\",\n            \"<value 3>\",\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/refunds/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.refunds.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/refunds/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.refunds.create(request={\n        \"order_id\": \"<value>\",\n        \"reason\": polar_sdk.RefundReason.CUSTOMER_REQUEST,\n        \"amount\": 90,\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/subscriptions/export"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.export(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.revoke(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.update(id=\"<value>\", subscription_update={\n        \"discount_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/webhooks/deliveries"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.webhooks.list_webhook_deliveries(page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/webhooks/endpoints"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.webhooks.list_webhook_endpoints(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/webhooks/endpoints"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.webhooks.create_webhook_endpoint(request={\n        \"url\": \"https://webhook.site/cb791d80-f26e-4f8c-be88-6e56054192b0\",\n        \"format_\": polar_sdk.WebhookFormat.SLACK,\n        \"events\": [\n            polar_sdk.WebhookEventType.SUBSCRIPTION_UNCANCELED,\n        ],\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/webhooks/endpoints/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.webhooks.delete_webhook_endpoint(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/webhooks/endpoints/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.webhooks.get_webhook_endpoint(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/webhooks/endpoints/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.webhooks.update_webhook_endpoint(id=\"<value>\", webhook_endpoint_update={\n        \"url\": \"https://webhook.site/cb791d80-f26e-4f8c-be88-6e56054192b0\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/webhooks/endpoints/{id}/secret"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.webhooks.reset_webhook_endpoint_secret(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/webhooks/events/{id}/redeliver"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.webhooks.redeliver_webhook_event(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_created_post(request={\n        \"type\": \"benefit.created\",\n        \"timestamp\": parse_datetime(\"2025-10-17T23:42:52.571Z\"),\n        \"data\": {\n            \"id\": \"<value>\",\n            \"created_at\": parse_datetime(\"2025-05-24T21:27:59.843Z\"),\n            \"modified_at\": parse_datetime(\"2024-07-01T06:29:09.775Z\"),\n            \"type\": \"github_repository\",\n            \"description\": \"beneath terrorise but about uh-huh\",\n            \"selectable\": False,\n            \"deletable\": True,\n            \"organization_id\": \"<value>\",\n            \"metadata\": {\n\n            },\n            \"properties\": {\n                \"repository_owner\": \"polarsource\",\n                \"repository_name\": \"private_repo\",\n                \"permission\": polar_sdk.Permission.PUSH,\n            },\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_updated_post(request={\n        \"type\": \"benefit.updated\",\n        \"timestamp\": parse_datetime(\"2024-09-24T20:33:20.375Z\"),\n        \"data\": {\n            \"id\": \"<value>\",\n            \"created_at\": parse_datetime(\"2025-12-28T13:48:13.081Z\"),\n            \"modified_at\": parse_datetime(\"2023-10-27T10:32:06.844Z\"),\n            \"type\": \"custom\",\n            \"description\": \"fooey save simple an prime fast modulo nor randomize worth\",\n            \"selectable\": False,\n            \"deletable\": True,\n            \"organization_id\": \"<value>\",\n            \"metadata\": {\n                \"key\": \"<value>\",\n            },\n            \"properties\": {\n                \"note\": \"<value>\",\n            },\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_created_post(request=polar_sdk.WebhookBenefitGrantCreatedPayload(\n        timestamp=parse_datetime(\"2025-07-29T09:12:26.895Z\"),\n        data=polar_sdk.BenefitGrantCustomWebhook(\n            created_at=parse_datetime(\"2025-07-26T11:51:14.320Z\"),\n            modified_at=parse_datetime(\"2023-06-26T18:19:56.152Z\"),\n            id=\"<value>\",\n            is_granted=False,\n            is_revoked=True,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer=polar_sdk.Customer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2025-05-12T01:27:02.379Z\"),\n                modified_at=parse_datetime(\"2023-11-17T04:22:37.821Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=polar_sdk.CountryAlpha2.US,\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2023-02-21T01:01:33.050Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            benefit=polar_sdk.BenefitCustom(\n                id=\"<value>\",\n                created_at=parse_datetime(\"2023-07-27T17:46:55.663Z\"),\n                modified_at=parse_datetime(\"2024-02-04T07:22:26.555Z\"),\n                description=\"blah even spirit reprove gee instead that longingly\",\n                selectable=False,\n                deletable=True,\n                organization_id=\"<value>\",\n                metadata={\n\n                },\n                properties=polar_sdk.BenefitCustomProperties(\n                    note=None,\n                ),\n            ),\n            properties=polar_sdk.BenefitGrantCustomProperties(),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.cycled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_cycled_post(request=polar_sdk.WebhookBenefitGrantCycledPayload(\n        timestamp=parse_datetime(\"2023-11-21T13:26:50.948Z\"),\n        data=polar_sdk.BenefitGrantDiscordWebhook(\n            created_at=parse_datetime(\"2023-07-19T03:56:32.649Z\"),\n            modified_at=parse_datetime(\"2025-06-08T22:06:37.934Z\"),\n            id=\"<value>\",\n            is_granted=False,\n            is_revoked=False,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer=polar_sdk.Customer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2024-06-18T10:06:52.830Z\"),\n                modified_at=parse_datetime(\"2024-06-29T04:36:34.181Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=polar_sdk.CountryAlpha2.US,\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2025-09-22T10:01:13.690Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            benefit=polar_sdk.BenefitDiscord(\n                id=\"<value>\",\n                created_at=parse_datetime(\"2024-08-15T00:34:14.846Z\"),\n                modified_at=parse_datetime(\"2025-10-24T15:26:44.314Z\"),\n                description=\"unimportant ah prickly past\",\n                selectable=True,\n                deletable=True,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": \"<value>\",\n                },\n                properties=polar_sdk.BenefitDiscordProperties(\n                    guild_id=\"<id>\",\n                    role_id=\"<id>\",\n                    kick_member=True,\n                    guild_token=\"<value>\",\n                ),\n            ),\n            properties=polar_sdk.BenefitGrantDiscordProperties(),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_revoked_post(request=polar_sdk.WebhookBenefitGrantRevokedPayload(\n        timestamp=parse_datetime(\"2025-10-11T18:40:00.865Z\"),\n        data=polar_sdk.BenefitGrantDiscordWebhook(\n            created_at=parse_datetime(\"2023-04-30T09:48:15.700Z\"),\n            modified_at=parse_datetime(\"2024-12-06T00:35:53.453Z\"),\n            id=\"<value>\",\n            is_granted=True,\n            is_revoked=True,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer=polar_sdk.Customer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2024-05-05T05:52:04.552Z\"),\n                modified_at=parse_datetime(\"2024-09-18T14:08:44.723Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=None,\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2025-11-04T03:19:52.925Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            benefit=polar_sdk.BenefitDiscord(\n                id=\"<value>\",\n                created_at=parse_datetime(\"2024-03-12T16:39:36.178Z\"),\n                modified_at=parse_datetime(\"2024-07-08T07:08:59.377Z\"),\n                description=\"grandiose royal surface before ouch silently authentic more override reassuringly\",\n                selectable=False,\n                deletable=True,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": \"<value>\",\n                },\n                properties=polar_sdk.BenefitDiscordProperties(\n                    guild_id=\"<id>\",\n                    role_id=\"<id>\",\n                    kick_member=False,\n                    guild_token=\"<value>\",\n                ),\n            ),\n            properties=polar_sdk.BenefitGrantDiscordProperties(),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_updated_post(request=polar_sdk.WebhookBenefitGrantUpdatedPayload(\n        timestamp=parse_datetime(\"2023-06-15T00:42:20.858Z\"),\n        data=polar_sdk.BenefitGrantDownloadablesWebhook(\n            created_at=parse_datetime(\"2023-09-09T02:35:13.085Z\"),\n            modified_at=parse_datetime(\"2024-04-28T04:44:42.040Z\"),\n            id=\"<value>\",\n            is_granted=True,\n            is_revoked=False,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer=polar_sdk.Customer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2024-06-22T06:57:35.281Z\"),\n                modified_at=parse_datetime(\"2025-06-14T15:07:20.731Z\"),\n                metadata={\n                    \"key\": 322224,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=polar_sdk.CountryAlpha2.US,\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2025-09-29T05:46:04.457Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            benefit=polar_sdk.BenefitDownloadables(\n                id=\"<value>\",\n                created_at=parse_datetime(\"2025-09-22T18:19:02.554Z\"),\n                modified_at=parse_datetime(\"2023-12-23T22:21:47.780Z\"),\n                description=\"diligently phony super boo veg crafty\",\n                selectable=False,\n                deletable=True,\n                organization_id=\"<value>\",\n                metadata={\n\n                },\n                properties=polar_sdk.BenefitDownloadablesProperties(\n                    archived={\n                        \"key\": False,\n                        \"key1\": False,\n                        \"key2\": True,\n                    },\n                    files=[],\n                ),\n            ),\n            properties=polar_sdk.BenefitGrantDownloadablesProperties(),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["checkout.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcheckout_created_post(request=polar_sdk.WebhookCheckoutCreatedPayload(\n        timestamp=parse_datetime(\"2023-02-15T15:44:21.478Z\"),\n        data=polar_sdk.Checkout(\n            created_at=parse_datetime(\"2025-09-12T19:48:15.814Z\"),\n            modified_at=parse_datetime(\"2023-09-14T02:01:27.394Z\"),\n            id=\"<value>\",\n            payment_processor=polar_sdk.PaymentProcessor.STRIPE,\n            status=polar_sdk.CheckoutStatus.EXPIRED,\n            client_secret=\"<value>\",\n            url=\"https://agreeable-reboot.biz\",\n            expires_at=parse_datetime(\"2024-05-02T18:25:33.974Z\"),\n            success_url=\"https://rural-outrun.org\",\n            embed_origin=\"<value>\",\n            amount=323773,\n            discount_amount=115799,\n            net_amount=436964,\n            tax_amount=None,\n            total_amount=859980,\n            currency=\"Fiji Dollar\",\n            product_id=\"<value>\",\n            product_price_id=\"<value>\",\n            discount_id=None,\n            allow_discount_codes=True,\n            require_billing_address=True,\n            is_discount_applicable=True,\n            is_free_product_price=True,\n            is_payment_required=True,\n            is_payment_setup_required=True,\n            is_payment_form_required=True,\n            customer_id=\"<value>\",\n            is_business_customer=False,\n            customer_name=\"<value>\",\n            customer_email=None,\n            customer_ip_address=None,\n            customer_billing_name=\"<value>\",\n            customer_billing_address=polar_sdk.Address(\n                country=polar_sdk.CountryAlpha2.US,\n            ),\n            customer_tax_id=\"<id>\",\n            payment_processor_metadata={\n                \"key\": \"<value>\",\n                \"key1\": \"<value>\",\n                \"key2\": \"<value>\",\n            },\n            billing_address_fields=polar_sdk.CheckoutBillingAddressFields(\n                country=polar_sdk.BillingAddressFieldMode.DISABLED,\n                state=polar_sdk.BillingAddressFieldMode.DISABLED,\n                city=polar_sdk.BillingAddressFieldMode.DISABLED,\n                postal_code=polar_sdk.BillingAddressFieldMode.DISABLED,\n                line1=polar_sdk.BillingAddressFieldMode.DISABLED,\n                line2=polar_sdk.BillingAddressFieldMode.DISABLED,\n            ),\n            metadata={\n\n            },\n            external_customer_id=\"<id>\",\n            customer_external_id=\"<id>\",\n            products=[],\n            product=polar_sdk.CheckoutProduct(\n                created_at=parse_datetime(\"2024-09-25T08:09:25.820Z\"),\n                modified_at=parse_datetime(\"2025-04-15T15:50:37.647Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"gee noisily mouser tentacle\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                is_recurring=False,\n                is_archived=False,\n                organization_id=\"<value>\",\n                prices=[],\n                benefits=[],\n                medias=[],\n            ),\n            product_price=polar_sdk.LegacyRecurringProductPriceFree(\n                created_at=parse_datetime(\"2023-10-02T03:50:07.919Z\"),\n                modified_at=parse_datetime(\"2025-06-07T12:37:50.969Z\"),\n                id=\"<value>\",\n                is_archived=True,\n                product_id=\"<value>\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n            ),\n            discount=polar_sdk.CheckoutDiscountFixedOnceForeverDuration(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                type=polar_sdk.DiscountType.FIXED,\n                amount=168537,\n                currency=\"Tala\",\n                id=\"<value>\",\n                name=\"<value>\",\n                code=\"<value>\",\n            ),\n            subscription_id=\"<value>\",\n            attached_custom_fields=[],\n            customer_metadata={\n                \"key\": True,\n            },\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["checkout.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcheckout_updated_post(request=polar_sdk.WebhookCheckoutUpdatedPayload(\n        timestamp=parse_datetime(\"2023-03-19T05:40:46.816Z\"),\n        data=polar_sdk.Checkout(\n            created_at=parse_datetime(\"2024-09-17T13:52:37.257Z\"),\n            modified_at=parse_datetime(\"2024-11-07T08:23:01.152Z\"),\n            id=\"<value>\",\n            payment_processor=polar_sdk.PaymentProcessor.STRIPE,\n            status=polar_sdk.CheckoutStatus.EXPIRED,\n            client_secret=\"<value>\",\n            url=\"https://male-punctuation.name\",\n            expires_at=parse_datetime(\"2025-03-26T06:13:51.386Z\"),\n            success_url=\"https://monumental-mathematics.info\",\n            embed_origin=\"<value>\",\n            amount=67168,\n            discount_amount=710560,\n            net_amount=954738,\n            tax_amount=754328,\n            total_amount=867510,\n            currency=\"Kuwaiti Dinar\",\n            product_id=\"<value>\",\n            product_price_id=\"<value>\",\n            discount_id=\"<value>\",\n            allow_discount_codes=True,\n            require_billing_address=True,\n            is_discount_applicable=True,\n            is_free_product_price=True,\n            is_payment_required=False,\n            is_payment_setup_required=True,\n            is_payment_form_required=True,\n            customer_id=\"<value>\",\n            is_business_customer=False,\n            customer_name=\"<value>\",\n            customer_email=\"<value>\",\n            customer_ip_address=\"<value>\",\n            customer_billing_name=\"<value>\",\n            customer_billing_address=polar_sdk.Address(\n                country=polar_sdk.CountryAlpha2.US,\n            ),\n            customer_tax_id=\"<id>\",\n            payment_processor_metadata={\n                \"key\": \"<value>\",\n                \"key1\": \"<value>\",\n                \"key2\": \"<value>\",\n            },\n            billing_address_fields=polar_sdk.CheckoutBillingAddressFields(\n                country=polar_sdk.BillingAddressFieldMode.DISABLED,\n                state=polar_sdk.BillingAddressFieldMode.DISABLED,\n                city=polar_sdk.BillingAddressFieldMode.REQUIRED,\n                postal_code=polar_sdk.BillingAddressFieldMode.OPTIONAL,\n                line1=polar_sdk.BillingAddressFieldMode.REQUIRED,\n                line2=polar_sdk.BillingAddressFieldMode.DISABLED,\n            ),\n            metadata={\n                \"key\": 795829,\n            },\n            external_customer_id=\"<id>\",\n            customer_external_id=\"<id>\",\n            products=[],\n            product=polar_sdk.CheckoutProduct(\n                created_at=parse_datetime(\"2025-11-27T17:16:31.119Z\"),\n                modified_at=parse_datetime(\"2025-06-04T15:43:18.802Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"own obtrude spew cloudy rapidly ugh\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=False,\n                is_archived=True,\n                organization_id=\"<value>\",\n                prices=[],\n                benefits=[],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/home\",\n                        mime_type=\"<value>\",\n                        size=727381,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=parse_datetime(\"2025-12-05T19:37:31.286Z\"),\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=parse_datetime(\"2024-05-01T10:03:11.361Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://strict-encouragement.name\",\n                    ),\n                ],\n            ),\n            product_price=polar_sdk.LegacyRecurringProductPriceCustom(\n                created_at=parse_datetime(\"2023-04-04T12:37:13.536Z\"),\n                modified_at=parse_datetime(\"2024-07-15T17:22:02.691Z\"),\n                id=\"<value>\",\n                is_archived=True,\n                product_id=\"<value>\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.WEEK,\n                price_currency=\"<value>\",\n                minimum_amount=557949,\n                maximum_amount=600909,\n                preset_amount=637755,\n            ),\n            discount=polar_sdk.CheckoutDiscountPercentageOnceForeverDuration(\n                duration=polar_sdk.DiscountDuration.REPEATING,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                basis_points=340460,\n                id=\"<value>\",\n                name=\"<value>\",\n                code=\"<value>\",\n            ),\n            subscription_id=\"<value>\",\n            attached_custom_fields=[],\n            customer_metadata={\n                \"key\": True,\n            },\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["customer.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcustomer_created_post(request={\n        \"type\": \"customer.created\",\n        \"timestamp\": parse_datetime(\"2025-10-24T17:37:29.711Z\"),\n        \"data\": {\n            \"id\": \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n            \"created_at\": parse_datetime(\"2025-03-08T02:57:16.205Z\"),\n            \"modified_at\": parse_datetime(\"2024-10-31T06:26:45.555Z\"),\n            \"metadata\": {\n\n            },\n            \"external_id\": \"usr_1337\",\n            \"email\": \"customer@example.com\",\n            \"email_verified\": True,\n            \"name\": \"John Doe\",\n            \"billing_address\": {\n                \"country\": polar_sdk.CountryAlpha2.US,\n            },\n            \"tax_id\": [\n                \"911144442\",\n                \"us_ein\",\n            ],\n            \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"deleted_at\": parse_datetime(\"2023-03-24T20:28:46.681Z\"),\n            \"avatar_url\": \"https://www.gravatar.com/avatar/xxx?d=404\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["customer.deleted"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcustomer_deleted_post(request={\n        \"type\": \"customer.deleted\",\n        \"timestamp\": parse_datetime(\"2023-07-12T21:40:34.752Z\"),\n        \"data\": {\n            \"id\": \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n            \"created_at\": parse_datetime(\"2025-12-23T11:32:42.100Z\"),\n            \"modified_at\": parse_datetime(\"2023-07-09T17:16:24.833Z\"),\n            \"metadata\": {\n\n            },\n            \"external_id\": \"usr_1337\",\n            \"email\": \"customer@example.com\",\n            \"email_verified\": True,\n            \"name\": \"John Doe\",\n            \"billing_address\": {\n                \"country\": polar_sdk.CountryAlpha2.US,\n            },\n            \"tax_id\": [\n                \"911144442\",\n                \"us_ein\",\n            ],\n            \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"deleted_at\": parse_datetime(\"2023-09-30T09:04:17.770Z\"),\n            \"avatar_url\": \"https://www.gravatar.com/avatar/xxx?d=404\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["customer.state_changed"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcustomer_state_changed_post(request={\n        \"type\": \"customer.state_changed\",\n        \"timestamp\": parse_datetime(\"2025-05-22T16:03:32.369Z\"),\n        \"data\": {\n            \"id\": \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n            \"created_at\": parse_datetime(\"2023-07-25T20:57:42.542Z\"),\n            \"modified_at\": None,\n            \"metadata\": {\n\n            },\n            \"external_id\": \"usr_1337\",\n            \"email\": \"customer@example.com\",\n            \"email_verified\": True,\n            \"name\": \"John Doe\",\n            \"billing_address\": {\n                \"country\": polar_sdk.CountryAlpha2.US,\n            },\n            \"tax_id\": [\n                \"911144442\",\n                \"us_ein\",\n            ],\n            \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"deleted_at\": parse_datetime(\"2025-09-08T18:19:10.187Z\"),\n            \"active_subscriptions\": [],\n            \"granted_benefits\": [\n                {\n                    \"id\": \"d322132c-a9d0-4e0d-b8d3-d81ad021a3a9\",\n                    \"created_at\": parse_datetime(\"2025-09-01T02:21:29.525Z\"),\n                    \"modified_at\": parse_datetime(\"2023-11-12T17:51:37.646Z\"),\n                    \"granted_at\": parse_datetime(\"2025-01-03T13:37:00Z\"),\n                    \"benefit_id\": \"397a17aa-15cf-4cb4-9333-18040203cf98\",\n                    \"benefit_type\": polar_sdk.BenefitType.METER_CREDIT,\n                    \"benefit_metadata\": {\n                        \"key\": \"value\",\n                    },\n                    \"properties\": {},\n                },\n            ],\n            \"active_meters\": [\n                {\n                    \"id\": \"<value>\",\n                    \"created_at\": parse_datetime(\"2023-08-10T12:57:32.427Z\"),\n                    \"modified_at\": parse_datetime(\"2024-11-09T02:09:01.550Z\"),\n                    \"meter_id\": \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    \"consumed_units\": 25,\n                    \"credited_units\": 100,\n                    \"balance\": 75,\n                },\n            ],\n            \"avatar_url\": \"https://www.gravatar.com/avatar/xxx?d=404\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["customer.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcustomer_updated_post(request={\n        \"type\": \"customer.updated\",\n        \"timestamp\": parse_datetime(\"2023-07-09T20:22:33.716Z\"),\n        \"data\": {\n            \"id\": \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n            \"created_at\": parse_datetime(\"2024-07-18T23:25:12.977Z\"),\n            \"modified_at\": parse_datetime(\"2023-04-07T04:58:11.725Z\"),\n            \"metadata\": {\n                \"key\": 983601,\n            },\n            \"external_id\": \"usr_1337\",\n            \"email\": \"customer@example.com\",\n            \"email_verified\": True,\n            \"name\": \"John Doe\",\n            \"billing_address\": {\n                \"country\": polar_sdk.CountryAlpha2.US,\n            },\n            \"tax_id\": [\n                \"911144442\",\n                \"us_ein\",\n            ],\n            \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"deleted_at\": parse_datetime(\"2025-01-11T12:43:11.694Z\"),\n            \"avatar_url\": \"https://www.gravatar.com/avatar/xxx?d=404\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_created_post(request=polar_sdk.WebhookOrderCreatedPayload(\n        timestamp=parse_datetime(\"2024-08-21T06:55:49.348Z\"),\n        data=polar_sdk.Order(\n            id=\"<value>\",\n            created_at=parse_datetime(\"2023-01-02T23:31:01.991Z\"),\n            modified_at=parse_datetime(\"2025-11-09T23:45:36.352Z\"),\n            status=polar_sdk.OrderStatus.PENDING,\n            paid=True,\n            subtotal_amount=220865,\n            discount_amount=835005,\n            net_amount=913636,\n            tax_amount=727987,\n            total_amount=597376,\n            from_balance_amount=864844,\n            refunded_amount=493180,\n            refunded_tax_amount=603288,\n            currency=\"Norwegian Krone\",\n            billing_reason=polar_sdk.OrderBillingReason.PURCHASE,\n            billing_name=\"<value>\",\n            billing_address=polar_sdk.Address(\n                country=polar_sdk.CountryAlpha2.US,\n            ),\n            is_invoice_generated=False,\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            subscription_id=\"<value>\",\n            checkout_id=\"<value>\",\n            metadata={\n\n            },\n            customer=polar_sdk.OrderCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2023-03-27T11:03:51.570Z\"),\n                modified_at=parse_datetime(\"2024-06-30T16:49:49.935Z\"),\n                metadata={\n                    \"key\": 268152,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=polar_sdk.CountryAlpha2.US,\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2023-10-18T19:16:06.791Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            user_id=\"<value>\",\n            product=polar_sdk.OrderProduct(\n                metadata={\n\n                },\n                created_at=parse_datetime(\"2023-07-25T14:06:55.496Z\"),\n                modified_at=parse_datetime(\"2023-08-23T12:17:55.172Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=None,\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=True,\n                is_archived=True,\n                organization_id=\"<value>\",\n            ),\n            discount=polar_sdk.DiscountFixedOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                type=polar_sdk.DiscountType.FIXED,\n                amount=89700,\n                currency=\"Somali Shilling\",\n                created_at=parse_datetime(\"2024-06-03T22:49:40.494Z\"),\n                modified_at=parse_datetime(\"2024-04-12T09:11:00.490Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": \"<value>\",\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2023-08-12T07:51:56.436Z\"),\n                ends_at=parse_datetime(\"2023-05-06T17:33:16.103Z\"),\n                max_redemptions=254706,\n                redemptions_count=852483,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            subscription=polar_sdk.OrderSubscription(\n                metadata={\n                    \"key\": 5558.24,\n                },\n                created_at=parse_datetime(\"2024-05-10T05:33:12.990Z\"),\n                modified_at=parse_datetime(\"2024-10-27T02:55:38.822Z\"),\n                id=\"<value>\",\n                amount=515872,\n                currency=\"Jamaican Dollar\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                status=polar_sdk.SubscriptionStatus.CANCELED,\n                current_period_start=parse_datetime(\"2023-01-30T13:01:14.788Z\"),\n                current_period_end=parse_datetime(\"2025-12-27T11:04:16.188Z\"),\n                cancel_at_period_end=True,\n                canceled_at=parse_datetime(\"2024-10-16T20:18:34.908Z\"),\n                started_at=parse_datetime(\"2025-03-18T15:38:59.923Z\"),\n                ends_at=parse_datetime(\"2024-11-16T22:02:37.250Z\"),\n                ended_at=parse_datetime(\"2024-09-10T19:42:40.294Z\"),\n                customer_id=\"<value>\",\n                product_id=\"<value>\",\n                discount_id=None,\n                checkout_id=\"<value>\",\n                customer_cancellation_reason=None,\n                customer_cancellation_comment=\"<value>\",\n            ),\n            items=[],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.paid"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_paid_post(request=polar_sdk.WebhookOrderPaidPayload(\n        timestamp=parse_datetime(\"2025-12-05T07:44:21.172Z\"),\n        data=polar_sdk.Order(\n            id=\"<value>\",\n            created_at=parse_datetime(\"2025-07-27T09:45:49.517Z\"),\n            modified_at=parse_datetime(\"2024-12-13T20:55:19.644Z\"),\n            status=polar_sdk.OrderStatus.PARTIALLY_REFUNDED,\n            paid=True,\n            subtotal_amount=990825,\n            discount_amount=746396,\n            net_amount=341385,\n            tax_amount=486648,\n            total_amount=562504,\n            from_balance_amount=314047,\n            refunded_amount=570780,\n            refunded_tax_amount=627737,\n            currency=\"Hong Kong Dollar\",\n            billing_reason=polar_sdk.OrderBillingReason.SUBSCRIPTION_UPDATE,\n            billing_name=\"<value>\",\n            billing_address=polar_sdk.Address(\n                country=polar_sdk.CountryAlpha2.US,\n            ),\n            is_invoice_generated=False,\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=None,\n            subscription_id=\"<value>\",\n            checkout_id=\"<value>\",\n            metadata={\n                \"key\": True,\n            },\n            customer=polar_sdk.OrderCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2023-06-18T22:24:34.935Z\"),\n                modified_at=parse_datetime(\"2025-08-01T03:33:20.782Z\"),\n                metadata={\n                    \"key\": 179185,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=polar_sdk.CountryAlpha2.US,\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2025-07-31T08:10:01.120Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            user_id=\"<value>\",\n            product=polar_sdk.OrderProduct(\n                metadata={\n\n                },\n                created_at=parse_datetime(\"2025-10-14T16:14:37.497Z\"),\n                modified_at=parse_datetime(\"2024-07-05T21:05:22.131Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"unlike hutch nor table reproachfully eulogise\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.WEEK,\n                is_recurring=False,\n                is_archived=True,\n                organization_id=\"<value>\",\n            ),\n            discount=polar_sdk.DiscountPercentageRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.FOREVER,\n                duration_in_months=678845,\n                type=polar_sdk.DiscountType.FIXED,\n                basis_points=307762,\n                created_at=parse_datetime(\"2024-04-10T18:11:00.918Z\"),\n                modified_at=parse_datetime(\"2024-12-20T04:35:24.232Z\"),\n                id=\"<value>\",\n                metadata={\n\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2025-05-13T02:34:59.052Z\"),\n                ends_at=parse_datetime(\"2024-05-17T02:38:00.485Z\"),\n                max_redemptions=400985,\n                redemptions_count=973205,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            subscription=polar_sdk.OrderSubscription(\n                metadata={\n                    \"key\": 568756,\n                },\n                created_at=parse_datetime(\"2024-05-24T21:01:40.292Z\"),\n                modified_at=parse_datetime(\"2024-05-25T21:22:06.978Z\"),\n                id=\"<value>\",\n                amount=299042,\n                currency=\"Pound Sterling\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                status=polar_sdk.SubscriptionStatus.ACTIVE,\n                current_period_start=parse_datetime(\"2025-03-08T16:10:05.952Z\"),\n                current_period_end=parse_datetime(\"2024-09-10T07:58:34.888Z\"),\n                cancel_at_period_end=True,\n                canceled_at=parse_datetime(\"2023-09-16T09:43:57.152Z\"),\n                started_at=parse_datetime(\"2024-08-15T07:25:23.875Z\"),\n                ends_at=parse_datetime(\"2025-02-12T23:41:13.290Z\"),\n                ended_at=parse_datetime(\"2023-02-24T15:15:22.018Z\"),\n                customer_id=\"<value>\",\n                product_id=\"<value>\",\n                discount_id=\"<value>\",\n                checkout_id=\"<value>\",\n                customer_cancellation_reason=polar_sdk.CustomerCancellationReason.MISSING_FEATURES,\n                customer_cancellation_comment=\"<value>\",\n            ),\n            items=[\n                polar_sdk.OrderItemSchema(\n                    created_at=parse_datetime(\"2024-09-21T14:56:16.106Z\"),\n                    modified_at=parse_datetime(\"2023-01-21T03:35:38.158Z\"),\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=870773,\n                    tax_amount=305914,\n                    proration=True,\n                    product_price_id=\"<value>\",\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.refunded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_refunded_post(request=polar_sdk.WebhookOrderRefundedPayload(\n        timestamp=parse_datetime(\"2024-07-23T18:00:11.615Z\"),\n        data=polar_sdk.Order(\n            id=\"<value>\",\n            created_at=parse_datetime(\"2025-03-19T11:53:59.744Z\"),\n            modified_at=parse_datetime(\"2024-12-01T04:03:14.906Z\"),\n            status=polar_sdk.OrderStatus.REFUNDED,\n            paid=True,\n            subtotal_amount=294178,\n            discount_amount=721778,\n            net_amount=913001,\n            tax_amount=518308,\n            total_amount=820663,\n            from_balance_amount=472431,\n            refunded_amount=879331,\n            refunded_tax_amount=342380,\n            currency=\"Lebanese Pound\",\n            billing_reason=polar_sdk.OrderBillingReason.SUBSCRIPTION_CREATE,\n            billing_name=\"<value>\",\n            billing_address=polar_sdk.Address(\n                country=polar_sdk.CountryAlpha2.US,\n            ),\n            is_invoice_generated=False,\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            subscription_id=\"<value>\",\n            checkout_id=\"<value>\",\n            metadata={\n                \"key\": 494.76,\n            },\n            customer=polar_sdk.OrderCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2024-12-27T19:16:00.555Z\"),\n                modified_at=parse_datetime(\"2023-04-17T08:12:37.300Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=polar_sdk.CountryAlpha2.US,\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=None,\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            user_id=\"<value>\",\n            product=polar_sdk.OrderProduct(\n                metadata={\n\n                },\n                created_at=parse_datetime(\"2023-01-16T07:26:04.196Z\"),\n                modified_at=parse_datetime(\"2025-01-18T16:58:42.976Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"anxiously notwithstanding softly wilderness drat helpless conservation ew\",\n                recurring_interval=None,\n                is_recurring=False,\n                is_archived=False,\n                organization_id=\"<value>\",\n            ),\n            discount=polar_sdk.DiscountPercentageRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.FOREVER,\n                duration_in_months=177173,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                basis_points=175227,\n                created_at=parse_datetime(\"2024-06-23T22:24:00.212Z\"),\n                modified_at=parse_datetime(\"2025-09-20T03:04:20.355Z\"),\n                id=\"<value>\",\n                metadata={\n\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2024-09-22T11:17:00.498Z\"),\n                ends_at=parse_datetime(\"2023-01-04T20:02:20.162Z\"),\n                max_redemptions=477690,\n                redemptions_count=429180,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            subscription=polar_sdk.OrderSubscription(\n                metadata={\n                    \"key\": True,\n                },\n                created_at=parse_datetime(\"2023-12-28T02:40:16.151Z\"),\n                modified_at=None,\n                id=\"<value>\",\n                amount=801440,\n                currency=\"Kwanza\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.WEEK,\n                status=polar_sdk.SubscriptionStatus.UNPAID,\n                current_period_start=parse_datetime(\"2025-12-13T00:18:40.316Z\"),\n                current_period_end=parse_datetime(\"2025-09-10T16:01:49.333Z\"),\n                cancel_at_period_end=False,\n                canceled_at=parse_datetime(\"2023-11-12T03:39:13.416Z\"),\n                started_at=parse_datetime(\"2024-11-06T04:39:52.000Z\"),\n                ends_at=parse_datetime(\"2024-06-22T23:44:00.447Z\"),\n                ended_at=parse_datetime(\"2024-11-02T04:41:56.340Z\"),\n                customer_id=\"<value>\",\n                product_id=\"<value>\",\n                discount_id=\"<value>\",\n                checkout_id=\"<value>\",\n                customer_cancellation_reason=polar_sdk.CustomerCancellationReason.MISSING_FEATURES,\n                customer_cancellation_comment=\"<value>\",\n            ),\n            items=[\n                polar_sdk.OrderItemSchema(\n                    created_at=parse_datetime(\"2024-06-01T22:10:54.514Z\"),\n                    modified_at=None,\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=584605,\n                    tax_amount=493789,\n                    proration=True,\n                    product_price_id=\"<value>\",\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_updated_post(request=polar_sdk.WebhookOrderUpdatedPayload(\n        timestamp=parse_datetime(\"2023-10-25T00:08:50.290Z\"),\n        data=polar_sdk.Order(\n            id=\"<value>\",\n            created_at=parse_datetime(\"2024-04-30T23:35:35.375Z\"),\n            modified_at=parse_datetime(\"2025-06-01T02:02:46.580Z\"),\n            status=polar_sdk.OrderStatus.PENDING,\n            paid=True,\n            subtotal_amount=338283,\n            discount_amount=321919,\n            net_amount=827864,\n            tax_amount=380359,\n            total_amount=596980,\n            from_balance_amount=404069,\n            refunded_amount=718668,\n            refunded_tax_amount=655991,\n            currency=\"Rupiah\",\n            billing_reason=polar_sdk.OrderBillingReason.SUBSCRIPTION_CREATE,\n            billing_name=\"<value>\",\n            billing_address=polar_sdk.Address(\n                country=polar_sdk.CountryAlpha2.US,\n            ),\n            is_invoice_generated=True,\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            subscription_id=\"<value>\",\n            checkout_id=\"<value>\",\n            metadata={\n\n            },\n            customer=polar_sdk.OrderCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2023-07-25T12:14:47.758Z\"),\n                modified_at=parse_datetime(\"2023-10-28T19:38:51.490Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=None,\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=None,\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            user_id=\"<value>\",\n            product=polar_sdk.OrderProduct(\n                metadata={\n                    \"key\": \"<value>\",\n                },\n                created_at=parse_datetime(\"2023-09-09T23:29:46.282Z\"),\n                modified_at=parse_datetime(\"2023-12-07T14:52:42.853Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"uniform waver pish coliseum consign absent drat cap including oof\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=False,\n                is_archived=False,\n                organization_id=\"<value>\",\n            ),\n            discount=polar_sdk.DiscountPercentageRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.FOREVER,\n                duration_in_months=860052,\n                type=polar_sdk.DiscountType.FIXED,\n                basis_points=650798,\n                created_at=parse_datetime(\"2024-02-06T09:06:51.703Z\"),\n                modified_at=None,\n                id=\"<value>\",\n                metadata={\n\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2023-11-03T05:13:30.202Z\"),\n                ends_at=parse_datetime(\"2024-03-03T03:52:46.888Z\"),\n                max_redemptions=858600,\n                redemptions_count=637128,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            subscription=None,\n            items=[\n                polar_sdk.OrderItemSchema(\n                    created_at=parse_datetime(\"2024-02-19T19:25:59.986Z\"),\n                    modified_at=parse_datetime(\"2025-07-23T06:42:36.223Z\"),\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=669405,\n                    tax_amount=12321,\n                    proration=False,\n                    product_price_id=None,\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["organization.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorganization_updated_post(request={\n        \"type\": \"organization.updated\",\n        \"timestamp\": parse_datetime(\"2025-08-19T15:02:44.139Z\"),\n        \"data\": {\n            \"created_at\": parse_datetime(\"2025-05-07T21:24:48.059Z\"),\n            \"modified_at\": parse_datetime(\"2023-04-16T23:18:12.986Z\"),\n            \"id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"name\": \"<value>\",\n            \"slug\": \"<value>\",\n            \"avatar_url\": \"https://pessimistic-going.name/\",\n            \"email\": \"Stefan_Pagac@yahoo.com\",\n            \"website\": \"<value>\",\n            \"socials\": [],\n            \"status\": polar_sdk.Status.CREATED,\n            \"details_submitted_at\": parse_datetime(\"2024-05-05T12:48:25.627Z\"),\n            \"feature_settings\": {},\n            \"subscription_settings\": {\n                \"allow_multiple_subscriptions\": True,\n                \"allow_customer_updates\": False,\n                \"proration_behavior\": polar_sdk.SubscriptionProrationBehavior.PRORATE,\n            },\n            \"notification_settings\": {\n                \"new_order\": True,\n                \"new_subscription\": True,\n            },\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["product.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointproduct_created_post(request={\n        \"type\": \"product.created\",\n        \"timestamp\": parse_datetime(\"2023-10-13T02:47:55.082Z\"),\n        \"data\": {\n            \"created_at\": parse_datetime(\"2023-01-15T03:15:59.062Z\"),\n            \"modified_at\": parse_datetime(\"2023-07-04T11:33:29.001Z\"),\n            \"id\": \"<value>\",\n            \"name\": \"<value>\",\n            \"description\": \"times immaculate minus\",\n            \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n            \"is_recurring\": False,\n            \"is_archived\": True,\n            \"organization_id\": \"<value>\",\n            \"metadata\": {\n                \"key\": 489697,\n            },\n            \"prices\": [\n                {\n                    \"created_at\": parse_datetime(\"2023-10-22T03:18:14.058Z\"),\n                    \"modified_at\": parse_datetime(\"2025-12-25T12:42:41.486Z\"),\n                    \"id\": \"<value>\",\n                    \"amount_type\": \"free\",\n                    \"is_archived\": False,\n                    \"product_id\": \"<value>\",\n                    \"type\": \"recurring\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    \"legacy\": True,\n                },\n            ],\n            \"benefits\": [\n                {\n                    \"id\": \"<value>\",\n                    \"created_at\": parse_datetime(\"2023-04-17T15:58:24.892Z\"),\n                    \"modified_at\": parse_datetime(\"2025-05-26T08:28:21.025Z\"),\n                    \"type\": \"meter_credit\",\n                    \"description\": \"likewise emergent yippee embody ick gadzooks\",\n                    \"selectable\": True,\n                    \"deletable\": True,\n                    \"organization_id\": \"<value>\",\n                    \"metadata\": {\n                        \"key\": 487853,\n                    },\n                    \"properties\": {\n                        \"units\": 418012,\n                        \"rollover\": False,\n                        \"meter_id\": \"<value>\",\n                    },\n                },\n            ],\n            \"medias\": [\n                {\n                    \"id\": \"<value>\",\n                    \"organization_id\": \"<value>\",\n                    \"name\": \"<value>\",\n                    \"path\": \"/mnt\",\n                    \"mime_type\": \"<value>\",\n                    \"size\": 974093,\n                    \"storage_version\": \"<value>\",\n                    \"checksum_etag\": \"<value>\",\n                    \"checksum_sha256_base64\": \"<value>\",\n                    \"checksum_sha256_hex\": \"<value>\",\n                    \"last_modified_at\": parse_datetime(\"2024-09-28T09:54:43.061Z\"),\n                    \"version\": \"<value>\",\n                    \"service\": \"product_media\",\n                    \"is_uploaded\": True,\n                    \"created_at\": parse_datetime(\"2025-10-13T07:25:06.957Z\"),\n                    \"size_readable\": \"<value>\",\n                    \"public_url\": \"https://usable-bowling.net\",\n                },\n            ],\n            \"attached_custom_fields\": [\n                {\n                    \"custom_field_id\": \"<value>\",\n                    \"custom_field\": {\n                        \"created_at\": parse_datetime(\"2023-04-11T22:11:51.564Z\"),\n                        \"modified_at\": parse_datetime(\"2024-07-17T21:59:33.594Z\"),\n                        \"id\": \"<value>\",\n                        \"metadata\": {\n\n                        },\n                        \"type\": \"text\",\n                        \"slug\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        \"properties\": {},\n                    },\n                    \"order\": 495299,\n                    \"required\": False,\n                },\n            ],\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["product.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointproduct_updated_post(request={\n        \"type\": \"product.updated\",\n        \"timestamp\": parse_datetime(\"2024-08-25T02:00:54.049Z\"),\n        \"data\": {\n            \"created_at\": parse_datetime(\"2025-02-11T18:19:05.372Z\"),\n            \"modified_at\": parse_datetime(\"2025-07-31T19:14:23.351Z\"),\n            \"id\": \"<value>\",\n            \"name\": \"<value>\",\n            \"description\": \"thyme careless stump transplant quickly remarkable including mmm dependency softly\",\n            \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n            \"is_recurring\": True,\n            \"is_archived\": True,\n            \"organization_id\": \"<value>\",\n            \"metadata\": {\n\n            },\n            \"prices\": [],\n            \"benefits\": [],\n            \"medias\": [],\n            \"attached_custom_fields\": [\n                {\n                    \"custom_field_id\": \"<value>\",\n                    \"custom_field\": {\n                        \"created_at\": parse_datetime(\"2023-06-25T21:47:16.070Z\"),\n                        \"modified_at\": parse_datetime(\"2023-12-26T19:54:07.292Z\"),\n                        \"id\": \"<value>\",\n                        \"metadata\": {\n\n                        },\n                        \"type\": \"number\",\n                        \"slug\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        \"properties\": {},\n                    },\n                    \"order\": 910988,\n                    \"required\": True,\n                },\n            ],\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["refund.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointrefund_created_post(request={\n        \"type\": \"refund.created\",\n        \"timestamp\": parse_datetime(\"2025-02-15T13:46:01.700Z\"),\n        \"data\": {\n            \"created_at\": parse_datetime(\"2023-12-02T00:48:24.931Z\"),\n            \"modified_at\": parse_datetime(\"2025-08-16T15:26:20.191Z\"),\n            \"id\": \"<value>\",\n            \"metadata\": {\n                \"key\": \"<value>\",\n            },\n            \"status\": polar_sdk.RefundStatus.PENDING,\n            \"reason\": polar_sdk.RefundReason.OTHER,\n            \"amount\": 104569,\n            \"tax_amount\": 295454,\n            \"currency\": \"Solomon Islands Dollar\",\n            \"organization_id\": \"<value>\",\n            \"order_id\": \"<value>\",\n            \"subscription_id\": \"<value>\",\n            \"customer_id\": \"<value>\",\n            \"revoke_benefits\": False,\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["refund.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointrefund_updated_post(request={\n        \"type\": \"refund.updated\",\n        \"timestamp\": parse_datetime(\"2023-01-08T20:35:39.672Z\"),\n        \"data\": {\n            \"created_at\": parse_datetime(\"2025-03-28T13:42:04.506Z\"),\n            \"modified_at\": parse_datetime(\"2024-08-07T08:31:25.154Z\"),\n            \"id\": \"<value>\",\n            \"metadata\": {\n\n            },\n            \"status\": polar_sdk.RefundStatus.CANCELED,\n            \"reason\": polar_sdk.RefundReason.SERVICE_DISRUPTION,\n            \"amount\": 986698,\n            \"tax_amount\": 785012,\n            \"currency\": \"Congolese Franc\",\n            \"organization_id\": \"<value>\",\n            \"order_id\": \"<value>\",\n            \"subscription_id\": \"<value>\",\n            \"customer_id\": \"<value>\",\n            \"revoke_benefits\": False,\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.active"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_active_post(request=polar_sdk.WebhookSubscriptionActivePayload(\n        timestamp=parse_datetime(\"2023-08-13T01:28:21.362Z\"),\n        data=polar_sdk.Subscription(\n            created_at=parse_datetime(\"2023-10-12T10:17:29.274Z\"),\n            modified_at=parse_datetime(\"2023-12-18T04:45:55.702Z\"),\n            id=\"<value>\",\n            amount=898742,\n            currency=\"Pound Sterling\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            status=polar_sdk.SubscriptionStatus.INCOMPLETE_EXPIRED,\n            current_period_start=parse_datetime(\"2023-04-09T09:06:19.384Z\"),\n            current_period_end=None,\n            cancel_at_period_end=True,\n            canceled_at=parse_datetime(\"2023-07-21T07:29:31.409Z\"),\n            started_at=parse_datetime(\"2025-08-05T11:38:46.213Z\"),\n            ends_at=parse_datetime(\"2024-09-05T04:27:23.768Z\"),\n            ended_at=parse_datetime(\"2024-06-17T20:38:09.011Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.MISSING_FEATURES,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n                \"key\": 4786.4,\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2025-01-01T23:32:39.659Z\"),\n                modified_at=parse_datetime(\"2025-01-01T03:00:09.282Z\"),\n                metadata={\n                    \"key\": 796236,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=polar_sdk.CountryAlpha2.US,\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=None,\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            product=polar_sdk.Product(\n                created_at=parse_datetime(\"2025-11-05T10:18:40.300Z\"),\n                modified_at=parse_datetime(\"2024-04-23T18:24:43.408Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"athwart fail wound oh nor boohoo reasoning against since\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.WEEK,\n                is_recurring=False,\n                is_archived=True,\n                organization_id=\"<value>\",\n                metadata={\n\n                },\n                prices=[],\n                benefits=[\n                    polar_sdk.BenefitCustom(\n                        id=\"<value>\",\n                        created_at=parse_datetime(\"2025-12-07T07:01:30.650Z\"),\n                        modified_at=parse_datetime(\"2025-05-21T10:49:13.924Z\"),\n                        description=\"effector as upbeat\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        metadata={\n\n                        },\n                        properties=polar_sdk.BenefitCustomProperties(\n                            note=\"<value>\",\n                        ),\n                    ),\n                ],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/net\",\n                        mime_type=\"<value>\",\n                        size=11881,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=None,\n                        last_modified_at=parse_datetime(\"2023-11-14T06:50:49.907Z\"),\n                        version=None,\n                        is_uploaded=False,\n                        created_at=parse_datetime(\"2025-10-14T21:02:51.234Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://precious-passport.com\",\n                    ),\n                ],\n                attached_custom_fields=[],\n            ),\n            discount=None,\n            prices=[],\n            meters=[\n                polar_sdk.SubscriptionMeter(\n                    created_at=parse_datetime(\"2023-10-17T15:57:30.746Z\"),\n                    modified_at=parse_datetime(\"2023-01-26T13:42:22.194Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n\n                        },\n                        created_at=parse_datetime(\"2025-10-16T02:50:36.102Z\"),\n                        modified_at=parse_datetime(\"2024-11-23T13:29:39.753Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.AND,\n                            clauses=[],\n                        ),\n                        aggregation=polar_sdk.PropertyAggregation(\n                            func=polar_sdk.Func.AVG,\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.canceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_canceled_post(request=polar_sdk.WebhookSubscriptionCanceledPayload(\n        timestamp=parse_datetime(\"2025-02-09T04:39:02.332Z\"),\n        data=polar_sdk.Subscription(\n            created_at=parse_datetime(\"2025-04-09T17:46:08.645Z\"),\n            modified_at=None,\n            id=\"<value>\",\n            amount=137392,\n            currency=\"New Taiwan Dollar\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.DAY,\n            status=polar_sdk.SubscriptionStatus.ACTIVE,\n            current_period_start=parse_datetime(\"2023-06-17T04:15:56.819Z\"),\n            current_period_end=parse_datetime(\"2023-06-02T15:48:16.857Z\"),\n            cancel_at_period_end=False,\n            canceled_at=parse_datetime(\"2024-01-07T18:54:45.602Z\"),\n            started_at=parse_datetime(\"2025-02-23T12:23:49.579Z\"),\n            ends_at=parse_datetime(\"2023-11-16T08:24:59.166Z\"),\n            ended_at=parse_datetime(\"2023-07-21T16:25:14.433Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=None,\n            checkout_id=None,\n            customer_cancellation_reason=None,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2023-10-25T05:52:42.846Z\"),\n                modified_at=parse_datetime(\"2023-09-20T10:20:50.540Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=polar_sdk.CountryAlpha2.US,\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2025-04-15T00:52:17.297Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            product=polar_sdk.Product(\n                created_at=parse_datetime(\"2024-10-18T00:58:28.923Z\"),\n                modified_at=parse_datetime(\"2025-06-11T17:21:10.206Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"rekindle very whoever happily provision pfft outrun surface\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.DAY,\n                is_recurring=False,\n                is_archived=True,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": True,\n                },\n                prices=[],\n                benefits=[\n                    polar_sdk.BenefitLicenseKeys(\n                        id=\"<value>\",\n                        created_at=parse_datetime(\"2024-10-21T11:59:45.315Z\"),\n                        modified_at=parse_datetime(\"2025-06-11T03:26:05.845Z\"),\n                        description=\"yippee broadcast er yowza\",\n                        selectable=True,\n                        deletable=True,\n                        organization_id=\"<value>\",\n                        metadata={\n\n                        },\n                        properties=polar_sdk.BenefitLicenseKeysProperties(\n                            prefix=\"<value>\",\n                            expires=polar_sdk.BenefitLicenseKeyExpirationProperties(\n                                ttl=156565,\n                                timeframe=polar_sdk.Timeframe.YEAR,\n                            ),\n                            activations=polar_sdk.BenefitLicenseKeyActivationProperties(\n                                limit=676095,\n                                enable_customer_admin=False,\n                            ),\n                            limit_usage=637284,\n                        ),\n                    ),\n                ],\n                medias=[],\n                attached_custom_fields=[\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldText(\n                            created_at=parse_datetime(\"2023-03-07T15:42:46.324Z\"),\n                            modified_at=parse_datetime(\"2024-09-08T21:12:01.583Z\"),\n                            id=\"<value>\",\n                            metadata={\n\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldTextProperties(),\n                        ),\n                        order=147849,\n                        required=False,\n                    ),\n                ],\n            ),\n            discount=polar_sdk.DiscountFixedRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                duration_in_months=162086,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                amount=280213,\n                currency=\"Mexican Peso\",\n                created_at=parse_datetime(\"2024-09-21T23:00:18.902Z\"),\n                modified_at=parse_datetime(\"2024-06-12T08:11:27.558Z\"),\n                id=\"<value>\",\n                metadata={\n\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2024-04-30T07:29:19.925Z\"),\n                ends_at=parse_datetime(\"2025-12-08T04:46:29.428Z\"),\n                max_redemptions=264852,\n                redemptions_count=579638,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            prices=[\n                polar_sdk.LegacyRecurringProductPriceFixed(\n                    created_at=parse_datetime(\"2024-05-17T23:59:28.786Z\"),\n                    modified_at=parse_datetime(\"2024-05-31T09:51:13.446Z\"),\n                    id=\"<value>\",\n                    is_archived=True,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.WEEK,\n                    price_currency=\"<value>\",\n                    price_amount=57753,\n                ),\n            ],\n            meters=[\n                polar_sdk.SubscriptionMeter(\n                    created_at=parse_datetime(\"2023-04-20T13:22:47.883Z\"),\n                    modified_at=parse_datetime(\"2024-05-07T04:06:16.229Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n                            \"key\": False,\n                        },\n                        created_at=parse_datetime(\"2024-05-08T15:55:55.133Z\"),\n                        modified_at=parse_datetime(\"2024-02-15T18:41:28.030Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.AND,\n                            clauses=[],\n                        ),\n                        aggregation=polar_sdk.CountAggregation(),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_created_post(request=polar_sdk.WebhookSubscriptionCreatedPayload(\n        timestamp=parse_datetime(\"2024-05-03T11:46:21.459Z\"),\n        data=polar_sdk.Subscription(\n            created_at=parse_datetime(\"2023-12-03T10:52:23.880Z\"),\n            modified_at=parse_datetime(\"2024-05-29T05:21:44.072Z\"),\n            id=\"<value>\",\n            amount=119240,\n            currency=\"Zambian Kwacha\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.DAY,\n            status=polar_sdk.SubscriptionStatus.TRIALING,\n            current_period_start=parse_datetime(\"2024-02-03T21:22:53.116Z\"),\n            current_period_end=parse_datetime(\"2023-10-20T18:48:25.568Z\"),\n            cancel_at_period_end=False,\n            canceled_at=parse_datetime(\"2023-09-10T12:12:44.499Z\"),\n            started_at=parse_datetime(\"2024-09-02T19:02:23.015Z\"),\n            ends_at=parse_datetime(\"2023-08-19T21:45:43.735Z\"),\n            ended_at=parse_datetime(\"2023-03-15T19:14:53.866Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.TOO_EXPENSIVE,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n                \"key\": 1258.71,\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2024-09-10T08:59:46.091Z\"),\n                modified_at=parse_datetime(\"2024-07-06T00:27:46.272Z\"),\n                metadata={\n                    \"key\": 9576.45,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=polar_sdk.CountryAlpha2.US,\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2025-06-26T21:09:46.234Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            product=polar_sdk.Product(\n                created_at=parse_datetime(\"2023-05-15T22:05:41.858Z\"),\n                modified_at=parse_datetime(\"2024-01-31T16:35:38.441Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"around disposer scholarship zowie chow pish afore typify harvest\",\n                recurring_interval=None,\n                is_recurring=False,\n                is_archived=False,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": 751680,\n                },\n                prices=[\n                    polar_sdk.LegacyRecurringProductPriceFree(\n                        created_at=parse_datetime(\"2023-06-14T06:12:12.351Z\"),\n                        modified_at=parse_datetime(\"2025-12-04T13:50:03.874Z\"),\n                        id=\"<value>\",\n                        is_archived=True,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    ),\n                ],\n                benefits=[],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/etc/namedb\",\n                        mime_type=\"<value>\",\n                        size=377784,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=parse_datetime(\"2025-01-27T12:39:41.519Z\"),\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=parse_datetime(\"2025-11-29T13:54:30.761Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://tangible-maintainer.name/\",\n                    ),\n                ],\n                attached_custom_fields=[],\n            ),\n            discount=polar_sdk.DiscountPercentageOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.REPEATING,\n                type=polar_sdk.DiscountType.FIXED,\n                basis_points=728623,\n                created_at=parse_datetime(\"2025-12-01T13:59:05.249Z\"),\n                modified_at=parse_datetime(\"2023-05-31T15:26:51.884Z\"),\n                id=\"<value>\",\n                metadata={\n\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2025-12-18T04:49:27.384Z\"),\n                ends_at=parse_datetime(\"2024-07-25T11:55:55.184Z\"),\n                max_redemptions=166124,\n                redemptions_count=123839,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            prices=[],\n            meters=[\n                polar_sdk.SubscriptionMeter(\n                    created_at=parse_datetime(\"2025-12-26T01:33:27.412Z\"),\n                    modified_at=parse_datetime(\"2025-01-02T18:50:53.887Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n\n                        },\n                        created_at=parse_datetime(\"2025-09-23T22:50:26.075Z\"),\n                        modified_at=None,\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.OR,\n                            clauses=[\n                                polar_sdk.FilterClause(\n                                    property=\"<value>\",\n                                    operator=polar_sdk.FilterOperator.NE,\n                                    value=\"<value>\",\n                                ),\n                            ],\n                        ),\n                        aggregation=polar_sdk.PropertyAggregation(\n                            func=polar_sdk.Func.MAX,\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_revoked_post(request=polar_sdk.WebhookSubscriptionRevokedPayload(\n        timestamp=parse_datetime(\"2024-01-02T06:40:50.860Z\"),\n        data=polar_sdk.Subscription(\n            created_at=parse_datetime(\"2023-03-16T08:42:29.566Z\"),\n            modified_at=parse_datetime(\"2023-10-28T01:20:21.930Z\"),\n            id=\"<value>\",\n            amount=88813,\n            currency=\"Syrian Pound\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.WEEK,\n            status=polar_sdk.SubscriptionStatus.INCOMPLETE,\n            current_period_start=parse_datetime(\"2025-03-19T11:29:47.842Z\"),\n            current_period_end=parse_datetime(\"2023-11-20T08:24:19.529Z\"),\n            cancel_at_period_end=True,\n            canceled_at=parse_datetime(\"2024-02-14T23:20:57.498Z\"),\n            started_at=parse_datetime(\"2025-04-28T23:19:31.379Z\"),\n            ends_at=parse_datetime(\"2023-04-29T06:37:50.213Z\"),\n            ended_at=parse_datetime(\"2024-02-16T22:20:38.685Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.SWITCHED_SERVICE,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n                \"key\": 8599.31,\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2025-12-12T02:48:12.123Z\"),\n                modified_at=parse_datetime(\"2025-08-13T10:16:30.587Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=polar_sdk.CountryAlpha2.US,\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2023-12-02T01:39:05.956Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            product=polar_sdk.Product(\n                created_at=parse_datetime(\"2023-07-14T08:43:45.509Z\"),\n                modified_at=parse_datetime(\"2025-05-31T05:10:14.997Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"inside overburden quarrelsome outrun phew whose\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.DAY,\n                is_recurring=True,\n                is_archived=True,\n                organization_id=\"<value>\",\n                metadata={\n\n                },\n                prices=[],\n                benefits=[],\n                medias=[],\n                attached_custom_fields=[\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldSelect(\n                            created_at=parse_datetime(\"2024-11-20T10:35:27.268Z\"),\n                            modified_at=parse_datetime(\"2024-12-28T11:50:23.357Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": 939457,\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldSelectProperties(\n                                options=[],\n                            ),\n                        ),\n                        order=518934,\n                        required=True,\n                    ),\n                ],\n            ),\n            discount=polar_sdk.DiscountFixedRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.FOREVER,\n                duration_in_months=956675,\n                type=polar_sdk.DiscountType.FIXED,\n                amount=318678,\n                currency=\"Won\",\n                created_at=parse_datetime(\"2024-06-28T04:33:55.419Z\"),\n                modified_at=parse_datetime(\"2023-04-08T23:58:31.520Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": True,\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2023-01-18T23:12:00.000Z\"),\n                ends_at=None,\n                max_redemptions=841467,\n                redemptions_count=431905,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            prices=[],\n            meters=[\n                polar_sdk.SubscriptionMeter(\n                    created_at=parse_datetime(\"2023-01-12T15:01:17.401Z\"),\n                    modified_at=parse_datetime(\"2024-03-19T23:35:08.612Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n                            \"key\": 463129,\n                        },\n                        created_at=parse_datetime(\"2023-11-24T08:24:04.782Z\"),\n                        modified_at=parse_datetime(\"2025-06-04T07:43:03.654Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.AND,\n                            clauses=[\n                                polar_sdk.FilterClause(\n                                    property=\"<value>\",\n                                    operator=polar_sdk.FilterOperator.GTE,\n                                    value=True,\n                                ),\n                            ],\n                        ),\n                        aggregation=polar_sdk.UniqueAggregation(\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.uncanceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_uncanceled_post(request=polar_sdk.WebhookSubscriptionUncanceledPayload(\n        timestamp=parse_datetime(\"2023-02-06T17:25:10.106Z\"),\n        data=polar_sdk.Subscription(\n            created_at=parse_datetime(\"2023-05-13T11:53:26.507Z\"),\n            modified_at=None,\n            id=\"<value>\",\n            amount=755736,\n            currency=\"Iceland Krona\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.DAY,\n            status=polar_sdk.SubscriptionStatus.CANCELED,\n            current_period_start=parse_datetime(\"2024-04-11T19:08:16.655Z\"),\n            current_period_end=parse_datetime(\"2023-08-23T01:03:59.107Z\"),\n            cancel_at_period_end=True,\n            canceled_at=parse_datetime(\"2024-11-16T02:01:16.824Z\"),\n            started_at=None,\n            ends_at=parse_datetime(\"2023-12-23T04:50:00.016Z\"),\n            ended_at=parse_datetime(\"2024-10-18T16:25:47.209Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=None,\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.LOW_QUALITY,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2025-10-01T20:42:25.530Z\"),\n                modified_at=parse_datetime(\"2024-07-04T17:30:56.477Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=polar_sdk.CountryAlpha2.US,\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2024-12-20T09:31:52.259Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            product=polar_sdk.Product(\n                created_at=parse_datetime(\"2024-03-26T06:19:23.237Z\"),\n                modified_at=parse_datetime(\"2024-05-11T18:08:21.251Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"questioningly proliferate yet vanish mooch yowza hopeful\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.WEEK,\n                is_recurring=True,\n                is_archived=True,\n                organization_id=\"<value>\",\n                metadata={\n\n                },\n                prices=[],\n                benefits=[],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/usr/local/src\",\n                        mime_type=\"<value>\",\n                        size=930595,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=parse_datetime(\"2024-07-09T11:35:46.121Z\"),\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=parse_datetime(\"2023-01-04T05:09:14.269Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://distant-fen.org/\",\n                    ),\n                ],\n                attached_custom_fields=[],\n            ),\n            discount=polar_sdk.DiscountFixedOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                amount=930,\n                currency=\"Armenian Dram\",\n                created_at=parse_datetime(\"2024-08-04T07:10:18.397Z\"),\n                modified_at=parse_datetime(\"2024-03-24T21:29:58.344Z\"),\n                id=\"<value>\",\n                metadata={\n\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2025-01-07T18:49:53.331Z\"),\n                ends_at=parse_datetime(\"2023-11-21T17:11:26.125Z\"),\n                max_redemptions=None,\n                redemptions_count=198129,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            prices=[\n                polar_sdk.LegacyRecurringProductPriceFixed(\n                    created_at=parse_datetime(\"2024-08-25T04:34:39.417Z\"),\n                    modified_at=parse_datetime(\"2024-09-10T10:32:32.710Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.DAY,\n                    price_currency=\"<value>\",\n                    price_amount=456635,\n                ),\n            ],\n            meters=[],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_updated_post(request=polar_sdk.WebhookSubscriptionUpdatedPayload(\n        timestamp=parse_datetime(\"2023-06-24T13:26:25.969Z\"),\n        data=polar_sdk.Subscription(\n            created_at=parse_datetime(\"2024-05-25T12:11:24.717Z\"),\n            modified_at=parse_datetime(\"2024-07-08T02:17:23.799Z\"),\n            id=\"<value>\",\n            amount=337528,\n            currency=\"Kip\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            status=polar_sdk.SubscriptionStatus.ACTIVE,\n            current_period_start=parse_datetime(\"2023-06-14T15:07:05.619Z\"),\n            current_period_end=parse_datetime(\"2025-04-17T18:51:57.213Z\"),\n            cancel_at_period_end=False,\n            canceled_at=parse_datetime(\"2025-12-29T02:13:52.269Z\"),\n            started_at=parse_datetime(\"2024-10-12T01:39:46.850Z\"),\n            ends_at=parse_datetime(\"2024-08-23T08:17:41.246Z\"),\n            ended_at=parse_datetime(\"2025-04-28T14:07:35.212Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.TOO_COMPLEX,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2024-06-07T17:53:19.130Z\"),\n                modified_at=parse_datetime(\"2024-03-22T08:08:02.561Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=polar_sdk.CountryAlpha2.US,\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2024-03-20T00:06:47.924Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            product=polar_sdk.Product(\n                created_at=parse_datetime(\"2024-01-24T02:08:13.039Z\"),\n                modified_at=parse_datetime(\"2024-04-21T20:23:52.355Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"what swelter when besides utter phew knottily\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.WEEK,\n                is_recurring=True,\n                is_archived=False,\n                organization_id=\"<value>\",\n                metadata={\n\n                },\n                prices=[\n                    polar_sdk.ProductPriceMeteredUnit(\n                        created_at=parse_datetime(\"2025-11-03T01:17:12.036Z\"),\n                        modified_at=parse_datetime(\"2025-08-26T21:48:44.664Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        type=polar_sdk.ProductPriceType.ONE_TIME,\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.WEEK,\n                        price_currency=\"<value>\",\n                        unit_amount=\"<value>\",\n                        cap_amount=71731,\n                        meter_id=\"<value>\",\n                        meter=polar_sdk.ProductPriceMeter(\n                            id=\"<value>\",\n                            name=\"<value>\",\n                        ),\n                    ),\n                ],\n                benefits=[],\n                medias=[],\n                attached_custom_fields=[\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldSelect(\n                            created_at=parse_datetime(\"2023-09-02T08:42:27.221Z\"),\n                            modified_at=parse_datetime(\"2024-10-15T08:38:18.868Z\"),\n                            id=\"<value>\",\n                            metadata={\n\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldSelectProperties(\n                                options=[\n                                    polar_sdk.CustomFieldSelectOption(\n                                        value=\"<value>\",\n                                        label=\"<value>\",\n                                    ),\n                                ],\n                            ),\n                        ),\n                        order=132406,\n                        required=True,\n                    ),\n                ],\n            ),\n            discount=None,\n            prices=[],\n            meters=[],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
