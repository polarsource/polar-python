overlay: 1.0.0
info:
  title: CodeSamples overlay for python target
  version: 0.0.0
actions:
  - target: $["paths"]["/v1/benefits/{id}"]["patch"]
    update:
      x-codeSamples:
        - lang: python
          label: update
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.benefits.update(id="<value>", request_body={})

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/users/subscriptions/{id}"]["patch"]
    update:
      x-codeSamples:
        - lang: python
          label: update
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.users.subscriptions.update(id="<value>", user_subscription_update={
                "product_price_id": "<value>",
            })

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/articles/"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: list
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.articles.list()

            if res is not None:
                while True:
                    # handle items

                    res = res.Next()
                    if res is None:
                        break
  - target: $["paths"]["/v1/articles/{id}/receivers"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: receivers
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.articles.receivers(id="<value>")

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: get_client
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.oauth2.clients.retrieve(client_id="<value>")

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["put"]
    update:
      x-codeSamples:
        - lang: python
          label: update_client
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.oauth2.clients.update(client_id="<value>", o_auth2_client_configuration_update={
                "redirect_uris": [
                    "https://alarming-nondisclosure.com",
                ],
                "client_name": "<value>",
                "client_id": "<value>",
            })

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/benefits/{id}"]["delete"]
    update:
      x-codeSamples:
        - lang: python
          label: delete
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            s.benefits.delete(id="<value>")

            # Use the SDK ...
  - target: $["paths"]["/v1/metrics/"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: get
          source: |-
            import dateutil.parser
            import polar
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.metrics.retrieve(start_date=dateutil.parser.parse("2023-02-11").date(), end_date=dateutil.parser.parse("2024-11-01").date(), interval=polar.Interval.HOUR)

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/repositories/"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: list
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.repositories.list()

            if res is not None:
                while True:
                    # handle items

                    res = res.Next()
                    if res is None:
                        break
  - target: $["paths"]["/v1/organizations/{id}"]["patch"]
    update:
      x-codeSamples:
        - lang: python
          label: update
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.organizations.update(id="<value>", organization_update={})

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/articles/{id}"]["patch"]
    update:
      x-codeSamples:
        - lang: python
          label: update
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.articles.update(id="<value>", article_update={})

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/orders/"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: list
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.orders.list()

            if res is not None:
                while True:
                    # handle items

                    res = res.Next()
                    if res is None:
                        break
  - target: $["paths"]["/v1/repositories/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: get
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.repositories.retrieve(id="<value>")

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/subscriptions/"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: list
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.subscriptions.list()

            if res is not None:
                while True:
                    # handle items

                    res = res.Next()
                    if res is None:
                        break
  - target: $["paths"]["/v1/articles/{id}"]["delete"]
    update:
      x-codeSamples:
        - lang: python
          label: delete
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            s.articles.delete(id="<value>")

            # Use the SDK ...
  - target: $["paths"]["/v1/benefits/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: get
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.benefits.retrieve(id="<value>")

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/products/{id}/benefits"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: update_benefits
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.products.update_benefits(id="<value>", product_benefits_update={
                "benefits": [
                    "<value>",
                ],
            })

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/users/benefits/"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: list
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.users.benefits.list()

            if res is not None:
                while True:
                    # handle items

                    res = res.Next()
                    if res is None:
                        break
  - target: $["paths"]["/v1/users/orders/"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: list
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.users.orders.list()

            if res is not None:
                while True:
                    # handle items

                    res = res.Next()
                    if res is None:
                        break
  - target: $["paths"]["/v1/users/orders/{id}/invoice"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: invoice
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.users.orders.invoice(id="<value>")

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/users/subscriptions/"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: list
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.users.subscriptions.list()

            if res is not None:
                while True:
                    # handle items

                    res = res.Next()
                    if res is None:
                        break
  - target: $["paths"]["/v1/users/subscriptions/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: get
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.users.subscriptions.retrieve(id="<value>")

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/users/advertisements/{id}"]["delete"]
    update:
      x-codeSamples:
        - lang: python
          label: delete
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.users.advertisements.delete(id="<value>")

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["delete"]
    update:
      x-codeSamples:
        - lang: python
          label: delete_client
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.oauth2.clients.delete(client_id="<value>")

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/benefits/"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: list
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.benefits.list()

            if res is not None:
                while True:
                    # handle items

                    res = res.Next()
                    if res is None:
                        break
  - target: $["paths"]["/v1/users/advertisements/{id}/enable"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: enable
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            s.users.advertisements.enable(id="<value>", user_advertisement_campaign_enable={
                "benefit_id": "<value>",
            })

            # Use the SDK ...
  - target: $["paths"]["/v1/external_organizations/"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: list
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.external_organizations.list()

            if res is not None:
                while True:
                    # handle items

                    res = res.Next()
                    if res is None:
                        break
  - target: $["paths"]["/v1/repositories/{id}"]["patch"]
    update:
      x-codeSamples:
        - lang: python
          label: update
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.repositories.update(id="<value>", repository_update={})

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/advertisements/"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: list
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.advertisements.list(benefit_id="<value>")

            if res is not None:
                while True:
                    # handle items

                    res = res.Next()
                    if res is None:
                        break
  - target: $["paths"]["/v1/oauth2/userinfo"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: userinfo
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.oauth2.userinfo()

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/files/"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: list
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.files.list()

            if res is not None:
                while True:
                    # handle items

                    res = res.Next()
                    if res is None:
                        break
  - target: $["paths"]["/v1/metrics/limits"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: limits
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.metrics.limits()

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/users/orders/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: get
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.users.orders.retrieve(id="<value>")

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/articles/{id}/send"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: send
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.articles.send(id="<value>")

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/users/advertisements/"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: create
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.users.advertisements.create(request={
                "image_url": "http://limp-pastry.org",
                "text": "<value>",
                "link_url": "http://flashy-cartload.net",
            })

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/users/downloadables/{token}"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: get
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.users.downloadables.retrieve(token="<value>")

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/oauth2/register"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: create_client
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.oauth2.clients.create(request={
                "redirect_uris": [
                    "http://limp-pastry.org",
                ],
                "client_name": "<value>",
            })

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/users/benefits/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: get
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.users.benefits.retrieve(id="<value>")

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/users/subscriptions/"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: create
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.users.subscriptions.create(request={
                "product_id": "<value>",
            })

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/subscriptions/import"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: import
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.subscriptions.import_subscriptions(request={
                "file": {
                    "file_name": "your_file_here",
                    "content": open("<file_path>", "rb"),
                },
                "organization_id": "<value>",
            })

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/oauth2/revoke"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: revoke_token
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.oauth2.revoke(request={
                "token": "<value>",
                "client_id": "<value>",
                "client_secret": "<value>",
            })

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/users/advertisements/"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: list
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.users.advertisements.list()

            if res is not None:
                while True:
                    # handle items

                    res = res.Next()
                    if res is None:
                        break
  - target: $["paths"]["/v1/users/downloadables/"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: list
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.users.downloadables.list()

            if res is not None:
                while True:
                    # handle items

                    res = res.Next()
                    if res is None:
                        break
  - target: $["paths"]["/v1/benefits/{id}/grants"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: grants
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.benefits.grants(id="<value>")

            if res is not None:
                while True:
                    # handle items

                    res = res.Next()
                    if res is None:
                        break
  - target: $["paths"]["/v1/products/"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: create
          source: |-
            import polar
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.products.create(request={
                "name": "<value>",
                "prices": [
                    {
                        "recurring_interval": polar.ProductPriceRecurringInterval.MONTH,
                        "price_amount": 638424,
                    },
                ],
            })

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/products/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: get
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.products.retrieve(id="<value>")

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/products/{id}"]["patch"]
    update:
      x-codeSamples:
        - lang: python
          label: update
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.products.update(id="<value>", product_update={})

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/users/subscriptions/{id}"]["delete"]
    update:
      x-codeSamples:
        - lang: python
          label: cancel
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.users.subscriptions.cancel(id="<value>")

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/articles/"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: create
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.articles.create(request={
                "title": "<value>",
            })

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/files/{id}"]["delete"]
    update:
      x-codeSamples:
        - lang: python
          label: delete
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            s.files.delete(id="<value>")

            # Use the SDK ...
  - target: $["paths"]["/v1/users/advertisements/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: get
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.users.advertisements.retrieve(id="<value>")

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/organizations/"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: list
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.organizations.list()

            if res is not None:
                while True:
                    # handle items

                    res = res.Next()
                    if res is None:
                        break
  - target: $["paths"]["/v1/articles/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: get
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.articles.retrieve(id="<value>")

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/articles/{id}/preview"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: preview
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.articles.preview(id="<value>", article_preview={
                "email": "Eileen56@yahoo.com",
            })

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/oauth2/"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: list
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.oauth2.clients.list()

            if res is not None:
                while True:
                    # handle items

                    res = res.Next()
                    if res is None:
                        break
  - target: $["paths"]["/v1/files/{id}"]["patch"]
    update:
      x-codeSamples:
        - lang: python
          label: update
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.files.update(id="<value>", file_patch={})

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/organizations/"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: create
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.organizations.create(request={
                "name": "<value>",
                "slug": "<value>",
            })

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/organizations/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: get
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.organizations.retrieve(id="<value>")

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/subscriptions/export"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: export
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.subscriptions.export()

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/benefits/"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: create
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.benefits.create(request={
                "description": "Multi-tiered motivating standardization",
                "properties": {
                    "guild_token": "<value>",
                    "role_id": "<value>",
                },
            })

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/users/advertisements/{id}"]["patch"]
    update:
      x-codeSamples:
        - lang: python
          label: update
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.users.advertisements.update(id="<value>", user_advertisement_campaign_update={})

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/oauth2/token"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: request_token
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.oauth2.token(request={
                "client_id": "<value>",
                "client_secret": "<value>",
                "code": "<value>",
                "redirect_uri": "http://multicolored-chivalry.name",
            })

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/products/"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: list
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.products.list()

            if res is not None:
                while True:
                    # handle items

                    res = res.Next()
                    if res is None:
                        break
  - target: $["paths"]["/v1/orders/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: get
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.orders.retrieve(id="<value>")

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/orders/{id}/invoice"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: invoice
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.orders.invoice(id="<value>")

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/files/"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: create
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.files.create(request={
                "name": "<value>",
                "mime_type": "<value>",
                "size": 489382,
                "upload": {
                    "parts": [
                        {
                            "number": 638424,
                            "chunk_start": 859213,
                            "chunk_end": 417458,
                        },
                    ],
                },
            })

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/subscriptions/"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: create
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.subscriptions.create(request={
                "email": "Jena.Nienow28@yahoo.com",
                "product_id": "<value>",
            })

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/oauth2/introspect"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: introspect_token
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.oauth2.introspect(request={
                "token": "<value>",
                "client_id": "<value>",
                "client_secret": "<value>",
            })

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/files/{id}/uploaded"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: uploaded
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.files.uploaded(id="<value>", file_upload_completed={
                "id": "<id>",
                "path": "/sys",
                "parts": [
                    {
                        "number": 241210,
                        "checksum_etag": "<value>",
                        "checksum_sha256_base64": "<value>",
                    },
                ],
            })

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/advertisements/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: get
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.advertisements.retrieve(id="<value>")

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/checkouts/"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: create
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.checkouts.create(request={
                "product_price_id": "<value>",
                "success_url": "http://limp-pastry.org",
            })

            if res is not None:
                # handle response
                pass
  - target: $["paths"]["/v1/checkouts/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: get
          source: |-
            from polar import Polar

            s = Polar(
                access_token="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.checkouts.retrieve(id="<value>")

            if res is not None:
                # handle response
                pass
