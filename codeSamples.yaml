overlay: 1.0.0
info:
  title: CodeSamples overlay for python target
  version: 0.0.0
actions:
  - target: $["paths"]["/v1/benefits/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/benefits/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.create(request={\n        \"type\": \"license_keys\",\n        \"description\": \"mature emergent at outside arrogantly gadzooks zealous equatorial notwithstanding\",\n        \"properties\": {},\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/benefits/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.benefits.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/benefits/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/benefits/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.update(id=\"<value>\", request_body={\n        \"type\": \"meter_credit\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/benefits/{id}/grants"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.grants(id=\"<value>\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/checkout-links/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/checkout-links/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.create(request={\n        \"payment_processor\": \"stripe\",\n        \"allow_discount_codes\": True,\n        \"require_billing_address\": False,\n        \"product_price_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkout-links/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.checkout_links.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/checkout-links/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkout-links/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.update(id=\"<value>\", checkout_link_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/checkouts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.create(request={\n        \"customer_billing_address\": {\n            \"country\": \"US\",\n        },\n        \"products\": [\n            \"<value 1>\",\n            \"<value 2>\",\n            \"<value 3>\",\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.checkouts.client_get(client_secret=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.checkouts.client_update(client_secret=\"<value>\", checkout_update_public={\n        \"customer_billing_address\": None,\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}/confirm"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.client_confirm(client_secret=\"<value>\", checkout_confirm_stripe={\n        \"customer_billing_address\": {\n            \"country\": \"US\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.update(id=\"<value>\", checkout_update={\n        \"customer_billing_address\": {\n            \"country\": \"US\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/custom-fields/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/custom-fields/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.create(request={\n        \"type\": \"select\",\n        \"slug\": \"<value>\",\n        \"name\": \"<value>\",\n        \"properties\": {\n            \"options\": [],\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/custom-fields/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.custom_fields.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/custom-fields/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/custom-fields/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.update(id=\"<value>\", custom_field_update={\n        \"type\": \"date\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customer_meters.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customer_meters.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.benefit_grants.list(security=polar_sdk.CustomerPortalBenefitGrantsListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.benefit_grants.get(security=polar_sdk.CustomerPortalBenefitGrantsGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.benefit_grants.update(security=polar_sdk.CustomerPortalBenefitGrantsUpdateSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\", customer_benefit_grant_update={\n        \"benefit_type\": \"license_keys\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.get(security=polar_sdk.CustomerPortalCustomersGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.update(security=polar_sdk.CustomerPortalCustomersUpdateSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), request={\n        \"billing_address\": {\n            \"country\": \"US\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.get_payment_methods(security=polar_sdk.CustomerPortalCustomersGetPaymentMethodsSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ))\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.add_payment_method(security=polar_sdk.CustomerPortalCustomersAddPaymentMethodSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), request={\n        \"confirmation_token_id\": \"<id>\",\n        \"set_default\": False,\n        \"return_url\": \"https://yearly-custom.net/\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    polar.customer_portal.customers.delete_payment_method(security=polar_sdk.CustomerPortalCustomersDeletePaymentMethodSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<id>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customer-portal/downloadables/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.downloadables.list(security=polar_sdk.CustomerPortalDownloadablesListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/downloadables/{token}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.downloadables.get(token=\"<value>\")\n\n    assert res is not None\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/license-keys/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.list(security=polar_sdk.CustomerPortalLicenseKeysListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/license-keys/activate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.activate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n        \"label\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/license-keys/deactivate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    polar.customer_portal.license_keys.deactivate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n        \"activation_id\": \"<value>\",\n    })\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customer-portal/license-keys/validate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.validate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.get(security=polar_sdk.CustomerPortalLicenseKeysGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customer_meters.list(security=polar_sdk.CustomerPortalCustomerMetersListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ))\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customer_meters.get(security=polar_sdk.CustomerPortalCustomerMetersGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.list(security=polar_sdk.CustomerPortalOrdersListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.get(security=polar_sdk.CustomerPortalOrdersGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.invoice(security=polar_sdk.CustomerPortalOrdersInvoiceSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/organizations/{slug}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customer_portal.organizations.get(slug=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.list(security=polar_sdk.CustomerPortalSubscriptionsListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.cancel(security=polar_sdk.CustomerPortalSubscriptionsCancelSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.get(security=polar_sdk.CustomerPortalSubscriptionsGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.update(security=polar_sdk.CustomerPortalSubscriptionsUpdateSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\", customer_subscription_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-sessions/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customer_sessions.create(request={\n        \"customer_external_id\": \"<id>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customers/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.create(request={\n        \"external_id\": \"usr_1337\",\n        \"email\": \"customer@example.com\",\n        \"name\": \"John Doe\",\n        \"billing_address\": {\n            \"country\": \"US\",\n        },\n        \"tax_id\": [\n            \"911144442\",\n            \"us_ein\",\n        ],\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.customers.delete_external(external_id=\"<id>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customers/external/{external_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get_external(external_id=\"<id>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.update_external(external_id=\"<id>\", customer_update_external_id={\n        \"email\": \"customer@example.com\",\n        \"name\": \"John Doe\",\n        \"billing_address\": None,\n        \"tax_id\": [\n            \"911144442\",\n            \"us_ein\",\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/external/{external_id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get_state_external(external_id=\"<id>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.customers.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customers/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.update(id=\"<value>\", customer_update={\n        \"email\": \"customer@example.com\",\n        \"name\": \"John Doe\",\n        \"billing_address\": {\n            \"country\": \"US\",\n        },\n        \"tax_id\": [\n            \"911144442\",\n            \"us_ein\",\n        ],\n        \"external_id\": \"usr_1337\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/{id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get_state(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/discounts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/discounts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.create(request={\n        \"duration\": polar_sdk.DiscountDuration.ONCE,\n        \"type\": polar_sdk.DiscountType.FIXED,\n        \"basis_points\": 449604,\n        \"name\": \"<value>\",\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/discounts/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.discounts.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/discounts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/discounts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.update(id=\"<value>\", discount_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/events/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/events/ingest"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.ingest(request={\n        \"events\": [],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/events/names"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.list_names(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/events/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/files/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/files/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.create(request={\n        \"name\": \"<value>\",\n        \"mime_type\": \"<value>\",\n        \"size\": 612128,\n        \"upload\": {\n            \"parts\": [],\n        },\n        \"service\": \"downloadable\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/files/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.files.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/files/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.update(id=\"<value>\", file_patch={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/files/{id}/uploaded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.uploaded(id=\"<value>\", file_upload_completed={\n        \"id\": \"<id>\",\n        \"path\": \"/boot\",\n        \"parts\": [\n            {\n                \"number\": 979613,\n                \"checksum_etag\": \"<value>\",\n                \"checksum_sha256_base64\": \"<value>\",\n            },\n            {\n                \"number\": 979613,\n                \"checksum_etag\": \"<value>\",\n                \"checksum_sha256_base64\": \"<value>\",\n            },\n            {\n                \"number\": 979613,\n                \"checksum_etag\": \"<value>\",\n                \"checksum_sha256_base64\": \"<value>\",\n            },\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/license-keys/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/license-keys/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.update(id=\"<value>\", license_key_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/license-keys/{id}/activations/{activation_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.get_activation(id=\"<value>\", activation_id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/meters/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.create(request={\n        \"name\": \"<value>\",\n        \"filter_\": {\n            \"conjunction\": polar_sdk.FilterConjunction.OR,\n            \"clauses\": [\n                {\n                    \"property\": \"<value>\",\n                    \"operator\": polar_sdk.FilterOperator.NE,\n                    \"value\": \"<value>\",\n                },\n            ],\n        },\n        \"aggregation\": {\n            \"func\": polar_sdk.Func.SUM,\n            \"property\": \"<value>\",\n        },\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.update(id=\"<value>\", meter_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/{id}/quantities"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.quantities(id=\"<value>\", start_timestamp=parse_datetime(\"2025-11-25T04:37:16.823Z\"), end_timestamp=parse_datetime(\"2025-11-26T17:06:00.727Z\"), interval=polar_sdk.TimeInterval.DAY)\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/metrics/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from datetime import date\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.metrics.get(start_date=date.fromisoformat(\"2025-03-14\"), end_date=date.fromisoformat(\"2025-03-18\"), interval=polar_sdk.TimeInterval.HOUR, organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/metrics/limits"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.metrics.limits()\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.clients.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/oauth2/authorize"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.authorize()\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/introspect"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.oauth2.introspect(request={\n        \"token\": \"<value>\",\n        \"client_id\": \"<id>\",\n        \"client_secret\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/register"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.clients.create(request={\n        \"redirect_uris\": [\n            \"https://impolite-hippodrome.com/\",\n            \"https://acidic-tomography.net/\",\n        ],\n        \"client_name\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.clients.delete(client_id=\"<id>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.clients.get(client_id=\"<id>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["put"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.clients.update(client_id=\"<id>\", o_auth2_client_configuration_update={\n        \"redirect_uris\": [\n            \"https://classic-cantaloupe.org\",\n            \"https://corrupt-status.biz/\",\n        ],\n        \"client_name\": \"<value>\",\n        \"client_id\": \"<id>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/revoke"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.oauth2.revoke(request={\n        \"token\": \"<value>\",\n        \"client_id\": \"<id>\",\n        \"client_secret\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/token"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.oauth2.token(request={\n        \"grant_type\": \"authorization_code\",\n        \"client_id\": \"<id>\",\n        \"client_secret\": \"<value>\",\n        \"code\": \"<value>\",\n        \"redirect_uri\": \"https://memorable-season.name\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/userinfo"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.userinfo()\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.orders.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.orders.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.orders.invoice(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/organizations/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/organizations/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.create(request={\n        \"name\": \"<value>\",\n        \"slug\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/organizations/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.get(id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/organizations/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.update(id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", organization_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/payments/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.payments.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/payments/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.payments.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/products/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.create(request={\n        \"name\": \"<value>\",\n        \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n        \"prices\": [],\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.update(id=\"<value>\", product_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/{id}/benefits"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.update_benefits(id=\"<value>\", product_benefits_update={\n        \"benefits\": [\n            \"<value 1>\",\n            \"<value 2>\",\n            \"<value 3>\",\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/refunds/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.refunds.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/refunds/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.refunds.create(request={\n        \"order_id\": \"<value>\",\n        \"reason\": polar_sdk.RefundReason.CUSTOMER_REQUEST,\n        \"amount\": 90,\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/subscriptions/export"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.export(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.revoke(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.update(id=\"<value>\", subscription_update={\n        \"product_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_created_post(request={\n        \"type\": \"benefit.created\",\n        \"data\": {\n            \"id\": \"<value>\",\n            \"created_at\": parse_datetime(\"2024-05-25T19:36:21.799Z\"),\n            \"modified_at\": parse_datetime(\"2023-12-03T18:35:26.911Z\"),\n            \"type\": \"meter_credit\",\n            \"description\": \"futon redraw forenenst pecan evince if\",\n            \"selectable\": False,\n            \"deletable\": False,\n            \"organization_id\": \"<value>\",\n            \"metadata\": {\n                \"key\": \"<value>\",\n                \"key1\": 9.17,\n                \"key2\": 469914,\n            },\n            \"properties\": {\n                \"units\": 479716,\n                \"rollover\": False,\n                \"meter_id\": \"<value>\",\n            },\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_updated_post(request={\n        \"type\": \"benefit.updated\",\n        \"data\": {\n            \"id\": \"<value>\",\n            \"created_at\": parse_datetime(\"2023-05-30T17:26:31.997Z\"),\n            \"modified_at\": parse_datetime(\"2024-07-30T05:38:56.086Z\"),\n            \"type\": \"downloadables\",\n            \"description\": \"metal preregister psst woot somber\",\n            \"selectable\": False,\n            \"deletable\": False,\n            \"organization_id\": \"<value>\",\n            \"metadata\": {\n                \"key\": 938.65,\n            },\n            \"properties\": {\n                \"archived\": {\n                    \"key\": True,\n                    \"key1\": True,\n                    \"key2\": True,\n                },\n                \"files\": [],\n            },\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_created_post(request=polar_sdk.WebhookBenefitGrantCreatedPayload(\n        data=polar_sdk.BenefitGrantWebhook(\n            created_at=parse_datetime(\"2025-07-29T09:12:26.895Z\"),\n            modified_at=parse_datetime(\"2025-07-26T11:51:14.320Z\"),\n            id=\"<value>\",\n            is_granted=False,\n            is_revoked=True,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer=polar_sdk.Customer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2024-05-22T17:07:22.158Z\"),\n                modified_at=parse_datetime(\"2025-05-12T01:27:02.379Z\"),\n                metadata={\n                    \"key\": 74631,\n                    \"key1\": 8472.54,\n                    \"key2\": \"<value>\",\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2024-02-04T07:22:26.555Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            properties=polar_sdk.BenefitGrantCustomProperties(),\n            benefit=polar_sdk.BenefitGitHubRepository(\n                id=\"<value>\",\n                created_at=parse_datetime(\"2023-06-12T14:51:22.188Z\"),\n                modified_at=parse_datetime(\"2023-06-04T11:09:21.440Z\"),\n                description=\"vibraphone however abseil yet conservative\",\n                selectable=False,\n                deletable=True,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": \"<value>\",\n                    \"key1\": 164738,\n                    \"key2\": 826637,\n                },\n                properties=polar_sdk.BenefitGitHubRepositoryProperties(\n                    repository_owner=\"polarsource\",\n                    repository_name=\"private_repo\",\n                    permission=polar_sdk.Permission.MAINTAIN,\n                ),\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.cycled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_cycled_post(request=polar_sdk.WebhookBenefitGrantCycledPayload(\n        data=polar_sdk.BenefitGrantWebhook(\n            created_at=parse_datetime(\"2023-11-21T13:26:50.948Z\"),\n            modified_at=None,\n            id=\"<value>\",\n            is_granted=True,\n            is_revoked=True,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer=polar_sdk.Customer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2025-02-09T07:31:14.605Z\"),\n                modified_at=parse_datetime(\"2024-01-29T22:31:09.229Z\"),\n                metadata={\n                    \"key\": True,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=None,\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2025-08-25T13:47:56.433Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            properties=polar_sdk.BenefitGrantCustomProperties(),\n            benefit=polar_sdk.BenefitDownloadables(\n                id=\"<value>\",\n                created_at=parse_datetime(\"2025-07-14T03:36:29.696Z\"),\n                modified_at=parse_datetime(\"2023-08-20T01:19:24.073Z\"),\n                description=\"witty noisily negative colligate hence geez phew pacemaker marten\",\n                selectable=True,\n                deletable=False,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": \"<value>\",\n                },\n                properties=polar_sdk.BenefitDownloadablesProperties(\n                    archived={\n                        \"key\": True,\n                    },\n                    files=[],\n                ),\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_revoked_post(request=polar_sdk.WebhookBenefitGrantRevokedPayload(\n        data=polar_sdk.BenefitGrantWebhook(\n            created_at=parse_datetime(\"2025-10-11T18:40:00.865Z\"),\n            modified_at=None,\n            id=\"<value>\",\n            is_granted=True,\n            is_revoked=True,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer=polar_sdk.Customer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2024-02-19T18:50:01.394Z\"),\n                modified_at=parse_datetime(\"2024-11-20T19:24:54.327Z\"),\n                metadata={\n                    \"key\": 571706,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=None,\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            properties=polar_sdk.BenefitGrantCustomProperties(),\n            benefit=polar_sdk.BenefitMeterCredit(\n                id=\"<value>\",\n                created_at=parse_datetime(\"2024-03-12T16:39:36.178Z\"),\n                modified_at=parse_datetime(\"2024-07-08T07:08:59.377Z\"),\n                description=\"grandiose royal surface before ouch silently authentic more override reassuringly\",\n                selectable=False,\n                deletable=True,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": \"<value>\",\n                    \"key1\": 6254.36,\n                    \"key2\": \"<value>\",\n                },\n                properties=polar_sdk.BenefitMeterCreditProperties(\n                    units=708154,\n                    rollover=True,\n                    meter_id=\"<value>\",\n                ),\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_updated_post(request=polar_sdk.WebhookBenefitGrantUpdatedPayload(\n        data=polar_sdk.BenefitGrantWebhook(\n            created_at=parse_datetime(\"2023-06-15T00:42:20.858Z\"),\n            modified_at=parse_datetime(\"2023-09-09T02:35:13.085Z\"),\n            id=\"<value>\",\n            is_granted=True,\n            is_revoked=True,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer=polar_sdk.Customer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2023-07-19T15:08:59.439Z\"),\n                modified_at=parse_datetime(\"2024-06-22T06:57:35.281Z\"),\n                metadata={\n                    \"key\": False,\n                    \"key1\": 322224,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2025-09-29T05:46:04.457Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            properties=polar_sdk.BenefitGrantCustomProperties(),\n            benefit=polar_sdk.BenefitDownloadables(\n                id=\"<value>\",\n                created_at=parse_datetime(\"2023-12-23T22:21:47.780Z\"),\n                modified_at=parse_datetime(\"2024-02-26T16:39:20.374Z\"),\n                description=\"cutlet flickering ecstatic materialise verbally appliance\",\n                selectable=True,\n                deletable=False,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": 2069.39,\n                    \"key1\": \"<value>\",\n                },\n                properties=polar_sdk.BenefitDownloadablesProperties(\n                    archived={\n\n                    },\n                    files=[\n                        \"<value 1>\",\n                    ],\n                ),\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["checkout.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcheckout_created_post(request=polar_sdk.WebhookCheckoutCreatedPayload(\n        data=polar_sdk.Checkout(\n            created_at=parse_datetime(\"2023-02-15T15:44:21.478Z\"),\n            modified_at=parse_datetime(\"2023-09-13T08:36:46.434Z\"),\n            id=\"<value>\",\n            payment_processor=polar_sdk.PaymentProcessor.STRIPE,\n            status=polar_sdk.CheckoutStatus.EXPIRED,\n            client_secret=\"<value>\",\n            url=\"https://whole-aftermath.net/\",\n            expires_at=parse_datetime(\"2023-12-28T10:30:56.042Z\"),\n            success_url=\"https://moral-premier.name/\",\n            embed_origin=\"<value>\",\n            amount=929514,\n            discount_amount=323773,\n            net_amount=115799,\n            tax_amount=97012,\n            total_amount=859980,\n            currency=\"Fiji Dollar\",\n            product_id=\"<value>\",\n            product_price_id=\"<value>\",\n            discount_id=None,\n            allow_discount_codes=True,\n            require_billing_address=True,\n            is_discount_applicable=True,\n            is_free_product_price=True,\n            is_payment_required=True,\n            is_payment_setup_required=True,\n            is_payment_form_required=True,\n            customer_id=\"<value>\",\n            is_business_customer=False,\n            customer_name=\"<value>\",\n            customer_email=None,\n            customer_ip_address=None,\n            customer_billing_name=\"<value>\",\n            customer_billing_address=polar_sdk.Address(\n                country=\"US\",\n            ),\n            customer_tax_id=\"<id>\",\n            payment_processor_metadata={\n                \"key\": \"<value>\",\n                \"key1\": \"<value>\",\n                \"key2\": \"<value>\",\n            },\n            metadata={\n                \"key\": False,\n                \"key1\": False,\n            },\n            customer_external_id=\"<id>\",\n            products=[\n                polar_sdk.CheckoutProduct(\n                    created_at=parse_datetime(\"2025-07-23T17:21:51.405Z\"),\n                    modified_at=parse_datetime(\"2024-01-17T03:32:08.030Z\"),\n                    id=\"<value>\",\n                    name=\"<value>\",\n                    description=\"funny abscond fairly except slight\",\n                    recurring_interval=None,\n                    is_recurring=True,\n                    is_archived=True,\n                    organization_id=\"<value>\",\n                    prices=[\n                        polar_sdk.LegacyRecurringProductPriceFree(\n                            created_at=parse_datetime(\"2023-09-13T08:36:46.434Z\"),\n                            modified_at=parse_datetime(\"2023-09-14T02:01:27.394Z\"),\n                            id=\"<value>\",\n                            is_archived=False,\n                            product_id=\"<value>\",\n                            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        ),\n                    ],\n                    benefits=[],\n                    medias=[\n                        polar_sdk.ProductMediaFileRead(\n                            id=\"<value>\",\n                            organization_id=\"<value>\",\n                            name=\"<value>\",\n                            path=\"/var/log\",\n                            mime_type=\"<value>\",\n                            size=982910,\n                            storage_version=\"<value>\",\n                            checksum_etag=\"<value>\",\n                            checksum_sha256_base64=\"<value>\",\n                            checksum_sha256_hex=\"<value>\",\n                            last_modified_at=parse_datetime(\"2024-09-13T03:57:17.676Z\"),\n                            version=\"<value>\",\n                            is_uploaded=False,\n                            created_at=parse_datetime(\"2023-03-23T06:47:50.944Z\"),\n                            size_readable=\"<value>\",\n                            public_url=\"https://yummy-ocelot.biz/\",\n                        ),\n                        polar_sdk.ProductMediaFileRead(\n                            id=\"<value>\",\n                            organization_id=\"<value>\",\n                            name=\"<value>\",\n                            path=\"/var/log\",\n                            mime_type=\"<value>\",\n                            size=982910,\n                            storage_version=\"<value>\",\n                            checksum_etag=\"<value>\",\n                            checksum_sha256_base64=\"<value>\",\n                            checksum_sha256_hex=\"<value>\",\n                            last_modified_at=parse_datetime(\"2024-09-13T03:57:17.676Z\"),\n                            version=\"<value>\",\n                            is_uploaded=False,\n                            created_at=parse_datetime(\"2023-03-23T06:47:50.944Z\"),\n                            size_readable=\"<value>\",\n                            public_url=\"https://yummy-ocelot.biz/\",\n                        ),\n                        polar_sdk.ProductMediaFileRead(\n                            id=\"<value>\",\n                            organization_id=\"<value>\",\n                            name=\"<value>\",\n                            path=\"/var/log\",\n                            mime_type=\"<value>\",\n                            size=982910,\n                            storage_version=\"<value>\",\n                            checksum_etag=\"<value>\",\n                            checksum_sha256_base64=\"<value>\",\n                            checksum_sha256_hex=\"<value>\",\n                            last_modified_at=parse_datetime(\"2024-09-13T03:57:17.676Z\"),\n                            version=\"<value>\",\n                            is_uploaded=False,\n                            created_at=parse_datetime(\"2023-03-23T06:47:50.944Z\"),\n                            size_readable=\"<value>\",\n                            public_url=\"https://yummy-ocelot.biz/\",\n                        ),\n                    ],\n                ),\n            ],\n            product=polar_sdk.CheckoutProduct(\n                created_at=parse_datetime(\"2023-03-01T03:35:30.257Z\"),\n                modified_at=parse_datetime(\"2024-12-19T15:40:11.887Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"until joyful how\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=True,\n                is_archived=False,\n                organization_id=\"<value>\",\n                prices=[\n                    polar_sdk.ProductPriceCustom(\n                        created_at=parse_datetime(\"2025-03-15T14:26:53.109Z\"),\n                        modified_at=parse_datetime(\"2023-12-28T10:30:56.042Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        type=polar_sdk.ProductPriceType.ONE_TIME,\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                        price_currency=\"<value>\",\n                        minimum_amount=700309,\n                        maximum_amount=631188,\n                        preset_amount=968968,\n                    ),\n                    polar_sdk.ProductPriceFixed(\n                        created_at=parse_datetime(\"2023-05-07T21:58:39.365Z\"),\n                        modified_at=parse_datetime(\"2024-04-23T21:54:44.503Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        type=polar_sdk.ProductPriceType.ONE_TIME,\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                        price_currency=\"<value>\",\n                        price_amount=275553,\n                    ),\n                    polar_sdk.LegacyRecurringProductPriceCustom(\n                        created_at=parse_datetime(\"2023-08-08T15:45:51.732Z\"),\n                        modified_at=parse_datetime(\"2024-01-18T11:16:03.208Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        price_currency=\"<value>\",\n                        minimum_amount=49018,\n                        maximum_amount=322400,\n                        preset_amount=119260,\n                    ),\n                ],\n                benefits=[\n                    polar_sdk.BenefitPublic(\n                        id=\"<value>\",\n                        created_at=parse_datetime(\"2023-11-22T11:07:53.319Z\"),\n                        modified_at=parse_datetime(\"2025-09-17T18:38:51.288Z\"),\n                        type=polar_sdk.BenefitType.DISCORD,\n                        description=\"brr now psst\",\n                        selectable=True,\n                        deletable=True,\n                        organization_id=\"<value>\",\n                    ),\n                    polar_sdk.BenefitPublic(\n                        id=\"<value>\",\n                        created_at=parse_datetime(\"2023-11-22T11:07:53.319Z\"),\n                        modified_at=parse_datetime(\"2025-09-17T18:38:51.288Z\"),\n                        type=polar_sdk.BenefitType.DISCORD,\n                        description=\"brr now psst\",\n                        selectable=True,\n                        deletable=True,\n                        organization_id=\"<value>\",\n                    ),\n                ],\n                medias=[],\n            ),\n            product_price=polar_sdk.LegacyRecurringProductPriceFree(\n                created_at=parse_datetime(\"2024-04-06T18:48:21.449Z\"),\n                modified_at=parse_datetime(\"2023-02-22T08:13:16.795Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            ),\n            discount=polar_sdk.CheckoutDiscountPercentageRepeatDuration(\n                duration=polar_sdk.DiscountDuration.REPEATING,\n                duration_in_months=470604,\n                type=polar_sdk.DiscountType.FIXED,\n                basis_points=567071,\n                id=\"<value>\",\n                name=\"<value>\",\n                code=\"<value>\",\n            ),\n            subscription_id=\"<value>\",\n            attached_custom_fields=[\n                polar_sdk.AttachedCustomField(\n                    custom_field_id=\"<value>\",\n                    custom_field=polar_sdk.CustomFieldNumber(\n                        created_at=parse_datetime(\"2024-01-27T12:44:05.844Z\"),\n                        modified_at=parse_datetime(\"2023-11-12T13:10:44.040Z\"),\n                        id=\"<value>\",\n                        metadata={\n                            \"key\": 833527,\n                            \"key1\": False,\n                        },\n                        slug=\"<value>\",\n                        name=\"<value>\",\n                        organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        properties=polar_sdk.CustomFieldNumberProperties(),\n                    ),\n                    order=786803,\n                    required=False,\n                ),\n                polar_sdk.AttachedCustomField(\n                    custom_field_id=\"<value>\",\n                    custom_field=polar_sdk.CustomFieldNumber(\n                        created_at=parse_datetime(\"2024-01-27T12:44:05.844Z\"),\n                        modified_at=parse_datetime(\"2023-11-12T13:10:44.040Z\"),\n                        id=\"<value>\",\n                        metadata={\n                            \"key\": 833527,\n                            \"key1\": False,\n                        },\n                        slug=\"<value>\",\n                        name=\"<value>\",\n                        organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        properties=polar_sdk.CustomFieldNumberProperties(),\n                    ),\n                    order=786803,\n                    required=False,\n                ),\n            ],\n            customer_metadata={\n\n            },\n            customer_billing_address_fields=polar_sdk.CheckoutCustomerBillingAddressFields(\n                country=True,\n                state=False,\n                city=False,\n                postal_code=True,\n                line1=True,\n                line2=False,\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["checkout.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcheckout_updated_post(request=polar_sdk.WebhookCheckoutUpdatedPayload(\n        data=polar_sdk.Checkout(\n            created_at=parse_datetime(\"2023-03-19T05:40:46.816Z\"),\n            modified_at=parse_datetime(\"2025-01-17T21:45:54.449Z\"),\n            id=\"<value>\",\n            payment_processor=polar_sdk.PaymentProcessor.STRIPE,\n            status=polar_sdk.CheckoutStatus.SUCCEEDED,\n            client_secret=\"<value>\",\n            url=\"https://wasteful-kinase.net/\",\n            expires_at=parse_datetime(\"2024-07-13T07:40:45.762Z\"),\n            success_url=\"https://unwieldy-lift.name\",\n            embed_origin=\"<value>\",\n            amount=328864,\n            discount_amount=67168,\n            net_amount=710560,\n            tax_amount=164230,\n            total_amount=754328,\n            currency=\"New Taiwan Dollar\",\n            product_id=\"<value>\",\n            product_price_id=\"<value>\",\n            discount_id=\"<value>\",\n            allow_discount_codes=True,\n            require_billing_address=True,\n            is_discount_applicable=True,\n            is_free_product_price=True,\n            is_payment_required=True,\n            is_payment_setup_required=False,\n            is_payment_form_required=True,\n            customer_id=None,\n            is_business_customer=False,\n            customer_name=\"<value>\",\n            customer_email=\"<value>\",\n            customer_ip_address=\"<value>\",\n            customer_billing_name=\"<value>\",\n            customer_billing_address=polar_sdk.Address(\n                country=\"US\",\n            ),\n            customer_tax_id=\"<id>\",\n            payment_processor_metadata={\n\n            },\n            metadata={\n                \"key\": 8729.81,\n                \"key1\": \"<value>\",\n                \"key2\": 302746,\n            },\n            customer_external_id=\"<id>\",\n            products=[\n                polar_sdk.CheckoutProduct(\n                    created_at=parse_datetime(\"2024-02-06T13:10:07.718Z\"),\n                    modified_at=parse_datetime(\"2025-05-28T09:18:17.409Z\"),\n                    id=\"<value>\",\n                    name=\"<value>\",\n                    description=\"gee unlike aboard entice which break\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    is_recurring=False,\n                    is_archived=False,\n                    organization_id=\"<value>\",\n                    prices=[\n                        polar_sdk.LegacyRecurringProductPriceFixed(\n                            created_at=parse_datetime(\"2025-01-17T21:45:54.449Z\"),\n                            modified_at=parse_datetime(\"2024-11-07T08:23:01.152Z\"),\n                            id=\"<value>\",\n                            is_archived=False,\n                            product_id=\"<value>\",\n                            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                            price_currency=\"<value>\",\n                            price_amount=940459,\n                        ),\n                        polar_sdk.LegacyRecurringProductPriceFree(\n                            created_at=parse_datetime(\"2024-07-13T07:40:45.762Z\"),\n                            modified_at=parse_datetime(\"2025-03-26T06:13:51.386Z\"),\n                            id=\"<value>\",\n                            is_archived=False,\n                            product_id=\"<value>\",\n                            recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                        ),\n                    ],\n                    benefits=[\n                        polar_sdk.BenefitPublic(\n                            id=\"<value>\",\n                            created_at=parse_datetime(\"2025-07-05T15:21:14.498Z\"),\n                            modified_at=parse_datetime(\"2023-11-21T02:59:50.838Z\"),\n                            type=polar_sdk.BenefitType.DOWNLOADABLES,\n                            description=\"highlight sandy overspend scratchy yet by\",\n                            selectable=True,\n                            deletable=False,\n                            organization_id=\"<value>\",\n                        ),\n                    ],\n                    medias=[],\n                ),\n                polar_sdk.CheckoutProduct(\n                    created_at=parse_datetime(\"2024-02-06T13:10:07.718Z\"),\n                    modified_at=parse_datetime(\"2025-05-28T09:18:17.409Z\"),\n                    id=\"<value>\",\n                    name=\"<value>\",\n                    description=\"gee unlike aboard entice which break\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    is_recurring=False,\n                    is_archived=False,\n                    organization_id=\"<value>\",\n                    prices=[\n                        polar_sdk.ProductPriceFree(\n                            created_at=parse_datetime(\"2024-05-01T03:58:27.962Z\"),\n                            modified_at=parse_datetime(\"2023-12-27T10:27:01.430Z\"),\n                            id=\"<value>\",\n                            is_archived=False,\n                            product_id=\"<value>\",\n                            type=polar_sdk.ProductPriceType.ONE_TIME,\n                            recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                        ),\n                        polar_sdk.ProductPriceCustom(\n                            created_at=parse_datetime(\"2025-04-06T17:49:44.545Z\"),\n                            modified_at=parse_datetime(\"2025-08-08T18:57:45.007Z\"),\n                            id=\"<value>\",\n                            is_archived=False,\n                            product_id=\"<value>\",\n                            type=polar_sdk.ProductPriceType.ONE_TIME,\n                            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                            price_currency=\"<value>\",\n                            minimum_amount=140837,\n                            maximum_amount=373760,\n                            preset_amount=41301,\n                        ),\n                    ],\n                    benefits=[\n                        polar_sdk.BenefitPublic(\n                            id=\"<value>\",\n                            created_at=parse_datetime(\"2025-07-05T15:21:14.498Z\"),\n                            modified_at=parse_datetime(\"2023-11-21T02:59:50.838Z\"),\n                            type=polar_sdk.BenefitType.DOWNLOADABLES,\n                            description=\"highlight sandy overspend scratchy yet by\",\n                            selectable=True,\n                            deletable=False,\n                            organization_id=\"<value>\",\n                        ),\n                    ],\n                    medias=[],\n                ),\n                polar_sdk.CheckoutProduct(\n                    created_at=parse_datetime(\"2024-02-06T13:10:07.718Z\"),\n                    modified_at=parse_datetime(\"2025-05-28T09:18:17.409Z\"),\n                    id=\"<value>\",\n                    name=\"<value>\",\n                    description=\"gee unlike aboard entice which break\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    is_recurring=False,\n                    is_archived=False,\n                    organization_id=\"<value>\",\n                    prices=[\n                        polar_sdk.LegacyRecurringProductPriceFree(\n                            created_at=parse_datetime(\"2024-04-12T18:30:19.906Z\"),\n                            modified_at=parse_datetime(\"2023-03-19T14:32:39.947Z\"),\n                            id=\"<value>\",\n                            is_archived=False,\n                            product_id=\"<value>\",\n                            recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                        ),\n                        polar_sdk.ProductPriceFree(\n                            created_at=parse_datetime(\"2025-01-10T10:00:41.343Z\"),\n                            modified_at=parse_datetime(\"2025-04-08T09:51:58.249Z\"),\n                            id=\"<value>\",\n                            is_archived=False,\n                            product_id=\"<value>\",\n                            type=polar_sdk.ProductPriceType.ONE_TIME,\n                            recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                        ),\n                    ],\n                    benefits=[\n                        polar_sdk.BenefitPublic(\n                            id=\"<value>\",\n                            created_at=parse_datetime(\"2025-07-05T15:21:14.498Z\"),\n                            modified_at=parse_datetime(\"2023-11-21T02:59:50.838Z\"),\n                            type=polar_sdk.BenefitType.DOWNLOADABLES,\n                            description=\"highlight sandy overspend scratchy yet by\",\n                            selectable=True,\n                            deletable=False,\n                            organization_id=\"<value>\",\n                        ),\n                    ],\n                    medias=[],\n                ),\n            ],\n            product=polar_sdk.CheckoutProduct(\n                created_at=parse_datetime(\"2024-04-04T09:43:29.328Z\"),\n                modified_at=parse_datetime(\"2024-01-03T07:24:30.583Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"patroller fax sadly sick bitterly indeed grandson bravely loyally wholly\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=True,\n                is_archived=True,\n                organization_id=\"<value>\",\n                prices=[\n                    polar_sdk.LegacyRecurringProductPriceFree(\n                        created_at=parse_datetime(\"2025-01-29T09:14:14.399Z\"),\n                        modified_at=parse_datetime(\"2025-08-14T18:53:15.322Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    ),\n                    polar_sdk.LegacyRecurringProductPriceCustom(\n                        created_at=parse_datetime(\"2025-06-29T05:21:38.584Z\"),\n                        modified_at=parse_datetime(\"2025-10-14T04:57:44.285Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        price_currency=\"<value>\",\n                        minimum_amount=795829,\n                        maximum_amount=801449,\n                        preset_amount=215929,\n                    ),\n                    polar_sdk.LegacyRecurringProductPriceFree(\n                        created_at=parse_datetime(\"2025-10-23T11:11:52.082Z\"),\n                        modified_at=parse_datetime(\"2025-06-04T15:43:18.802Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    ),\n                ],\n                benefits=[\n                    polar_sdk.BenefitPublic(\n                        id=\"<value>\",\n                        created_at=parse_datetime(\"2025-07-05T15:21:14.498Z\"),\n                        modified_at=parse_datetime(\"2023-11-21T02:59:50.838Z\"),\n                        type=polar_sdk.BenefitType.DOWNLOADABLES,\n                        description=\"highlight sandy overspend scratchy yet by\",\n                        selectable=True,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                    ),\n                ],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/opt\",\n                        mime_type=\"<value>\",\n                        size=349206,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=parse_datetime(\"2023-11-20T22:00:21.061Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=parse_datetime(\"2024-10-01T19:20:04.513Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://noted-availability.info\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/opt\",\n                        mime_type=\"<value>\",\n                        size=349206,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=parse_datetime(\"2023-11-20T22:00:21.061Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=parse_datetime(\"2024-10-01T19:20:04.513Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://noted-availability.info\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/opt\",\n                        mime_type=\"<value>\",\n                        size=349206,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=parse_datetime(\"2023-11-20T22:00:21.061Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=parse_datetime(\"2024-10-01T19:20:04.513Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://noted-availability.info\",\n                    ),\n                ],\n            ),\n            product_price=polar_sdk.LegacyRecurringProductPriceCustom(\n                created_at=parse_datetime(\"2024-11-13T15:44:29.425Z\"),\n                modified_at=parse_datetime(\"2024-08-21T16:24:51.218Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                price_currency=\"<value>\",\n                minimum_amount=971558,\n                maximum_amount=879171,\n                preset_amount=591735,\n            ),\n            discount=polar_sdk.CheckoutDiscountPercentageRepeatDuration(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                duration_in_months=187379,\n                type=polar_sdk.DiscountType.FIXED,\n                basis_points=373595,\n                id=\"<value>\",\n                name=\"<value>\",\n                code=\"<value>\",\n            ),\n            subscription_id=\"<value>\",\n            attached_custom_fields=[\n                polar_sdk.AttachedCustomField(\n                    custom_field_id=\"<value>\",\n                    custom_field=polar_sdk.CustomFieldDate(\n                        created_at=parse_datetime(\"2024-09-18T09:12:02.157Z\"),\n                        modified_at=parse_datetime(\"2023-07-11T01:18:07.226Z\"),\n                        id=\"<value>\",\n                        metadata={\n                            \"key\": \"<value>\",\n                        },\n                        slug=\"<value>\",\n                        name=\"<value>\",\n                        organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        properties=polar_sdk.CustomFieldDateProperties(),\n                    ),\n                    order=704552,\n                    required=True,\n                ),\n                polar_sdk.AttachedCustomField(\n                    custom_field_id=\"<value>\",\n                    custom_field=polar_sdk.CustomFieldDate(\n                        created_at=parse_datetime(\"2024-09-18T09:12:02.157Z\"),\n                        modified_at=parse_datetime(\"2023-07-11T01:18:07.226Z\"),\n                        id=\"<value>\",\n                        metadata={\n                            \"key\": \"<value>\",\n                        },\n                        slug=\"<value>\",\n                        name=\"<value>\",\n                        organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        properties=polar_sdk.CustomFieldDateProperties(),\n                    ),\n                    order=704552,\n                    required=True,\n                ),\n            ],\n            customer_metadata={\n                \"key\": 384374,\n                \"key1\": 126671,\n                \"key2\": 568803,\n            },\n            customer_billing_address_fields=polar_sdk.CheckoutCustomerBillingAddressFields(\n                country=True,\n                state=False,\n                city=False,\n                postal_code=False,\n                line1=False,\n                line2=False,\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["customer.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcustomer_created_post(request={\n        \"type\": \"customer.created\",\n        \"data\": {\n            \"id\": \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n            \"created_at\": parse_datetime(\"2025-10-24T17:37:29.711Z\"),\n            \"modified_at\": parse_datetime(\"2025-07-16T19:46:09.413Z\"),\n            \"metadata\": {\n                \"key\": \"<value>\",\n                \"key1\": 9709.6,\n            },\n            \"external_id\": \"usr_1337\",\n            \"email\": \"customer@example.com\",\n            \"email_verified\": True,\n            \"name\": \"John Doe\",\n            \"billing_address\": None,\n            \"tax_id\": [\n                \"911144442\",\n                \"us_ein\",\n            ],\n            \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"deleted_at\": parse_datetime(\"2023-10-26T06:10:46.111Z\"),\n            \"avatar_url\": \"https://www.gravatar.com/avatar/xxx?d=blank\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["customer.deleted"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcustomer_deleted_post(request={\n        \"type\": \"customer.deleted\",\n        \"data\": {\n            \"id\": \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n            \"created_at\": parse_datetime(\"2023-07-12T21:40:34.752Z\"),\n            \"modified_at\": parse_datetime(\"2025-02-26T09:36:28.870Z\"),\n            \"metadata\": {\n\n            },\n            \"external_id\": \"usr_1337\",\n            \"email\": \"customer@example.com\",\n            \"email_verified\": True,\n            \"name\": \"John Doe\",\n            \"billing_address\": {\n                \"country\": \"US\",\n            },\n            \"tax_id\": [\n                \"911144442\",\n                \"us_ein\",\n            ],\n            \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"deleted_at\": parse_datetime(\"2023-07-08T00:32:27.730Z\"),\n            \"avatar_url\": \"https://www.gravatar.com/avatar/xxx?d=blank\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["customer.state_changed"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcustomer_state_changed_post(request={\n        \"type\": \"customer.state_changed\",\n        \"data\": {\n            \"id\": \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n            \"created_at\": parse_datetime(\"2025-05-22T16:03:32.369Z\"),\n            \"modified_at\": parse_datetime(\"2023-04-17T22:11:17.879Z\"),\n            \"metadata\": {\n\n            },\n            \"external_id\": \"usr_1337\",\n            \"email\": \"customer@example.com\",\n            \"email_verified\": True,\n            \"name\": \"John Doe\",\n            \"billing_address\": {\n                \"country\": \"US\",\n            },\n            \"tax_id\": [\n                \"911144442\",\n                \"us_ein\",\n            ],\n            \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"deleted_at\": parse_datetime(\"2025-09-08T18:19:10.187Z\"),\n            \"active_subscriptions\": [\n                {\n                    \"id\": \"e5149aae-e521-42b9-b24c-abb3d71eea2e\",\n                    \"created_at\": parse_datetime(\"2025-06-22T09:12:55.079Z\"),\n                    \"modified_at\": parse_datetime(\"2025-03-01T22:24:58.561Z\"),\n                    \"metadata\": {\n                        \"key\": True,\n                    },\n                    \"status\": \"active\",\n                    \"amount\": 1000,\n                    \"currency\": \"usd\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    \"current_period_start\": parse_datetime(\"2025-02-03T13:37:00Z\"),\n                    \"current_period_end\": parse_datetime(\"2025-03-03T13:37:00Z\"),\n                    \"cancel_at_period_end\": False,\n                    \"canceled_at\": None,\n                    \"started_at\": parse_datetime(\"2025-01-03T13:37:00Z\"),\n                    \"ends_at\": None,\n                    \"product_id\": \"d8dd2de1-21b7-4a41-8bc3-ce909c0cfe23\",\n                    \"discount_id\": None,\n                    \"meters\": [],\n                },\n            ],\n            \"granted_benefits\": [],\n            \"active_meters\": [\n                {\n                    \"created_at\": parse_datetime(\"2023-10-04T09:01:19.436Z\"),\n                    \"modified_at\": parse_datetime(\"2025-07-31T21:26:56.213Z\"),\n                    \"meter_id\": \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    \"consumed_units\": 25,\n                    \"credited_units\": 100,\n                    \"balance\": 75,\n                },\n                {\n                    \"created_at\": parse_datetime(\"2023-10-04T09:01:19.436Z\"),\n                    \"modified_at\": parse_datetime(\"2025-07-31T21:26:56.213Z\"),\n                    \"meter_id\": \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    \"consumed_units\": 25,\n                    \"credited_units\": 100,\n                    \"balance\": 75,\n                },\n            ],\n            \"avatar_url\": \"https://www.gravatar.com/avatar/xxx?d=blank\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["customer.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcustomer_updated_post(request={\n        \"type\": \"customer.updated\",\n        \"data\": {\n            \"id\": \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n            \"created_at\": parse_datetime(\"2023-07-09T20:22:33.716Z\"),\n            \"modified_at\": parse_datetime(\"2024-10-16T21:39:43.150Z\"),\n            \"metadata\": {\n\n            },\n            \"external_id\": \"usr_1337\",\n            \"email\": \"customer@example.com\",\n            \"email_verified\": True,\n            \"name\": \"John Doe\",\n            \"billing_address\": {\n                \"country\": \"US\",\n            },\n            \"tax_id\": [\n                \"911144442\",\n                \"us_ein\",\n            ],\n            \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"deleted_at\": parse_datetime(\"2025-12-14T00:37:03.564Z\"),\n            \"avatar_url\": \"https://www.gravatar.com/avatar/xxx?d=blank\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_created_post(request=polar_sdk.WebhookOrderCreatedPayload(\n        data=polar_sdk.Order(\n            id=\"<value>\",\n            created_at=parse_datetime(\"2024-08-21T06:55:49.348Z\"),\n            modified_at=None,\n            status=polar_sdk.OrderStatus.REFUNDED,\n            paid=True,\n            subtotal_amount=952546,\n            discount_amount=47294,\n            net_amount=220865,\n            amount=835005,\n            tax_amount=913636,\n            total_amount=727987,\n            refunded_amount=597376,\n            refunded_tax_amount=864844,\n            currency=\"Kip\",\n            billing_reason=polar_sdk.OrderBillingReason.SUBSCRIPTION_CYCLE,\n            billing_address=polar_sdk.Address(\n                country=\"US\",\n            ),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            subscription_id=\"<value>\",\n            checkout_id=\"<value>\",\n            metadata={\n                \"key\": True,\n                \"key1\": 2184.01,\n                \"key2\": \"<value>\",\n            },\n            customer=polar_sdk.OrderCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2025-11-07T09:52:21.455Z\"),\n                modified_at=parse_datetime(\"2025-06-03T19:46:15.179Z\"),\n                metadata={\n                    \"key\": 526331,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2023-10-25T07:11:48.501Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            product=polar_sdk.OrderProduct(\n                metadata={\n\n                },\n                created_at=parse_datetime(\"2025-02-09T20:19:15.400Z\"),\n                modified_at=parse_datetime(\"2023-03-30T07:05:37.419Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"against outbid to petty yeast off meanwhile colonialism\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=True,\n                is_archived=True,\n                organization_id=\"<value>\",\n            ),\n            discount=polar_sdk.DiscountFixedRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.REPEATING,\n                duration_in_months=425196,\n                type=polar_sdk.DiscountType.FIXED,\n                amount=778891,\n                currency=\"Armenian Dram\",\n                created_at=parse_datetime(\"2023-03-20T16:46:25.677Z\"),\n                modified_at=parse_datetime(\"2023-03-06T18:58:41.541Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": 298954,\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2023-04-08T15:39:19.572Z\"),\n                ends_at=parse_datetime(\"2024-01-04T15:31:18.185Z\"),\n                max_redemptions=313467,\n                redemptions_count=237254,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            subscription=None,\n            items=[\n                polar_sdk.OrderItemSchema(\n                    created_at=parse_datetime(\"2023-10-09T05:35:46.860Z\"),\n                    modified_at=parse_datetime(\"2025-11-19T12:55:15.055Z\"),\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=921740,\n                    tax_amount=964357,\n                    proration=True,\n                    product_price_id=\"<value>\",\n                ),\n                polar_sdk.OrderItemSchema(\n                    created_at=parse_datetime(\"2023-10-09T05:35:46.860Z\"),\n                    modified_at=parse_datetime(\"2025-11-19T12:55:15.055Z\"),\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=921740,\n                    tax_amount=964357,\n                    proration=True,\n                    product_price_id=\"<value>\",\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.paid"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_paid_post(request=polar_sdk.WebhookOrderPaidPayload(\n        data=polar_sdk.Order(\n            id=\"<value>\",\n            created_at=parse_datetime(\"2025-12-05T07:44:21.172Z\"),\n            modified_at=parse_datetime(\"2024-12-11T22:14:44.762Z\"),\n            status=polar_sdk.OrderStatus.REFUNDED,\n            paid=True,\n            subtotal_amount=806442,\n            discount_amount=990825,\n            net_amount=746396,\n            amount=341385,\n            tax_amount=486648,\n            total_amount=562504,\n            refunded_amount=314047,\n            refunded_tax_amount=570780,\n            currency=\"Norwegian Krone\",\n            billing_reason=polar_sdk.OrderBillingReason.SUBSCRIPTION_CREATE,\n            billing_address=polar_sdk.Address(\n                country=\"US\",\n            ),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            subscription_id=\"<value>\",\n            checkout_id=\"<value>\",\n            metadata={\n\n            },\n            customer=polar_sdk.OrderCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2023-08-30T09:47:22.437Z\"),\n                modified_at=parse_datetime(\"2025-04-20T14:41:24.727Z\"),\n                metadata={\n                    \"key\": 154136,\n                    \"key1\": False,\n                    \"key2\": True,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2024-06-08T00:11:47.056Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            product=polar_sdk.OrderProduct(\n                metadata={\n                    \"key\": \"<value>\",\n                    \"key1\": False,\n                    \"key2\": 1122.47,\n                },\n                created_at=parse_datetime(\"2024-03-19T01:07:15.346Z\"),\n                modified_at=parse_datetime(\"2025-03-22T13:41:39.854Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"instead unnaturally curly scared but definite knowledgeably\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                is_recurring=True,\n                is_archived=True,\n                organization_id=\"<value>\",\n            ),\n            discount=polar_sdk.DiscountPercentageRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.FOREVER,\n                duration_in_months=458129,\n                type=polar_sdk.DiscountType.FIXED,\n                basis_points=400985,\n                created_at=parse_datetime(\"2025-12-02T15:10:04.656Z\"),\n                modified_at=parse_datetime(\"2024-10-30T18:07:50.242Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": 4652.15,\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2023-11-24T17:59:56.836Z\"),\n                ends_at=parse_datetime(\"2025-08-12T18:11:29.547Z\"),\n                max_redemptions=727805,\n                redemptions_count=584469,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            subscription=polar_sdk.OrderSubscription(\n                metadata={\n\n                },\n                created_at=parse_datetime(\"2025-07-17T03:39:23.964Z\"),\n                modified_at=parse_datetime(\"2025-10-30T20:20:46.051Z\"),\n                id=\"<value>\",\n                amount=540428,\n                currency=\"Moroccan Dirham\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                status=polar_sdk.SubscriptionStatus.CANCELED,\n                current_period_start=parse_datetime(\"2023-02-24T15:15:22.018Z\"),\n                current_period_end=parse_datetime(\"2023-12-07T15:09:08.144Z\"),\n                cancel_at_period_end=False,\n                canceled_at=parse_datetime(\"2023-07-01T03:36:16.430Z\"),\n                started_at=parse_datetime(\"2024-09-21T14:56:16.106Z\"),\n                ends_at=parse_datetime(\"2023-01-21T03:35:38.158Z\"),\n                ended_at=parse_datetime(\"2023-12-02T06:46:04.196Z\"),\n                customer_id=\"<value>\",\n                product_id=\"<value>\",\n                discount_id=\"<value>\",\n                checkout_id=\"<value>\",\n                customer_cancellation_reason=polar_sdk.CustomerCancellationReason.OTHER,\n                customer_cancellation_comment=\"<value>\",\n            ),\n            items=[],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.refunded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_refunded_post(request=polar_sdk.WebhookOrderRefundedPayload(\n        data=polar_sdk.Order(\n            id=\"<value>\",\n            created_at=parse_datetime(\"2024-07-23T18:00:11.615Z\"),\n            modified_at=parse_datetime(\"2024-08-23T03:13:11.383Z\"),\n            status=polar_sdk.OrderStatus.REFUNDED,\n            paid=True,\n            subtotal_amount=678552,\n            discount_amount=294178,\n            net_amount=721778,\n            amount=913001,\n            tax_amount=518308,\n            total_amount=820663,\n            refunded_amount=472431,\n            refunded_tax_amount=879331,\n            currency=\"Hong Kong Dollar\",\n            billing_reason=polar_sdk.OrderBillingReason.SUBSCRIPTION_CREATE,\n            billing_address=polar_sdk.Address(\n                country=\"US\",\n            ),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            subscription_id=\"<value>\",\n            checkout_id=\"<value>\",\n            metadata={\n                \"key\": 4542.91,\n            },\n            customer=polar_sdk.OrderCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2024-08-11T17:50:11.031Z\"),\n                modified_at=parse_datetime(\"2023-02-24T05:25:29.794Z\"),\n                metadata={\n                    \"key\": 97027,\n                    \"key1\": 958634,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=None,\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2023-01-16T07:26:04.196Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            product=polar_sdk.OrderProduct(\n                metadata={\n                    \"key\": 4016.73,\n                    \"key1\": 9058.31,\n                    \"key2\": True,\n                },\n                created_at=parse_datetime(\"2024-10-26T18:25:25.517Z\"),\n                modified_at=parse_datetime(\"2023-07-26T10:28:20.791Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=None,\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                is_recurring=True,\n                is_archived=True,\n                organization_id=\"<value>\",\n            ),\n            discount=polar_sdk.DiscountFixedRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.FOREVER,\n                duration_in_months=333301,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                amount=985928,\n                currency=\"Tunisian Dinar\",\n                created_at=parse_datetime(\"2025-03-31T17:18:12.309Z\"),\n                modified_at=parse_datetime(\"2025-04-04T07:20:27.321Z\"),\n                id=\"<value>\",\n                metadata={\n\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=None,\n                ends_at=parse_datetime(\"2025-11-07T12:21:07.975Z\"),\n                max_redemptions=986922,\n                redemptions_count=691292,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            subscription=polar_sdk.OrderSubscription(\n                metadata={\n\n                },\n                created_at=parse_datetime(\"2023-03-16T14:38:58.849Z\"),\n                modified_at=parse_datetime(\"2024-08-12T02:18:50.288Z\"),\n                id=\"<value>\",\n                amount=443730,\n                currency=\"Pa'anga\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                status=polar_sdk.SubscriptionStatus.PAST_DUE,\n                current_period_start=parse_datetime(\"2025-08-22T13:19:25.286Z\"),\n                current_period_end=parse_datetime(\"2025-05-03T08:49:50.424Z\"),\n                cancel_at_period_end=True,\n                canceled_at=parse_datetime(\"2023-11-21T12:57:47.903Z\"),\n                started_at=parse_datetime(\"2023-09-21T04:07:05.991Z\"),\n                ends_at=parse_datetime(\"2023-10-30T23:29:28.584Z\"),\n                ended_at=parse_datetime(\"2025-05-20T18:28:46.249Z\"),\n                customer_id=\"<value>\",\n                product_id=\"<value>\",\n                discount_id=\"<value>\",\n                checkout_id=\"<value>\",\n                customer_cancellation_reason=polar_sdk.CustomerCancellationReason.LOW_QUALITY,\n                customer_cancellation_comment=\"<value>\",\n            ),\n            items=[\n                polar_sdk.OrderItemSchema(\n                    created_at=parse_datetime(\"2023-01-22T05:05:29.797Z\"),\n                    modified_at=parse_datetime(\"2025-11-07T21:20:59.535Z\"),\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=287841,\n                    tax_amount=922801,\n                    proration=False,\n                    product_price_id=\"<value>\",\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_updated_post(request=polar_sdk.WebhookOrderUpdatedPayload(\n        data=polar_sdk.Order(\n            id=\"<value>\",\n            created_at=parse_datetime(\"2023-10-25T00:08:50.290Z\"),\n            modified_at=parse_datetime(\"2024-01-08T20:00:47.692Z\"),\n            status=polar_sdk.OrderStatus.PARTIALLY_REFUNDED,\n            paid=True,\n            subtotal_amount=198772,\n            discount_amount=338283,\n            net_amount=321919,\n            amount=827864,\n            tax_amount=380359,\n            total_amount=596980,\n            refunded_amount=404069,\n            refunded_tax_amount=718668,\n            currency=\"Nuevo Sol\",\n            billing_reason=polar_sdk.OrderBillingReason.SUBSCRIPTION_CREATE,\n            billing_address=polar_sdk.Address(\n                country=\"US\",\n            ),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            subscription_id=\"<value>\",\n            checkout_id=\"<value>\",\n            metadata={\n                \"key\": False,\n                \"key1\": 187509,\n            },\n            customer=polar_sdk.OrderCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2024-12-03T05:16:11.415Z\"),\n                modified_at=parse_datetime(\"2023-03-11T05:58:05.184Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=None,\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2023-06-26T15:51:37.068Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            product=polar_sdk.OrderProduct(\n                metadata={\n\n                },\n                created_at=parse_datetime(\"2024-07-10T12:45:44.731Z\"),\n                modified_at=parse_datetime(\"2024-09-19T13:13:25.785Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"bossy direct reservation quaintly atop interestingly\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=True,\n                is_archived=False,\n                organization_id=\"<value>\",\n            ),\n            discount=polar_sdk.DiscountFixedRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                duration_in_months=227959,\n                type=polar_sdk.DiscountType.FIXED,\n                amount=785594,\n                currency=\"Barbados Dollar\",\n                created_at=parse_datetime(\"2025-08-02T14:17:04.679Z\"),\n                modified_at=parse_datetime(\"2023-04-10T21:27:35.876Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": \"<value>\",\n                    \"key1\": 330083,\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2023-09-01T14:56:03.459Z\"),\n                ends_at=parse_datetime(\"2024-10-01T02:03:16.161Z\"),\n                max_redemptions=723901,\n                redemptions_count=125128,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            subscription=polar_sdk.OrderSubscription(\n                metadata={\n\n                },\n                created_at=parse_datetime(\"2024-10-31T22:22:01.280Z\"),\n                modified_at=parse_datetime(\"2025-05-03T18:27:32.620Z\"),\n                id=\"<value>\",\n                amount=405025,\n                currency=\"Pa'anga\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                status=polar_sdk.SubscriptionStatus.UNPAID,\n                current_period_start=parse_datetime(\"2023-08-26T12:56:24.423Z\"),\n                current_period_end=parse_datetime(\"2024-02-06T09:06:51.703Z\"),\n                cancel_at_period_end=True,\n                canceled_at=parse_datetime(\"2024-03-28T15:10:13.508Z\"),\n                started_at=parse_datetime(\"2023-11-03T05:13:30.202Z\"),\n                ends_at=parse_datetime(\"2024-03-03T03:52:46.888Z\"),\n                ended_at=parse_datetime(\"2025-07-30T00:35:38.035Z\"),\n                customer_id=\"<value>\",\n                product_id=\"<value>\",\n                discount_id=\"<value>\",\n                checkout_id=None,\n                customer_cancellation_reason=polar_sdk.CustomerCancellationReason.SWITCHED_SERVICE,\n                customer_cancellation_comment=\"<value>\",\n            ),\n            items=[\n                polar_sdk.OrderItemSchema(\n                    created_at=parse_datetime(\"2025-01-03T16:01:28.999Z\"),\n                    modified_at=None,\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=516134,\n                    tax_amount=41202,\n                    proration=False,\n                    product_price_id=\"<value>\",\n                ),\n                polar_sdk.OrderItemSchema(\n                    created_at=parse_datetime(\"2025-01-03T16:01:28.999Z\"),\n                    modified_at=None,\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=516134,\n                    tax_amount=41202,\n                    proration=False,\n                    product_price_id=\"<value>\",\n                ),\n                polar_sdk.OrderItemSchema(\n                    created_at=parse_datetime(\"2025-01-03T16:01:28.999Z\"),\n                    modified_at=None,\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=516134,\n                    tax_amount=41202,\n                    proration=False,\n                    product_price_id=\"<value>\",\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["organization.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorganization_updated_post(request={\n        \"type\": \"organization.updated\",\n        \"data\": {\n            \"created_at\": parse_datetime(\"2025-08-19T15:02:44.139Z\"),\n            \"modified_at\": parse_datetime(\"2025-08-23T00:45:50.780Z\"),\n            \"id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"name\": \"<value>\",\n            \"slug\": \"<value>\",\n            \"avatar_url\": None,\n            \"email\": \"Lemuel44@gmail.com\",\n            \"website\": \"<value>\",\n            \"socials\": [\n                {\n                    \"platform\": polar_sdk.OrganizationSocialPlatforms.TIKTOK,\n                    \"url\": \"https://grizzled-patroller.info/\",\n                },\n                {\n                    \"platform\": polar_sdk.OrganizationSocialPlatforms.TIKTOK,\n                    \"url\": \"https://grizzled-patroller.info/\",\n                },\n            ],\n            \"details_submitted_at\": None,\n            \"feature_settings\": {},\n            \"subscription_settings\": {\n                \"allow_multiple_subscriptions\": True,\n                \"allow_customer_updates\": False,\n                \"proration_behavior\": polar_sdk.SubscriptionProrationBehavior.INVOICE,\n            },\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["product.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointproduct_created_post(request={\n        \"type\": \"product.created\",\n        \"data\": {\n            \"created_at\": parse_datetime(\"2023-10-13T02:47:55.082Z\"),\n            \"modified_at\": None,\n            \"id\": \"<value>\",\n            \"name\": \"<value>\",\n            \"description\": \"till that ew put\",\n            \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n            \"is_recurring\": False,\n            \"is_archived\": True,\n            \"organization_id\": \"<value>\",\n            \"metadata\": {\n                \"key\": 785881,\n                \"key1\": False,\n                \"key2\": False,\n            },\n            \"prices\": [\n                {\n                    \"created_at\": parse_datetime(\"2024-07-28T01:37:16.074Z\"),\n                    \"modified_at\": parse_datetime(\"2023-07-04T11:33:29.001Z\"),\n                    \"id\": \"<value>\",\n                    \"amount_type\": \"custom\",\n                    \"is_archived\": False,\n                    \"product_id\": \"<value>\",\n                    \"type\": \"recurring\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    \"price_currency\": \"<value>\",\n                    \"minimum_amount\": 11607,\n                    \"maximum_amount\": 141385,\n                    \"preset_amount\": 130829,\n                    \"legacy\": True,\n                },\n                {\n                    \"created_at\": parse_datetime(\"2025-01-10T16:35:07.867Z\"),\n                    \"modified_at\": parse_datetime(\"2025-07-03T18:52:57.743Z\"),\n                    \"id\": \"<value>\",\n                    \"amount_type\": \"fixed\",\n                    \"is_archived\": False,\n                    \"product_id\": \"<value>\",\n                    \"type\": \"recurring\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    \"price_currency\": \"<value>\",\n                    \"price_amount\": 229195,\n                    \"legacy\": True,\n                },\n                {\n                    \"created_at\": parse_datetime(\"2023-11-13T15:31:37.843Z\"),\n                    \"modified_at\": parse_datetime(\"2024-12-09T02:07:21.938Z\"),\n                    \"id\": \"<value>\",\n                    \"amount_type\": \"fixed\",\n                    \"is_archived\": False,\n                    \"product_id\": \"<value>\",\n                    \"type\": polar_sdk.ProductPriceType.RECURRING,\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    \"price_currency\": \"<value>\",\n                    \"price_amount\": 244234,\n                },\n            ],\n            \"benefits\": [\n                {\n                    \"id\": \"<value>\",\n                    \"created_at\": parse_datetime(\"2023-07-31T20:09:09.874Z\"),\n                    \"modified_at\": parse_datetime(\"2023-08-27T06:26:02.524Z\"),\n                    \"type\": \"discord\",\n                    \"description\": \"aha than before frugal ornery thoroughly once provided cork\",\n                    \"selectable\": False,\n                    \"deletable\": False,\n                    \"organization_id\": \"<value>\",\n                    \"metadata\": {\n                        \"key\": \"<value>\",\n                        \"key1\": 919470,\n                        \"key2\": 8910.27,\n                    },\n                    \"properties\": {\n                        \"guild_id\": \"<id>\",\n                        \"role_id\": \"<id>\",\n                        \"guild_token\": \"<value>\",\n                    },\n                },\n            ],\n            \"medias\": [\n                {\n                    \"id\": \"<value>\",\n                    \"organization_id\": \"<value>\",\n                    \"name\": \"<value>\",\n                    \"path\": \"/Users\",\n                    \"mime_type\": \"<value>\",\n                    \"size\": 616062,\n                    \"storage_version\": \"<value>\",\n                    \"checksum_etag\": \"<value>\",\n                    \"checksum_sha256_base64\": \"<value>\",\n                    \"checksum_sha256_hex\": \"<value>\",\n                    \"last_modified_at\": parse_datetime(\"2025-10-29T10:58:55.115Z\"),\n                    \"version\": \"<value>\",\n                    \"service\": \"product_media\",\n                    \"is_uploaded\": True,\n                    \"created_at\": parse_datetime(\"2024-02-03T23:25:29.448Z\"),\n                    \"size_readable\": \"<value>\",\n                    \"public_url\": \"https://livid-stool.biz/\",\n                },\n            ],\n            \"attached_custom_fields\": [],\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["product.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointproduct_updated_post(request={\n        \"type\": \"product.updated\",\n        \"data\": {\n            \"created_at\": parse_datetime(\"2024-08-25T02:00:54.049Z\"),\n            \"modified_at\": parse_datetime(\"2023-07-21T03:22:42.071Z\"),\n            \"id\": \"<value>\",\n            \"name\": \"<value>\",\n            \"description\": \"fooey optimistic beyond dress helpfully whispered structure heartfelt consequently\",\n            \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n            \"is_recurring\": False,\n            \"is_archived\": False,\n            \"organization_id\": \"<value>\",\n            \"metadata\": {\n                \"key\": 495401,\n                \"key1\": True,\n            },\n            \"prices\": [\n                {\n                    \"created_at\": parse_datetime(\"2023-07-21T03:22:42.071Z\"),\n                    \"modified_at\": parse_datetime(\"2025-07-31T19:14:23.351Z\"),\n                    \"id\": \"<value>\",\n                    \"amount_type\": \"free\",\n                    \"is_archived\": False,\n                    \"product_id\": \"<value>\",\n                    \"type\": polar_sdk.ProductPriceType.RECURRING,\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                },\n                {\n                    \"created_at\": parse_datetime(\"2025-03-05T18:32:31.794Z\"),\n                    \"modified_at\": parse_datetime(\"2024-03-24T14:09:55.947Z\"),\n                    \"id\": \"<value>\",\n                    \"amount_type\": \"free\",\n                    \"is_archived\": False,\n                    \"product_id\": \"<value>\",\n                    \"type\": \"recurring\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    \"legacy\": True,\n                },\n                {\n                    \"created_at\": parse_datetime(\"2024-10-05T01:46:47.680Z\"),\n                    \"modified_at\": parse_datetime(\"2024-02-26T02:21:28.922Z\"),\n                    \"id\": \"<value>\",\n                    \"amount_type\": \"free\",\n                    \"is_archived\": False,\n                    \"product_id\": \"<value>\",\n                    \"type\": \"recurring\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    \"legacy\": True,\n                },\n            ],\n            \"benefits\": [\n                {\n                    \"id\": \"<value>\",\n                    \"created_at\": parse_datetime(\"2024-12-26T20:43:42.655Z\"),\n                    \"modified_at\": parse_datetime(\"2023-11-13T02:29:49.304Z\"),\n                    \"type\": \"downloadables\",\n                    \"description\": \"towards avaricious oof after nutritious\",\n                    \"selectable\": True,\n                    \"deletable\": True,\n                    \"organization_id\": \"<value>\",\n                    \"metadata\": {\n\n                    },\n                    \"properties\": {\n                        \"archived\": {\n                            \"key\": False,\n                        },\n                        \"files\": [\n                            \"<value 1>\",\n                            \"<value 2>\",\n                            \"<value 3>\",\n                        ],\n                    },\n                },\n                {\n                    \"id\": \"<value>\",\n                    \"created_at\": parse_datetime(\"2023-09-18T01:08:29.935Z\"),\n                    \"modified_at\": parse_datetime(\"2025-06-15T04:30:20.706Z\"),\n                    \"type\": \"meter_credit\",\n                    \"description\": \"where patroller after aw arid\",\n                    \"selectable\": False,\n                    \"deletable\": True,\n                    \"organization_id\": \"<value>\",\n                    \"metadata\": {\n                        \"key\": True,\n                        \"key1\": \"<value>\",\n                    },\n                    \"properties\": {\n                        \"units\": 292879,\n                        \"rollover\": True,\n                        \"meter_id\": \"<value>\",\n                    },\n                },\n                {\n                    \"id\": \"<value>\",\n                    \"created_at\": parse_datetime(\"2023-08-06T07:32:57.958Z\"),\n                    \"modified_at\": parse_datetime(\"2023-04-29T20:41:41.892Z\"),\n                    \"type\": \"github_repository\",\n                    \"description\": \"once however abnormally pace wretched presell\",\n                    \"selectable\": False,\n                    \"deletable\": True,\n                    \"organization_id\": \"<value>\",\n                    \"metadata\": {\n                        \"key\": False,\n                    },\n                    \"properties\": {\n                        \"repository_owner\": \"polarsource\",\n                        \"repository_name\": \"private_repo\",\n                        \"permission\": polar_sdk.Permission.PULL,\n                    },\n                },\n            ],\n            \"medias\": [\n                {\n                    \"id\": \"<value>\",\n                    \"organization_id\": \"<value>\",\n                    \"name\": \"<value>\",\n                    \"path\": \"/opt\",\n                    \"mime_type\": \"<value>\",\n                    \"size\": 435627,\n                    \"storage_version\": \"<value>\",\n                    \"checksum_etag\": \"<value>\",\n                    \"checksum_sha256_base64\": \"<value>\",\n                    \"checksum_sha256_hex\": \"<value>\",\n                    \"last_modified_at\": parse_datetime(\"2025-04-14T07:39:07.142Z\"),\n                    \"version\": \"<value>\",\n                    \"service\": \"product_media\",\n                    \"is_uploaded\": True,\n                    \"created_at\": parse_datetime(\"2024-04-21T20:24:54.389Z\"),\n                    \"size_readable\": \"<value>\",\n                    \"public_url\": \"https://uneven-juggernaut.net\",\n                },\n            ],\n            \"attached_custom_fields\": [\n                {\n                    \"custom_field_id\": \"<value>\",\n                    \"custom_field\": {\n                        \"created_at\": parse_datetime(\"2025-10-22T03:22:15.717Z\"),\n                        \"modified_at\": parse_datetime(\"2024-11-21T19:59:56.303Z\"),\n                        \"id\": \"<value>\",\n                        \"metadata\": {\n                            \"key\": True,\n                            \"key1\": False,\n                        },\n                        \"type\": \"text\",\n                        \"slug\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        \"properties\": {},\n                    },\n                    \"order\": 876633,\n                    \"required\": True,\n                },\n                {\n                    \"custom_field_id\": \"<value>\",\n                    \"custom_field\": {\n                        \"created_at\": parse_datetime(\"2025-10-22T03:22:15.717Z\"),\n                        \"modified_at\": parse_datetime(\"2024-11-21T19:59:56.303Z\"),\n                        \"id\": \"<value>\",\n                        \"metadata\": {\n                            \"key\": True,\n                            \"key1\": False,\n                        },\n                        \"type\": \"text\",\n                        \"slug\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        \"properties\": {},\n                    },\n                    \"order\": 876633,\n                    \"required\": True,\n                },\n            ],\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["refund.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointrefund_created_post(request={\n        \"type\": \"refund.created\",\n        \"data\": {\n            \"created_at\": parse_datetime(\"2025-02-15T13:46:01.700Z\"),\n            \"modified_at\": parse_datetime(\"2024-07-08T10:47:55.917Z\"),\n            \"id\": \"<value>\",\n            \"metadata\": {\n                \"key\": 1671.19,\n                \"key1\": \"<value>\",\n                \"key2\": True,\n            },\n            \"status\": polar_sdk.RefundStatus.SUCCEEDED,\n            \"reason\": polar_sdk.RefundReason.SATISFACTION_GUARANTEE,\n            \"amount\": 800478,\n            \"tax_amount\": 856871,\n            \"currency\": \"Lebanese Pound\",\n            \"organization_id\": \"<value>\",\n            \"order_id\": \"<value>\",\n            \"subscription_id\": \"<value>\",\n            \"customer_id\": \"<value>\",\n            \"revoke_benefits\": False,\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["refund.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointrefund_updated_post(request={\n        \"type\": \"refund.updated\",\n        \"data\": {\n            \"created_at\": parse_datetime(\"2023-01-08T20:35:39.672Z\"),\n            \"modified_at\": parse_datetime(\"2025-09-12T22:02:00.691Z\"),\n            \"id\": \"<value>\",\n            \"metadata\": {\n                \"key\": \"<value>\",\n                \"key1\": False,\n            },\n            \"status\": polar_sdk.RefundStatus.CANCELED,\n            \"reason\": polar_sdk.RefundReason.SATISFACTION_GUARANTEE,\n            \"amount\": 168595,\n            \"tax_amount\": 859949,\n            \"currency\": \"Venezuelan bolívar\",\n            \"organization_id\": \"<value>\",\n            \"order_id\": \"<value>\",\n            \"subscription_id\": \"<value>\",\n            \"customer_id\": \"<value>\",\n            \"revoke_benefits\": True,\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.active"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_active_post(request=polar_sdk.WebhookSubscriptionActivePayload(\n        data=polar_sdk.Subscription(\n            created_at=parse_datetime(\"2023-08-13T01:28:21.362Z\"),\n            modified_at=parse_datetime(\"2024-06-25T00:41:05.678Z\"),\n            id=\"<value>\",\n            amount=320436,\n            currency=\"Peso Uruguayo\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            status=polar_sdk.SubscriptionStatus.PAST_DUE,\n            current_period_start=parse_datetime(\"2023-06-09T14:14:48.363Z\"),\n            current_period_end=None,\n            cancel_at_period_end=True,\n            canceled_at=None,\n            started_at=parse_datetime(\"2023-07-21T07:29:31.409Z\"),\n            ends_at=parse_datetime(\"2025-08-05T11:38:46.213Z\"),\n            ended_at=parse_datetime(\"2024-09-05T04:27:23.768Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.TOO_COMPLEX,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n                \"key\": False,\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2024-08-17T18:35:42.212Z\"),\n                modified_at=parse_datetime(\"2025-01-01T23:32:39.659Z\"),\n                metadata={\n                    \"key\": 7303.56,\n                    \"key1\": 796236,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=None,\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            product=polar_sdk.Product(\n                created_at=parse_datetime(\"2025-11-05T10:18:40.300Z\"),\n                modified_at=parse_datetime(\"2024-04-23T18:24:43.408Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"athwart fail wound oh nor boohoo reasoning against since\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=False,\n                is_archived=True,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": 722592,\n                },\n                prices=[],\n                benefits=[\n                    polar_sdk.BenefitLicenseKeys(\n                        id=\"<value>\",\n                        created_at=parse_datetime(\"2025-05-21T10:49:13.924Z\"),\n                        modified_at=None,\n                        description=\"chime softly outgoing gray\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        metadata={\n\n                        },\n                        properties=polar_sdk.BenefitLicenseKeysProperties(\n                            prefix=\"<value>\",\n                            expires=polar_sdk.BenefitLicenseKeyExpirationProperties(\n                                ttl=18256,\n                                timeframe=polar_sdk.Timeframe.DAY,\n                            ),\n                            activations=polar_sdk.BenefitLicenseKeyActivationProperties(\n                                limit=776442,\n                                enable_customer_admin=False,\n                            ),\n                            limit_usage=89994,\n                        ),\n                    ),\n                    polar_sdk.BenefitGitHubRepository(\n                        id=\"<value>\",\n                        created_at=parse_datetime(\"2023-02-11T00:08:34.711Z\"),\n                        modified_at=parse_datetime(\"2024-10-21T08:00:16.195Z\"),\n                        description=\"as draft noon kettledrum alligator\",\n                        selectable=True,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        metadata={\n                            \"key\": 331688,\n                            \"key1\": 10869,\n                            \"key2\": True,\n                        },\n                        properties=polar_sdk.BenefitGitHubRepositoryProperties(\n                            repository_owner=\"polarsource\",\n                            repository_name=\"private_repo\",\n                            permission=polar_sdk.Permission.MAINTAIN,\n                        ),\n                    ),\n                    polar_sdk.BenefitGitHubRepository(\n                        id=\"<value>\",\n                        created_at=parse_datetime(\"2023-02-11T00:08:34.711Z\"),\n                        modified_at=parse_datetime(\"2024-10-21T08:00:16.195Z\"),\n                        description=\"as draft noon kettledrum alligator\",\n                        selectable=True,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        metadata={\n                            \"key\": 331688,\n                            \"key1\": 10869,\n                            \"key2\": True,\n                        },\n                        properties=polar_sdk.BenefitGitHubRepositoryProperties(\n                            repository_owner=\"polarsource\",\n                            repository_name=\"private_repo\",\n                            permission=polar_sdk.Permission.MAINTAIN,\n                        ),\n                    ),\n                ],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/usr/libexec\",\n                        mime_type=\"<value>\",\n                        size=980211,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=parse_datetime(\"2025-09-01T03:11:19.881Z\"),\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=parse_datetime(\"2023-05-05T22:00:20.852Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://shabby-integer.org\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/usr/libexec\",\n                        mime_type=\"<value>\",\n                        size=980211,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=parse_datetime(\"2025-09-01T03:11:19.881Z\"),\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=parse_datetime(\"2023-05-05T22:00:20.852Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://shabby-integer.org\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/usr/libexec\",\n                        mime_type=\"<value>\",\n                        size=980211,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=parse_datetime(\"2025-09-01T03:11:19.881Z\"),\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=parse_datetime(\"2023-05-05T22:00:20.852Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://shabby-integer.org\",\n                    ),\n                ],\n                attached_custom_fields=[],\n            ),\n            discount=polar_sdk.DiscountFixedRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.REPEATING,\n                duration_in_months=482318,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                amount=489921,\n                currency=\"Chilean Peso\",\n                created_at=parse_datetime(\"2023-10-09T08:41:16.911Z\"),\n                modified_at=parse_datetime(\"2025-08-16T07:28:28.929Z\"),\n                id=\"<value>\",\n                metadata={\n\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2024-04-06T16:40:05.860Z\"),\n                ends_at=parse_datetime(\"2023-01-06T22:21:47.288Z\"),\n                max_redemptions=None,\n                redemptions_count=313365,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            prices=[\n                polar_sdk.LegacyRecurringProductPriceCustom(\n                    created_at=parse_datetime(\"2024-06-25T00:41:05.678Z\"),\n                    modified_at=parse_datetime(\"2023-12-18T04:45:55.702Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    price_currency=\"<value>\",\n                    minimum_amount=291908,\n                    maximum_amount=592565,\n                    preset_amount=145614,\n                ),\n                polar_sdk.LegacyRecurringProductPriceCustom(\n                    created_at=parse_datetime(\"2023-02-11T00:38:47.217Z\"),\n                    modified_at=parse_datetime(\"2024-09-09T22:42:06.531Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    price_currency=\"<value>\",\n                    minimum_amount=568101,\n                    maximum_amount=864494,\n                    preset_amount=525739,\n                ),\n                polar_sdk.ProductPriceFixed(\n                    created_at=parse_datetime(\"2024-06-17T20:38:09.011Z\"),\n                    modified_at=parse_datetime(\"2023-10-10T03:15:20.759Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    type=polar_sdk.ProductPriceType.RECURRING,\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    price_currency=\"<value>\",\n                    price_amount=277670,\n                ),\n            ],\n            meters=[],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.canceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_canceled_post(request=polar_sdk.WebhookSubscriptionCanceledPayload(\n        data=polar_sdk.Subscription(\n            created_at=parse_datetime(\"2025-02-09T04:39:02.332Z\"),\n            modified_at=parse_datetime(\"2023-04-18T10:38:03.481Z\"),\n            id=\"<value>\",\n            amount=137392,\n            currency=\"New Taiwan Dollar\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            status=polar_sdk.SubscriptionStatus.ACTIVE,\n            current_period_start=parse_datetime(\"2023-06-17T04:15:56.819Z\"),\n            current_period_end=parse_datetime(\"2023-06-02T15:48:16.857Z\"),\n            cancel_at_period_end=False,\n            canceled_at=parse_datetime(\"2024-01-07T18:54:45.602Z\"),\n            started_at=parse_datetime(\"2025-02-23T12:23:49.579Z\"),\n            ends_at=parse_datetime(\"2023-11-16T08:24:59.166Z\"),\n            ended_at=parse_datetime(\"2023-07-21T16:25:14.433Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=None,\n            checkout_id=None,\n            customer_cancellation_reason=None,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2023-10-25T05:52:42.846Z\"),\n                modified_at=parse_datetime(\"2023-09-20T10:20:50.540Z\"),\n                metadata={\n                    \"key\": True,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2023-07-13T08:26:56.650Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            product=polar_sdk.Product(\n                created_at=parse_datetime(\"2025-06-11T17:21:10.206Z\"),\n                modified_at=parse_datetime(\"2025-03-18T13:26:34.470Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"unimpressively stiffen promptly\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                is_recurring=False,\n                is_archived=True,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": True,\n                },\n                prices=[\n                    polar_sdk.ProductPriceMeteredUnit(\n                        created_at=parse_datetime(\"2023-04-18T10:38:03.481Z\"),\n                        modified_at=parse_datetime(\"2023-05-31T13:57:32.256Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        type=polar_sdk.ProductPriceType.RECURRING,\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        price_currency=\"<value>\",\n                        unit_amount=\"<value>\",\n                        cap_amount=538272,\n                        meter_id=\"<value>\",\n                        meter=polar_sdk.ProductPriceMeter(\n                            id=\"<value>\",\n                            name=\"<value>\",\n                        ),\n                    ),\n                    polar_sdk.LegacyRecurringProductPriceCustom(\n                        created_at=parse_datetime(\"2023-06-02T15:48:16.857Z\"),\n                        modified_at=parse_datetime(\"2025-03-21T15:50:39.816Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                        price_currency=\"<value>\",\n                        minimum_amount=339222,\n                        maximum_amount=765022,\n                        preset_amount=715800,\n                    ),\n                ],\n                benefits=[\n                    polar_sdk.BenefitDownloadables(\n                        id=\"<value>\",\n                        created_at=parse_datetime(\"2024-09-21T18:00:22.332Z\"),\n                        modified_at=parse_datetime(\"2023-05-12T19:14:12.206Z\"),\n                        description=\"ostrich smog zowie loyally naturally noisily castanet pace deliberately\",\n                        selectable=False,\n                        deletable=True,\n                        organization_id=\"<value>\",\n                        metadata={\n\n                        },\n                        properties=polar_sdk.BenefitDownloadablesProperties(\n                            archived={\n                                \"key\": True,\n                                \"key1\": True,\n                            },\n                            files=[],\n                        ),\n                    ),\n                    polar_sdk.BenefitCustom(\n                        id=\"<value>\",\n                        created_at=parse_datetime(\"2025-12-18T22:12:17.302Z\"),\n                        modified_at=parse_datetime(\"2024-10-10T09:48:09.804Z\"),\n                        description=\"knavishly goat programme intrigue elegantly fooey decisive\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        metadata={\n                            \"key\": False,\n                            \"key1\": 922.01,\n                            \"key2\": 5307.16,\n                        },\n                        properties=polar_sdk.BenefitCustomProperties(\n                            note=\"<value>\",\n                        ),\n                    ),\n                    polar_sdk.BenefitMeterCredit(\n                        id=\"<value>\",\n                        created_at=parse_datetime(\"2024-06-11T13:23:03.299Z\"),\n                        modified_at=parse_datetime(\"2024-10-18T20:00:03.185Z\"),\n                        description=\"at like through stale yum corny\",\n                        selectable=True,\n                        deletable=True,\n                        organization_id=\"<value>\",\n                        metadata={\n                            \"key\": False,\n                        },\n                        properties=polar_sdk.BenefitMeterCreditProperties(\n                            units=743161,\n                            rollover=False,\n                            meter_id=\"<value>\",\n                        ),\n                    ),\n                ],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/var/yp\",\n                        mime_type=\"<value>\",\n                        size=91402,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=None,\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=None,\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=parse_datetime(\"2023-02-20T02:39:11.781Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://young-obesity.org\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/var/yp\",\n                        mime_type=\"<value>\",\n                        size=91402,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=None,\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=None,\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=parse_datetime(\"2023-02-20T02:39:11.781Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://young-obesity.org\",\n                    ),\n                ],\n                attached_custom_fields=[],\n            ),\n            discount=polar_sdk.DiscountPercentageOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                type=polar_sdk.DiscountType.FIXED,\n                basis_points=942713,\n                created_at=parse_datetime(\"2025-05-02T10:03:23.149Z\"),\n                modified_at=parse_datetime(\"2024-03-07T17:30:21.663Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": \"<value>\",\n                    \"key1\": False,\n                    \"key2\": \"<value>\",\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2025-11-05T08:42:03.906Z\"),\n                ends_at=None,\n                max_redemptions=510938,\n                redemptions_count=760335,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            prices=[\n                polar_sdk.LegacyRecurringProductPriceCustom(\n                    created_at=parse_datetime(\"2024-08-20T02:19:30.433Z\"),\n                    modified_at=parse_datetime(\"2023-07-21T16:25:14.433Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    price_currency=\"<value>\",\n                    minimum_amount=25751,\n                    maximum_amount=79919,\n                    preset_amount=968084,\n                ),\n            ],\n            meters=[],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_created_post(request=polar_sdk.WebhookSubscriptionCreatedPayload(\n        data=polar_sdk.Subscription(\n            created_at=parse_datetime(\"2024-05-03T11:46:21.459Z\"),\n            modified_at=parse_datetime(\"2025-01-12T06:30:14.360Z\"),\n            id=\"<value>\",\n            amount=469182,\n            currency=\"Boliviano boliviano\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n            status=polar_sdk.SubscriptionStatus.INCOMPLETE,\n            current_period_start=parse_datetime(\"2024-01-07T06:33:36.381Z\"),\n            current_period_end=parse_datetime(\"2024-07-30T16:54:44.427Z\"),\n            cancel_at_period_end=True,\n            canceled_at=parse_datetime(\"2023-09-10T18:39:16.136Z\"),\n            started_at=parse_datetime(\"2025-08-30T21:29:16.432Z\"),\n            ends_at=parse_datetime(\"2024-06-27T22:01:23.333Z\"),\n            ended_at=parse_datetime(\"2024-07-24T19:43:04.879Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=None,\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.MISSING_FEATURES,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n                \"key\": False,\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2023-05-18T22:55:50.482Z\"),\n                modified_at=parse_datetime(\"2024-08-04T23:52:10.438Z\"),\n                metadata={\n                    \"key\": False,\n                    \"key1\": False,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2023-05-15T22:05:41.858Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            product=polar_sdk.Product(\n                created_at=parse_datetime(\"2024-05-25T09:51:02.679Z\"),\n                modified_at=parse_datetime(\"2025-12-23T23:39:23.705Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"slink needily cemetery hydrocarbon a fledgling knit shirk appertain rural\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=True,\n                is_archived=False,\n                organization_id=\"<value>\",\n                metadata={\n\n                },\n                prices=[\n                    polar_sdk.LegacyRecurringProductPriceCustom(\n                        created_at=parse_datetime(\"2025-01-12T06:30:14.360Z\"),\n                        modified_at=parse_datetime(\"2024-05-29T05:21:44.072Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        price_currency=\"<value>\",\n                        minimum_amount=990795,\n                        maximum_amount=124912,\n                        preset_amount=338753,\n                    ),\n                    polar_sdk.LegacyRecurringProductPriceFixed(\n                        created_at=parse_datetime(\"2023-10-20T18:48:25.568Z\"),\n                        modified_at=parse_datetime(\"2025-01-24T01:20:23.589Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        price_currency=\"<value>\",\n                        price_amount=230391,\n                    ),\n                ],\n                benefits=[\n                    polar_sdk.BenefitMeterCredit(\n                        id=\"<value>\",\n                        created_at=parse_datetime(\"2024-08-16T04:04:01.242Z\"),\n                        modified_at=parse_datetime(\"2023-08-30T05:19:40.088Z\"),\n                        description=\"courageously quick-witted out equally toward though quietly\",\n                        selectable=True,\n                        deletable=True,\n                        organization_id=\"<value>\",\n                        metadata={\n                            \"key\": 3195.27,\n                        },\n                        properties=polar_sdk.BenefitMeterCreditProperties(\n                            units=371901,\n                            rollover=False,\n                            meter_id=\"<value>\",\n                        ),\n                    ),\n                ],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/lost+found\",\n                        mime_type=\"<value>\",\n                        size=719695,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=parse_datetime(\"2023-08-21T14:37:14.488Z\"),\n                        version=None,\n                        is_uploaded=False,\n                        created_at=parse_datetime(\"2025-10-28T06:08:47.416Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://repentant-unit.org/\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/lost+found\",\n                        mime_type=\"<value>\",\n                        size=719695,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=parse_datetime(\"2023-08-21T14:37:14.488Z\"),\n                        version=None,\n                        is_uploaded=False,\n                        created_at=parse_datetime(\"2025-10-28T06:08:47.416Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://repentant-unit.org/\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/lost+found\",\n                        mime_type=\"<value>\",\n                        size=719695,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=parse_datetime(\"2023-08-21T14:37:14.488Z\"),\n                        version=None,\n                        is_uploaded=False,\n                        created_at=parse_datetime(\"2025-10-28T06:08:47.416Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://repentant-unit.org/\",\n                    ),\n                ],\n                attached_custom_fields=[],\n            ),\n            discount=polar_sdk.DiscountPercentageOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                type=polar_sdk.DiscountType.FIXED,\n                basis_points=745503,\n                created_at=parse_datetime(\"2024-04-19T20:53:32.186Z\"),\n                modified_at=parse_datetime(\"2024-11-15T00:04:04.545Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": 3699.53,\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2024-10-15T21:24:43.202Z\"),\n                ends_at=parse_datetime(\"2025-09-26T06:55:01.272Z\"),\n                max_redemptions=104800,\n                redemptions_count=570322,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            prices=[\n                polar_sdk.ProductPriceFree(\n                    created_at=parse_datetime(\"2024-06-27T22:01:23.333Z\"),\n                    modified_at=parse_datetime(\"2023-08-19T21:45:43.735Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    type=polar_sdk.ProductPriceType.RECURRING,\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                ),\n            ],\n            meters=[\n                polar_sdk.SubscriptionMeter(\n                    created_at=parse_datetime(\"2025-05-17T01:58:02.155Z\"),\n                    modified_at=parse_datetime(\"2024-09-29T09:35:40.427Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n                            \"key\": 201601,\n                            \"key1\": True,\n                            \"key2\": 2057.75,\n                        },\n                        created_at=parse_datetime(\"2025-03-06T04:32:46.256Z\"),\n                        modified_at=parse_datetime(\"2024-01-13T00:47:03.334Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.OR,\n                            clauses=[],\n                        ),\n                        aggregation=polar_sdk.PropertyAggregation(\n                            func=polar_sdk.Func.MAX,\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n                polar_sdk.SubscriptionMeter(\n                    created_at=parse_datetime(\"2025-05-17T01:58:02.155Z\"),\n                    modified_at=parse_datetime(\"2024-09-29T09:35:40.427Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n                            \"key\": 201601,\n                            \"key1\": True,\n                            \"key2\": 2057.75,\n                        },\n                        created_at=parse_datetime(\"2025-03-06T04:32:46.256Z\"),\n                        modified_at=parse_datetime(\"2024-01-13T00:47:03.334Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.OR,\n                            clauses=[],\n                        ),\n                        aggregation=polar_sdk.PropertyAggregation(\n                            func=polar_sdk.Func.MAX,\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n                polar_sdk.SubscriptionMeter(\n                    created_at=parse_datetime(\"2025-05-17T01:58:02.155Z\"),\n                    modified_at=parse_datetime(\"2024-09-29T09:35:40.427Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n                            \"key\": 201601,\n                            \"key1\": True,\n                            \"key2\": 2057.75,\n                        },\n                        created_at=parse_datetime(\"2025-03-06T04:32:46.256Z\"),\n                        modified_at=parse_datetime(\"2024-01-13T00:47:03.334Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.OR,\n                            clauses=[],\n                        ),\n                        aggregation=polar_sdk.PropertyAggregation(\n                            func=polar_sdk.Func.MAX,\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_revoked_post(request=polar_sdk.WebhookSubscriptionRevokedPayload(\n        data=polar_sdk.Subscription(\n            created_at=parse_datetime(\"2024-01-02T06:40:50.860Z\"),\n            modified_at=None,\n            id=\"<value>\",\n            amount=357630,\n            currency=\"Fiji Dollar\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            status=polar_sdk.SubscriptionStatus.CANCELED,\n            current_period_start=parse_datetime(\"2024-04-30T10:39:59.432Z\"),\n            current_period_end=parse_datetime(\"2025-03-19T11:29:47.842Z\"),\n            cancel_at_period_end=True,\n            canceled_at=parse_datetime(\"2023-02-17T04:59:11.584Z\"),\n            started_at=parse_datetime(\"2024-02-14T23:20:57.498Z\"),\n            ends_at=parse_datetime(\"2025-04-28T23:19:31.379Z\"),\n            ended_at=parse_datetime(\"2023-04-29T06:37:50.213Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.CUSTOMER_SERVICE,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n                \"key\": 764246,\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2025-03-17T11:47:03.932Z\"),\n                modified_at=parse_datetime(\"2025-12-12T02:48:12.123Z\"),\n                metadata={\n                    \"key\": True,\n                    \"key1\": 683572,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2025-12-09T13:41:39.970Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            product=polar_sdk.Product(\n                created_at=parse_datetime(\"2025-05-31T05:10:14.997Z\"),\n                modified_at=parse_datetime(\"2024-05-08T09:12:04.956Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"pace aside typewriter if oh almost supposing twine\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                is_recurring=True,\n                is_archived=False,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": 956675,\n                },\n                prices=[],\n                benefits=[\n                    polar_sdk.BenefitGitHubRepository(\n                        id=\"<value>\",\n                        created_at=parse_datetime(\"2024-06-28T04:33:55.419Z\"),\n                        modified_at=parse_datetime(\"2023-04-08T23:58:31.520Z\"),\n                        description=\"eventually holster drab finished than sanity wiggly surprisingly judicious\",\n                        selectable=True,\n                        deletable=True,\n                        organization_id=\"<value>\",\n                        metadata={\n                            \"key\": False,\n                            \"key1\": 683668,\n                            \"key2\": 4880.9,\n                        },\n                        properties=polar_sdk.BenefitGitHubRepositoryProperties(\n                            repository_owner=\"polarsource\",\n                            repository_name=\"private_repo\",\n                            permission=polar_sdk.Permission.ADMIN,\n                        ),\n                    ),\n                ],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/Users\",\n                        mime_type=\"<value>\",\n                        size=789606,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=parse_datetime(\"2025-10-08T06:21:41.000Z\"),\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=parse_datetime(\"2024-12-10T00:21:44.017Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://poor-duster.name/\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/Users\",\n                        mime_type=\"<value>\",\n                        size=789606,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=parse_datetime(\"2025-10-08T06:21:41.000Z\"),\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=parse_datetime(\"2024-12-10T00:21:44.017Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://poor-duster.name/\",\n                    ),\n                ],\n                attached_custom_fields=[\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldDate(\n                            created_at=parse_datetime(\"2024-02-06T03:19:32.386Z\"),\n                            modified_at=parse_datetime(\"2023-10-17T04:09:43.608Z\"),\n                            id=\"<value>\",\n                            metadata={\n\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldDateProperties(),\n                        ),\n                        order=575720,\n                        required=False,\n                    ),\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldDate(\n                            created_at=parse_datetime(\"2024-02-06T03:19:32.386Z\"),\n                            modified_at=parse_datetime(\"2023-10-17T04:09:43.608Z\"),\n                            id=\"<value>\",\n                            metadata={\n\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldDateProperties(),\n                        ),\n                        order=575720,\n                        required=False,\n                    ),\n                ],\n            ),\n            discount=polar_sdk.DiscountFixedRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                duration_in_months=357630,\n                type=polar_sdk.DiscountType.FIXED,\n                amount=88813,\n                currency=\"Syrian Pound\",\n                created_at=parse_datetime(\"2024-04-30T10:39:59.432Z\"),\n                modified_at=parse_datetime(\"2023-05-30T02:07:20.021Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": 1384.64,\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2023-11-20T08:24:19.529Z\"),\n                ends_at=parse_datetime(\"2023-02-17T04:59:11.584Z\"),\n                max_redemptions=535853,\n                redemptions_count=374063,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            prices=[],\n            meters=[],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.uncanceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_uncanceled_post(request=polar_sdk.WebhookSubscriptionUncanceledPayload(\n        data=polar_sdk.Subscription(\n            created_at=parse_datetime(\"2023-02-06T17:25:10.106Z\"),\n            modified_at=parse_datetime(\"2023-01-25T07:20:02.381Z\"),\n            id=\"<value>\",\n            amount=755736,\n            currency=\"Iceland Krona\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            status=polar_sdk.SubscriptionStatus.CANCELED,\n            current_period_start=parse_datetime(\"2024-04-11T19:08:16.655Z\"),\n            current_period_end=parse_datetime(\"2023-08-23T01:03:59.107Z\"),\n            cancel_at_period_end=True,\n            canceled_at=parse_datetime(\"2024-11-16T02:01:16.824Z\"),\n            started_at=None,\n            ends_at=parse_datetime(\"2023-12-23T04:50:00.016Z\"),\n            ended_at=parse_datetime(\"2024-10-18T16:25:47.209Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=None,\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.LOW_QUALITY,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2025-10-01T20:42:25.530Z\"),\n                modified_at=parse_datetime(\"2024-07-04T17:30:56.477Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2024-12-20T09:31:52.259Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            product=polar_sdk.Product(\n                created_at=parse_datetime(\"2024-03-26T06:19:23.237Z\"),\n                modified_at=parse_datetime(\"2024-05-11T18:08:21.251Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"questioningly proliferate yet vanish mooch yowza hopeful\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=True,\n                is_archived=True,\n                organization_id=\"<value>\",\n                metadata={\n\n                },\n                prices=[\n                    polar_sdk.LegacyRecurringProductPriceCustom(\n                        created_at=parse_datetime(\"2023-01-25T07:20:02.381Z\"),\n                        modified_at=parse_datetime(\"2025-04-08T06:52:54.664Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        price_currency=\"<value>\",\n                        minimum_amount=166712,\n                        maximum_amount=809387,\n                        preset_amount=425910,\n                    ),\n                ],\n                benefits=[\n                    polar_sdk.BenefitDownloadables(\n                        id=\"<value>\",\n                        created_at=parse_datetime(\"2024-07-09T11:35:46.121Z\"),\n                        modified_at=parse_datetime(\"2024-07-14T11:45:04.348Z\"),\n                        description=\"esteemed aha arcade\",\n                        selectable=True,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        metadata={\n                            \"key\": 549444,\n                        },\n                        properties=polar_sdk.BenefitDownloadablesProperties(\n                            archived={\n                                \"key\": False,\n                                \"key1\": False,\n                                \"key2\": True,\n                            },\n                            files=[\n                                \"<value 1>\",\n                            ],\n                        ),\n                    ),\n                    polar_sdk.BenefitGitHubRepository(\n                        id=\"<value>\",\n                        created_at=parse_datetime(\"2023-07-17T10:10:30.145Z\"),\n                        modified_at=parse_datetime(\"2024-02-22T01:39:19.437Z\"),\n                        description=\"hmph frantically for into unfurl rapidly when\",\n                        selectable=False,\n                        deletable=True,\n                        organization_id=\"<value>\",\n                        metadata={\n                            \"key\": \"<value>\",\n                        },\n                        properties=polar_sdk.BenefitGitHubRepositoryProperties(\n                            repository_owner=\"polarsource\",\n                            repository_name=\"private_repo\",\n                            permission=polar_sdk.Permission.ADMIN,\n                        ),\n                    ),\n                ],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/etc/namedb\",\n                        mime_type=\"<value>\",\n                        size=865781,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=None,\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=parse_datetime(\"2024-09-05T02:35:48.322Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=parse_datetime(\"2024-12-06T10:04:39.843Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://normal-giant.org/\",\n                    ),\n                ],\n                attached_custom_fields=[\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldText(\n                            created_at=parse_datetime(\"2025-05-08T20:53:14.936Z\"),\n                            modified_at=parse_datetime(\"2025-08-01T19:32:49.347Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": 791230,\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldTextProperties(),\n                        ),\n                        order=887720,\n                        required=False,\n                    ),\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldText(\n                            created_at=parse_datetime(\"2025-05-08T20:53:14.936Z\"),\n                            modified_at=parse_datetime(\"2025-08-01T19:32:49.347Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": 791230,\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldTextProperties(),\n                        ),\n                        order=887720,\n                        required=False,\n                    ),\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldText(\n                            created_at=parse_datetime(\"2025-05-08T20:53:14.936Z\"),\n                            modified_at=parse_datetime(\"2025-08-01T19:32:49.347Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": 791230,\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldTextProperties(),\n                        ),\n                        order=887720,\n                        required=False,\n                    ),\n                ],\n            ),\n            discount=polar_sdk.DiscountPercentageOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                type=polar_sdk.DiscountType.FIXED,\n                basis_points=408479,\n                created_at=parse_datetime(\"2023-03-14T02:37:49.424Z\"),\n                modified_at=parse_datetime(\"2025-12-23T02:41:08.695Z\"),\n                id=\"<value>\",\n                metadata={\n\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2024-07-07T16:21:42.534Z\"),\n                ends_at=parse_datetime(\"2023-05-08T21:16:10.476Z\"),\n                max_redemptions=431440,\n                redemptions_count=127195,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            prices=[\n                polar_sdk.LegacyRecurringProductPriceCustom(\n                    created_at=parse_datetime(\"2023-10-03T23:40:30.923Z\"),\n                    modified_at=parse_datetime(\"2024-08-30T15:34:10.479Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    price_currency=\"<value>\",\n                    minimum_amount=34827,\n                    maximum_amount=307121,\n                    preset_amount=325001,\n                ),\n            ],\n            meters=[\n                polar_sdk.SubscriptionMeter(\n                    created_at=parse_datetime(\"2025-11-08T06:13:24.540Z\"),\n                    modified_at=parse_datetime(\"2023-05-26T16:36:35.734Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n                            \"key\": 479423,\n                            \"key1\": 327992,\n                        },\n                        created_at=parse_datetime(\"2025-01-03T20:59:19.837Z\"),\n                        modified_at=parse_datetime(\"2024-09-23T23:32:35.223Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.AND,\n                            clauses=[],\n                        ),\n                        aggregation=polar_sdk.PropertyAggregation(\n                            func=polar_sdk.Func.AVG,\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n                polar_sdk.SubscriptionMeter(\n                    created_at=parse_datetime(\"2025-11-08T06:13:24.540Z\"),\n                    modified_at=parse_datetime(\"2023-05-26T16:36:35.734Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n                            \"key\": 479423,\n                            \"key1\": 327992,\n                        },\n                        created_at=parse_datetime(\"2025-01-03T20:59:19.837Z\"),\n                        modified_at=parse_datetime(\"2024-09-23T23:32:35.223Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.AND,\n                            clauses=[],\n                        ),\n                        aggregation=polar_sdk.PropertyAggregation(\n                            func=polar_sdk.Func.AVG,\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n                polar_sdk.SubscriptionMeter(\n                    created_at=parse_datetime(\"2025-11-08T06:13:24.540Z\"),\n                    modified_at=parse_datetime(\"2023-05-26T16:36:35.734Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n                            \"key\": 479423,\n                            \"key1\": 327992,\n                        },\n                        created_at=parse_datetime(\"2025-01-03T20:59:19.837Z\"),\n                        modified_at=parse_datetime(\"2024-09-23T23:32:35.223Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.AND,\n                            clauses=[],\n                        ),\n                        aggregation=polar_sdk.PropertyAggregation(\n                            func=polar_sdk.Func.AVG,\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_updated_post(request=polar_sdk.WebhookSubscriptionUpdatedPayload(\n        data=polar_sdk.Subscription(\n            created_at=parse_datetime(\"2023-06-24T13:26:25.969Z\"),\n            modified_at=parse_datetime(\"2024-10-16T16:24:20.274Z\"),\n            id=\"<value>\",\n            amount=505562,\n            currency=\"Guyana Dollar\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            status=polar_sdk.SubscriptionStatus.CANCELED,\n            current_period_start=parse_datetime(\"2024-06-19T12:29:28.503Z\"),\n            current_period_end=parse_datetime(\"2023-08-24T22:14:10.131Z\"),\n            cancel_at_period_end=False,\n            canceled_at=parse_datetime(\"2025-08-31T06:08:08.476Z\"),\n            started_at=parse_datetime(\"2023-06-01T08:01:27.951Z\"),\n            ends_at=parse_datetime(\"2025-01-23T22:07:32.693Z\"),\n            ended_at=parse_datetime(\"2025-05-14T13:55:44.367Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.LOW_QUALITY,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n                \"key\": 477870,\n                \"key1\": True,\n                \"key2\": 485359,\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2024-01-10T06:45:35.933Z\"),\n                modified_at=parse_datetime(\"2024-01-24T02:08:13.039Z\"),\n                metadata={\n                    \"key\": 117983,\n                    \"key1\": 8500.16,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2025-08-09T14:29:57.545Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            product=polar_sdk.Product(\n                created_at=parse_datetime(\"2024-12-02T17:09:45.787Z\"),\n                modified_at=parse_datetime(\"2025-03-11T00:51:56.943Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"obnoxiously save following clinch striking juicy\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                is_recurring=True,\n                is_archived=False,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": False,\n                    \"key1\": 884041,\n                    \"key2\": 4257.66,\n                },\n                prices=[\n                    polar_sdk.LegacyRecurringProductPriceFixed(\n                        created_at=parse_datetime(\"2024-10-16T16:24:20.274Z\"),\n                        modified_at=parse_datetime(\"2024-07-08T02:17:23.799Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        price_currency=\"<value>\",\n                        price_amount=489836,\n                    ),\n                ],\n                benefits=[],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/srv\",\n                        mime_type=\"<value>\",\n                        size=29348,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=None,\n                        last_modified_at=parse_datetime(\"2023-10-03T10:28:13.472Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=parse_datetime(\"2024-10-07T09:47:56.854Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://flowery-promise.org/\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/srv\",\n                        mime_type=\"<value>\",\n                        size=29348,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=None,\n                        last_modified_at=parse_datetime(\"2023-10-03T10:28:13.472Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=parse_datetime(\"2024-10-07T09:47:56.854Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://flowery-promise.org/\",\n                    ),\n                ],\n                attached_custom_fields=[\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldCheckbox(\n                            created_at=parse_datetime(\"2024-01-10T20:33:55.554Z\"),\n                            modified_at=parse_datetime(\"2023-03-14T14:16:19.041Z\"),\n                            id=\"<value>\",\n                            metadata={\n\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldCheckboxProperties(),\n                        ),\n                        order=766194,\n                        required=False,\n                    ),\n                ],\n            ),\n            discount=polar_sdk.DiscountFixedRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                duration_in_months=892166,\n                type=polar_sdk.DiscountType.FIXED,\n                amount=996997,\n                currency=\"Canadian Dollar\",\n                created_at=parse_datetime(\"2023-06-09T06:11:59.062Z\"),\n                modified_at=parse_datetime(\"2024-09-28T05:16:48.757Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": 962223,\n                    \"key1\": 587522,\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2023-04-12T20:54:06.410Z\"),\n                ends_at=parse_datetime(\"2025-03-19T14:28:57.223Z\"),\n                max_redemptions=852845,\n                redemptions_count=658199,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            prices=[],\n            meters=[\n                polar_sdk.SubscriptionMeter(\n                    created_at=parse_datetime(\"2025-06-07T13:44:19.881Z\"),\n                    modified_at=parse_datetime(\"2023-12-06T20:26:36.699Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n                            \"key\": 6882,\n                            \"key1\": 556425,\n                            \"key2\": 117069,\n                        },\n                        created_at=parse_datetime(\"2023-05-21T02:26:27.963Z\"),\n                        modified_at=parse_datetime(\"2025-06-09T17:54:52.162Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.AND,\n                            clauses=[\n                                polar_sdk.Filter(\n                                    conjunction=polar_sdk.FilterConjunction.OR,\n                                    clauses=[],\n                                ),\n                                polar_sdk.Filter(\n                                    conjunction=polar_sdk.FilterConjunction.OR,\n                                    clauses=[],\n                                ),\n                            ],\n                        ),\n                        aggregation=polar_sdk.PropertyAggregation(\n                            func=polar_sdk.Func.AVG,\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n                polar_sdk.SubscriptionMeter(\n                    created_at=parse_datetime(\"2025-06-07T13:44:19.881Z\"),\n                    modified_at=parse_datetime(\"2023-12-06T20:26:36.699Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n                            \"key\": 6882,\n                            \"key1\": 556425,\n                            \"key2\": 117069,\n                        },\n                        created_at=parse_datetime(\"2023-05-21T02:26:27.963Z\"),\n                        modified_at=parse_datetime(\"2025-06-09T17:54:52.162Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.AND,\n                            clauses=[\n                                polar_sdk.Filter(\n                                    conjunction=polar_sdk.FilterConjunction.OR,\n                                    clauses=[],\n                                ),\n                                polar_sdk.Filter(\n                                    conjunction=polar_sdk.FilterConjunction.OR,\n                                    clauses=[],\n                                ),\n                            ],\n                        ),\n                        aggregation=polar_sdk.PropertyAggregation(\n                            func=polar_sdk.Func.AVG,\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
