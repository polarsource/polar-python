overlay: 1.0.0
info:
  title: CodeSamples overlay for python target
  version: 0.0.0
actions:
  - target: $["paths"]["/v1/advertisements/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.advertisements.list(benefit_id=\"<value>\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/advertisements/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.advertisements.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/benefits/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/benefits/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.create(request={\n        \"type\": \"discord\",\n        \"description\": \"delightfully fumigate convection though zowie up bulky electronics\",\n        \"properties\": {\n            \"guild_token\": \"<value>\",\n            \"role_id\": \"<id>\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/benefits/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.benefits.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/benefits/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/benefits/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.update(id=\"<value>\", request_body={\n        \"type\": \"license_keys\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/benefits/{id}/grants"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.grants(id=\"<value>\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/checkout-links/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/checkout-links/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.create(request={\n        \"payment_processor\": \"stripe\",\n        \"allow_discount_codes\": True,\n        \"product_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkout-links/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.checkout_links.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/checkout-links/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkout-links/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.update(id=\"<value>\", checkout_link_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/checkouts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.create(request={\n        \"allow_discount_codes\": True,\n        \"product_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.client_get(client_secret=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.client_update(client_secret=\"<value>\", checkout_update_public={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}/confirm"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.client_confirm(client_secret=\"<value>\", checkout_confirm_stripe={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.update(id=\"<value>\", checkout_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/custom-fields/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/custom-fields/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.create(request={\n        \"type\": \"number\",\n        \"slug\": \"<value>\",\n        \"name\": \"<value>\",\n        \"properties\": {},\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/custom-fields/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.custom_fields.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/custom-fields/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/custom-fields/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.update(id=\"<value>\", custom_field_update={\n        \"type\": \"text\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.benefit_grants.list(security=polar_sdk.CustomerPortalBenefitGrantsListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ))\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.benefit_grants.get(security=polar_sdk.CustomerPortalBenefitGrantsGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.benefit_grants.update(security=polar_sdk.CustomerPortalBenefitGrantsUpdateSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\", customer_benefit_grant_update={\n        \"benefit_type\": \"license_keys\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.get(security=polar_sdk.CustomerPortalCustomersGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.update(security=polar_sdk.CustomerPortalCustomersUpdateSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.get_payment_methods(security=polar_sdk.CustomerPortalCustomersGetPaymentMethodsSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ))\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.add_payment_method(security=polar_sdk.CustomerPortalCustomersAddPaymentMethodSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), request={\n        \"confirmation_token_id\": \"<id>\",\n        \"set_default\": False,\n        \"return_url\": \"https://slight-digestive.info\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    polar.customer_portal.customers.delete_payment_method(security=polar_sdk.CustomerPortalCustomersDeletePaymentMethodSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<id>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customer-portal/downloadables/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.downloadables.list(security=polar_sdk.CustomerPortalDownloadablesListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ))\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/downloadables/{token}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customer_portal.downloadables.get(token=\"<value>\")\n\n    assert res is not None\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/license-keys/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.list(security=polar_sdk.CustomerPortalLicenseKeysListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ))\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/license-keys/activate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customer_portal.license_keys.activate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n        \"label\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/license-keys/deactivate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.customer_portal.license_keys.deactivate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n        \"activation_id\": \"<value>\",\n    })\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customer-portal/license-keys/validate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customer_portal.license_keys.validate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.get(security=polar_sdk.CustomerPortalLicenseKeysGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.list(security=polar_sdk.CustomerPortalOrdersListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ))\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.get(security=polar_sdk.CustomerPortalOrdersGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.invoice(security=polar_sdk.CustomerPortalOrdersInvoiceSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/organizations/{slug}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customer_portal.organizations.get(slug=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.list(security=polar_sdk.CustomerPortalSubscriptionsListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ))\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.cancel(security=polar_sdk.CustomerPortalSubscriptionsCancelSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.get(security=polar_sdk.CustomerPortalSubscriptionsGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.update(security=polar_sdk.CustomerPortalSubscriptionsUpdateSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\", customer_subscription_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-sessions/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customer_sessions.create(request={\n        \"customer_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customers/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.create(request={\n        \"email\": \"Loyal79@yahoo.com\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.customers.delete_external(external_id=\"<id>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customers/external/{external_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get_external(external_id=\"<id>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.update_external(external_id=\"<id>\", customer_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.customers.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customers/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.update(id=\"<value>\", customer_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/discounts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/discounts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.create(request={\n        \"duration\": polar_sdk.DiscountDuration.FOREVER,\n        \"duration_in_months\": 417458,\n        \"type\": polar_sdk.DiscountType.FIXED,\n        \"amount\": 69025,\n        \"currency\": \"usd\",\n        \"name\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/discounts/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.discounts.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/discounts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/discounts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.update(id=\"<value>\", discount_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/events/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/events/ingest"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.ingest(request={\n        \"events\": [\n            {\n                \"name\": \"<value>\",\n                \"customer_id\": \"<value>\",\n            },\n            {\n                \"name\": \"<value>\",\n                \"external_customer_id\": \"<id>\",\n            },\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/events/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/external_organizations/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.external_organizations.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/files/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/files/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.create(request={\n        \"name\": \"<value>\",\n        \"mime_type\": \"<value>\",\n        \"size\": 638424,\n        \"upload\": {\n            \"parts\": [\n                {\n                    \"number\": 417458,\n                    \"chunk_start\": 134365,\n                    \"chunk_end\": 69025,\n                },\n            ],\n        },\n        \"service\": \"organization_avatar\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/files/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.files.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/files/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.update(id=\"<value>\", file_patch={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/files/{id}/uploaded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.uploaded(id=\"<value>\", file_upload_completed={\n        \"id\": \"<id>\",\n        \"path\": \"/sys\",\n        \"parts\": [\n            {\n                \"number\": 173116,\n                \"checksum_etag\": \"<value>\",\n                \"checksum_sha256_base64\": \"<value>\",\n            },\n            {\n                \"number\": 894030,\n                \"checksum_etag\": \"<value>\",\n                \"checksum_sha256_base64\": \"<value>\",\n            },\n            {\n                \"number\": 673715,\n                \"checksum_etag\": \"<value>\",\n                \"checksum_sha256_base64\": \"<value>\",\n            },\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/license-keys"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/license-keys/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.update(id=\"<value>\", license_key_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/license-keys/{id}/activations/{activation_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.get_activation(id=\"<value>\", activation_id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/meters/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.create(request={\n        \"name\": \"<value>\",\n        \"filter_\": {\n            \"conjunction\": polar_sdk.FilterConjunction.AND,\n            \"clauses\": [\n\n            ],\n        },\n        \"aggregation\": {\n            \"func\": polar_sdk.Func.SUM,\n            \"property\": \"<value>\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.update(id=\"<value>\", meter_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/{id}/events"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.events(id=\"<value>\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/meters/{id}/quantities"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.quantities(id=\"<value>\", start_timestamp=dateutil.parser.isoparse(\"2023-09-17T00:45:34.608Z\"), end_timestamp=dateutil.parser.isoparse(\"2023-07-21T18:11:39.069Z\"), interval=polar_sdk.TimeInterval.HOUR)\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/metrics/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.metrics.get(start_date=dateutil.parser.parse(\"2025-02-06\").date(), end_date=dateutil.parser.parse(\"2024-09-04\").date(), interval=polar_sdk.TimeInterval.WEEK)\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/metrics/limits"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.metrics.limits()\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.clients.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/oauth2/authorize"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.authorize()\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/introspect"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.introspect(request={\n        \"token\": \"<value>\",\n        \"client_id\": \"<id>\",\n        \"client_secret\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/register"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.clients.create(request={\n        \"redirect_uris\": [\n            \"https://inferior-chainstay.com\",\n        ],\n        \"client_name\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.clients.delete(client_id=\"<id>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.clients.get(client_id=\"<id>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["put"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.clients.update(client_id=\"<id>\", o_auth2_client_configuration_update={\n        \"redirect_uris\": [\n            \"https://grown-worth.name\",\n            \"https://worthwhile-avalanche.org/\",\n            \"https://general-digit.com/\",\n        ],\n        \"client_name\": \"<value>\",\n        \"client_id\": \"<id>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/revoke"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.revoke(request={\n        \"token\": \"<value>\",\n        \"client_id\": \"<id>\",\n        \"client_secret\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/token"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.token(request={\n        \"grant_type\": \"authorization_code\",\n        \"client_id\": \"<id>\",\n        \"client_secret\": \"<value>\",\n        \"code\": \"<value>\",\n        \"redirect_uri\": \"https://old-fort.name\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/userinfo"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.userinfo()\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.orders.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.orders.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.orders.invoice(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/organizations/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/organizations/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.create(request={\n        \"name\": \"<value>\",\n        \"slug\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/organizations/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/organizations/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.update(id=\"<value>\", organization_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/products/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.create(request={\n        \"name\": \"<value>\",\n        \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n        \"prices\": [\n            {\n                \"amount_type\": \"custom\",\n                \"price_currency\": \"usd\",\n            },\n            {\n                \"amount_type\": \"custom\",\n                \"price_currency\": \"usd\",\n            },\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.update(id=\"<value>\", product_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/{id}/benefits"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.update_benefits(id=\"<value>\", product_benefits_update={\n        \"benefits\": [\n            \"<value>\",\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/refunds/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.refunds.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/refunds/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.refunds.create(request={\n        \"order_id\": \"<value>\",\n        \"reason\": polar_sdk.RefundReason.CUSTOMER_REQUEST,\n        \"amount\": 638424,\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/repositories/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.repositories.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/repositories/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.repositories.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/repositories/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.repositories.update(id=\"<value>\", repository_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/subscriptions/export"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.export()\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.revoke(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.update(id=\"<value>\", subscription_update={\n        \"revoke\": True,\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_created_post(request={\n        \"type\": \"benefit.created\",\n        \"data\": {\n            \"created_at\": dateutil.parser.isoparse(\"2023-04-15T11:45:18.891Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2025-06-17T12:04:55.002Z\"),\n            \"id\": \"<value>\",\n            \"type\": \"downloadables\",\n            \"description\": \"vastly lest but\",\n            \"selectable\": False,\n            \"deletable\": False,\n            \"organization_id\": \"<value>\",\n            \"properties\": {\n                \"archived\": {\n                    \"key\": False,\n                },\n                \"files\": [\n                    \"<value>\",\n                ],\n            },\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_updated_post(request={\n        \"type\": \"benefit.updated\",\n        \"data\": {\n            \"created_at\": dateutil.parser.isoparse(\"2025-11-19T14:31:03.333Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2023-08-21T02:54:25.671Z\"),\n            \"id\": \"<value>\",\n            \"type\": \"github_repository\",\n            \"description\": \"merge when gratefully sparse hmph throughout honesty untried gripping um\",\n            \"selectable\": False,\n            \"deletable\": False,\n            \"organization_id\": \"<value>\",\n            \"properties\": {\n                \"repository_owner\": \"polarsource\",\n                \"repository_name\": \"private_repo\",\n                \"permission\": polar_sdk.Permission.PUSH,\n            },\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_created_post(request=polar_sdk.WebhookBenefitGrantCreatedPayload(\n        type=\"benefit_grant.created\",\n        data=polar_sdk.BenefitGrantWebhook(\n            created_at=dateutil.parser.isoparse(\"2025-01-04T13:03:27.870Z\"),\n            modified_at=dateutil.parser.isoparse(\"2023-05-08T00:47:14.556Z\"),\n            id=\"<value>\",\n            is_granted=True,\n            is_revoked=False,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            user_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer={\n                \"created_at\": dateutil.parser.isoparse(\"2025-08-25T12:22:42.430Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2023-03-03T22:39:55.256Z\"),\n                \"id\": \"<value>\",\n                \"metadata\": {\n\n                },\n                \"external_id\": \"<id>\",\n                \"email\": \"Holden_Wilkinson@yahoo.com\",\n                \"email_verified\": False,\n                \"name\": \"<value>\",\n                \"billing_address\": {\n                    \"country\": \"El Salvador\",\n                },\n                \"tax_id\": [\n                    \"<id>\",\n                    \"ae_trn\",\n                    \"is_vat\",\n                ],\n                \"organization_id\": \"<value>\",\n                \"avatar_url\": \"https://frightened-secrecy.biz\",\n            },\n            properties={},\n            benefit={\n                \"created_at\": dateutil.parser.isoparse(\"2023-05-08T00:47:14.556Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2023-02-20T12:28:33.166Z\"),\n                \"id\": \"<value>\",\n                \"type\": \"downloadables\",\n                \"description\": \"ick form ack lest plus worriedly gifted\",\n                \"selectable\": False,\n                \"deletable\": False,\n                \"organization_id\": \"<value>\",\n                \"properties\": {\n                    \"archived\": {\n                        \"key\": False,\n                    },\n                    \"files\": [\n                        \"<value>\",\n                    ],\n                },\n            },\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_revoked_post(request=polar_sdk.WebhookBenefitGrantRevokedPayload(\n        type=\"benefit_grant.revoked\",\n        data=polar_sdk.BenefitGrantWebhook(\n            created_at=dateutil.parser.isoparse(\"2025-03-12T10:35:36.881Z\"),\n            modified_at=dateutil.parser.isoparse(\"2025-04-12T13:10:16.426Z\"),\n            id=\"<value>\",\n            is_granted=True,\n            is_revoked=False,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            user_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer={\n                \"created_at\": dateutil.parser.isoparse(\"2025-03-29T21:56:48.008Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2025-07-18T16:16:40.562Z\"),\n                \"id\": \"<value>\",\n                \"metadata\": {\n\n                },\n                \"external_id\": \"<id>\",\n                \"email\": \"Anita21@hotmail.com\",\n                \"email_verified\": True,\n                \"name\": \"<value>\",\n                \"billing_address\": {\n                    \"country\": \"Poland\",\n                },\n                \"tax_id\": [\n                    \"<id>\",\n                    \"<id>\",\n                    \"au_arn\",\n                ],\n                \"organization_id\": \"<value>\",\n                \"avatar_url\": \"https://bouncy-granny.net\",\n            },\n            properties={\n                \"advertisement_campaign_id\": \"<id>\",\n            },\n            benefit={\n                \"created_at\": dateutil.parser.isoparse(\"2025-04-12T13:10:16.426Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2024-03-08T05:20:11.943Z\"),\n                \"id\": \"<value>\",\n                \"type\": \"downloadables\",\n                \"description\": \"incidentally immense scotch meh quaff generously supposing however ugh kindly\",\n                \"selectable\": False,\n                \"deletable\": False,\n                \"organization_id\": \"<value>\",\n                \"properties\": {\n                    \"archived\": {\n                        \"key\": False,\n                    },\n                    \"files\": [\n                        \"<value>\",\n                    ],\n                },\n            },\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_updated_post(request=polar_sdk.WebhookBenefitGrantUpdatedPayload(\n        type=\"benefit_grant.updated\",\n        data=polar_sdk.BenefitGrantWebhook(\n            created_at=dateutil.parser.isoparse(\"2025-01-02T13:54:42.243Z\"),\n            modified_at=dateutil.parser.isoparse(\"2024-02-25T11:58:59.486Z\"),\n            id=\"<value>\",\n            is_granted=False,\n            is_revoked=False,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            user_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer={\n                \"created_at\": dateutil.parser.isoparse(\"2025-08-08T07:44:28.757Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2024-08-31T04:19:19.970Z\"),\n                \"id\": \"<value>\",\n                \"metadata\": {\n                    \"key\": \"<value>\",\n                    \"key1\": 549371,\n                    \"key2\": 502350,\n                },\n                \"external_id\": \"<id>\",\n                \"email\": \"Yvette.Bins@hotmail.com\",\n                \"email_verified\": False,\n                \"name\": \"<value>\",\n                \"billing_address\": {\n                    \"country\": \"Israel\",\n                },\n                \"tax_id\": [\n                    \"<id>\",\n                ],\n                \"organization_id\": \"<value>\",\n                \"avatar_url\": \"https://teeming-formamide.com/\",\n            },\n            properties={},\n            benefit={\n                \"created_at\": dateutil.parser.isoparse(\"2024-02-25T11:58:59.486Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2025-04-04T12:08:04.168Z\"),\n                \"id\": \"<value>\",\n                \"type\": \"downloadables\",\n                \"description\": \"oil painfully spring requirement import lest to tragic\",\n                \"selectable\": False,\n                \"deletable\": False,\n                \"organization_id\": \"<value>\",\n                \"properties\": {\n                    \"archived\": {\n                        \"key\": False,\n                    },\n                    \"files\": [\n                        \"<value>\",\n                    ],\n                },\n            },\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["checkout.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcheckout_created_post(request=polar_sdk.WebhookCheckoutCreatedPayload(\n        type=\"checkout.created\",\n        data=polar_sdk.Checkout(\n            created_at=dateutil.parser.isoparse(\"2025-11-12T14:26:42.882Z\"),\n            modified_at=dateutil.parser.isoparse(\"2024-05-27T05:08:06.235Z\"),\n            id=\"<value>\",\n            payment_processor=polar_sdk.PaymentProcessor.STRIPE,\n            status=polar_sdk.CheckoutStatus.FAILED,\n            client_secret=\"<value>\",\n            url=\"https://heavy-beret.com/\",\n            expires_at=dateutil.parser.isoparse(\"2023-02-25T02:26:48.460Z\"),\n            success_url=\"https://sardonic-final.info/\",\n            embed_origin=\"<value>\",\n            amount=962818,\n            tax_amount=6400,\n            currency=\"Yen\",\n            subtotal_amount=648726,\n            total_amount=210702,\n            product_id=\"<value>\",\n            product_price_id=\"<value>\",\n            discount_id=\"<value>\",\n            allow_discount_codes=True,\n            is_discount_applicable=False,\n            is_free_product_price=False,\n            is_payment_required=False,\n            is_payment_setup_required=False,\n            is_payment_form_required=False,\n            customer_id=\"<value>\",\n            customer_name=\"<value>\",\n            customer_email=\"<value>\",\n            customer_ip_address=\"<value>\",\n            customer_billing_address={\n                \"country\": \"Solomon Islands\",\n            },\n            customer_tax_id=\"<id>\",\n            payment_processor_metadata={\n                \"key\": \"<value>\",\n                \"key1\": \"<value>\",\n                \"key2\": \"<value>\",\n            },\n            metadata={\n                \"key\": \"<value>\",\n            },\n            products=[\n                {\n                    \"created_at\": dateutil.parser.isoparse(\"2024-02-27T04:46:39.621Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2024-02-07T04:30:48.802Z\"),\n                    \"id\": \"<value>\",\n                    \"name\": \"<value>\",\n                    \"description\": \"really capitalize um restructure prickly rationale certainly these restfully\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    \"is_recurring\": True,\n                    \"is_archived\": False,\n                    \"organization_id\": \"<value>\",\n                    \"prices\": [\n                        {\n                            \"created_at\": dateutil.parser.isoparse(\"2025-11-19T15:59:15.588Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2023-11-17T00:11:23.972Z\"),\n                            \"id\": \"<value>\",\n                            \"amount_type\": \"custom\",\n                            \"is_archived\": False,\n                            \"product_id\": \"<value>\",\n                            \"type\": polar_sdk.ProductPriceType.ONE_TIME,\n                            \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                            \"price_currency\": \"<value>\",\n                            \"minimum_amount\": 82334,\n                            \"maximum_amount\": 50275,\n                            \"preset_amount\": 473871,\n                        },\n                    ],\n                    \"benefits\": [\n                        {\n                            \"created_at\": dateutil.parser.isoparse(\"2025-10-01T00:10:58.922Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2023-01-30T18:58:55.355Z\"),\n                            \"id\": \"<value>\",\n                            \"type\": polar_sdk.BenefitType.GITHUB_REPOSITORY,\n                            \"description\": \"via archaeology scientific forsaken who suspiciously mmm bleak\",\n                            \"selectable\": True,\n                            \"deletable\": False,\n                            \"organization_id\": \"<value>\",\n                        },\n                    ],\n                    \"medias\": [\n                        {\n                            \"id\": \"<value>\",\n                            \"organization_id\": \"<value>\",\n                            \"name\": \"<value>\",\n                            \"path\": \"/usr/include\",\n                            \"mime_type\": \"<value>\",\n                            \"size\": 169862,\n                            \"storage_version\": \"<value>\",\n                            \"checksum_etag\": \"<value>\",\n                            \"checksum_sha256_base64\": \"<value>\",\n                            \"checksum_sha256_hex\": \"<value>\",\n                            \"last_modified_at\": dateutil.parser.isoparse(\"2023-06-26T19:30:29.818Z\"),\n                            \"version\": \"<value>\",\n                            \"service\": \"product_media\",\n                            \"is_uploaded\": True,\n                            \"created_at\": dateutil.parser.isoparse(\"2024-10-05T17:30:08.836Z\"),\n                            \"size_readable\": \"<value>\",\n                            \"public_url\": \"https://spanish-essence.name\",\n                        },\n                        {\n                            \"id\": \"<value>\",\n                            \"organization_id\": \"<value>\",\n                            \"name\": \"<value>\",\n                            \"path\": \"/etc/mail\",\n                            \"mime_type\": \"<value>\",\n                            \"size\": 852701,\n                            \"storage_version\": \"<value>\",\n                            \"checksum_etag\": \"<value>\",\n                            \"checksum_sha256_base64\": \"<value>\",\n                            \"checksum_sha256_hex\": \"<value>\",\n                            \"last_modified_at\": dateutil.parser.isoparse(\"2025-01-15T00:45:10.927Z\"),\n                            \"version\": \"<value>\",\n                            \"service\": \"product_media\",\n                            \"is_uploaded\": False,\n                            \"created_at\": dateutil.parser.isoparse(\"2023-01-18T00:51:17.880Z\"),\n                            \"size_readable\": \"<value>\",\n                            \"public_url\": \"https://best-pharmacopoeia.org/\",\n                        },\n                    ],\n                },\n                {\n                    \"created_at\": dateutil.parser.isoparse(\"2024-03-12T06:20:21.161Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2024-06-27T20:20:27.400Z\"),\n                    \"id\": \"<value>\",\n                    \"name\": \"<value>\",\n                    \"description\": \"since hollow massive offensively painfully what questionably destock pish\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    \"is_recurring\": True,\n                    \"is_archived\": False,\n                    \"organization_id\": \"<value>\",\n                    \"prices\": [\n                        {\n                            \"created_at\": dateutil.parser.isoparse(\"2024-04-03T00:20:23.805Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2025-11-21T05:56:48.487Z\"),\n                            \"id\": \"<value>\",\n                            \"amount_type\": \"fixed\",\n                            \"is_archived\": False,\n                            \"product_id\": \"<value>\",\n                            \"type\": polar_sdk.ProductPriceType.ONE_TIME,\n                            \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                            \"price_currency\": \"<value>\",\n                            \"price_amount\": 648726,\n                        },\n                        {\n                            \"created_at\": dateutil.parser.isoparse(\"2025-04-20T22:18:45.464Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2024-10-18T10:45:47.767Z\"),\n                            \"id\": \"<value>\",\n                            \"amount_type\": \"fixed\",\n                            \"is_archived\": False,\n                            \"product_id\": \"<value>\",\n                            \"type\": \"recurring\",\n                            \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                            \"price_currency\": \"<value>\",\n                            \"price_amount\": 688646,\n                            \"legacy\": True,\n                        },\n                    ],\n                    \"benefits\": [\n\n                    ],\n                    \"medias\": [\n                        {\n                            \"id\": \"<value>\",\n                            \"organization_id\": \"<value>\",\n                            \"name\": \"<value>\",\n                            \"path\": \"/etc/namedb\",\n                            \"mime_type\": \"<value>\",\n                            \"size\": 721019,\n                            \"storage_version\": \"<value>\",\n                            \"checksum_etag\": \"<value>\",\n                            \"checksum_sha256_base64\": \"<value>\",\n                            \"checksum_sha256_hex\": \"<value>\",\n                            \"last_modified_at\": dateutil.parser.isoparse(\"2024-01-18T04:40:39.968Z\"),\n                            \"version\": \"<value>\",\n                            \"service\": \"product_media\",\n                            \"is_uploaded\": False,\n                            \"created_at\": dateutil.parser.isoparse(\"2023-09-29T18:20:07.088Z\"),\n                            \"size_readable\": \"<value>\",\n                            \"public_url\": \"https://similar-impostor.info/\",\n                        },\n                        {\n                            \"id\": \"<value>\",\n                            \"organization_id\": \"<value>\",\n                            \"name\": \"<value>\",\n                            \"path\": \"/root\",\n                            \"mime_type\": \"<value>\",\n                            \"size\": 907325,\n                            \"storage_version\": \"<value>\",\n                            \"checksum_etag\": \"<value>\",\n                            \"checksum_sha256_base64\": \"<value>\",\n                            \"checksum_sha256_hex\": \"<value>\",\n                            \"last_modified_at\": dateutil.parser.isoparse(\"2023-02-26T14:50:51.751Z\"),\n                            \"version\": \"<value>\",\n                            \"service\": \"product_media\",\n                            \"is_uploaded\": False,\n                            \"created_at\": dateutil.parser.isoparse(\"2025-03-01T12:36:21.395Z\"),\n                            \"size_readable\": \"<value>\",\n                            \"public_url\": \"https://thin-illusion.org/\",\n                        },\n                    ],\n                },\n            ],\n            product={\n                \"created_at\": dateutil.parser.isoparse(\"2023-09-09T02:18:18.878Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2025-12-30T17:25:31.182Z\"),\n                \"id\": \"<value>\",\n                \"name\": \"<value>\",\n                \"description\": \"roundabout gah oh hm over\",\n                \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                \"is_recurring\": False,\n                \"is_archived\": False,\n                \"organization_id\": \"<value>\",\n                \"prices\": [\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2025-07-31T13:25:31.669Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2023-11-12T09:40:10.044Z\"),\n                        \"id\": \"<value>\",\n                        \"amount_type\": \"free\",\n                        \"is_archived\": False,\n                        \"product_id\": \"<value>\",\n                        \"type\": polar_sdk.ProductPriceType.ONE_TIME,\n                        \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    },\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2025-06-25T22:47:14.264Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2025-01-27T19:10:37.564Z\"),\n                        \"id\": \"<value>\",\n                        \"amount_type\": \"fixed\",\n                        \"is_archived\": False,\n                        \"product_id\": \"<value>\",\n                        \"type\": \"recurring\",\n                        \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        \"price_currency\": \"<value>\",\n                        \"price_amount\": 18677,\n                        \"legacy\": True,\n                    },\n                ],\n                \"benefits\": [\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2024-05-22T12:15:14.230Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2025-05-10T15:49:09.927Z\"),\n                        \"id\": \"<value>\",\n                        \"type\": polar_sdk.BenefitType.DOWNLOADABLES,\n                        \"description\": \"consequently pant ha\",\n                        \"selectable\": True,\n                        \"deletable\": True,\n                        \"organization_id\": \"<value>\",\n                    },\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2024-09-05T11:03:30.226Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2024-10-27T06:30:15.454Z\"),\n                        \"id\": \"<value>\",\n                        \"type\": polar_sdk.BenefitType.ADS,\n                        \"description\": \"failing clonk kowtow kookily sunbathe ugh delirious now boohoo lean\",\n                        \"selectable\": False,\n                        \"deletable\": False,\n                        \"organization_id\": \"<value>\",\n                    },\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2024-04-20T16:45:08.626Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2025-10-27T21:24:45.236Z\"),\n                        \"id\": \"<value>\",\n                        \"type\": polar_sdk.BenefitType.DISCORD,\n                        \"description\": \"until tenderly chapel quantify optimistically excluding aw because amongst emulsify\",\n                        \"selectable\": False,\n                        \"deletable\": False,\n                        \"organization_id\": \"<value>\",\n                    },\n                ],\n                \"medias\": [\n                    {\n                        \"id\": \"<value>\",\n                        \"organization_id\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"path\": \"/etc/ppp\",\n                        \"mime_type\": \"<value>\",\n                        \"size\": 933572,\n                        \"storage_version\": \"<value>\",\n                        \"checksum_etag\": \"<value>\",\n                        \"checksum_sha256_base64\": \"<value>\",\n                        \"checksum_sha256_hex\": \"<value>\",\n                        \"last_modified_at\": dateutil.parser.isoparse(\"2025-12-28T08:49:03.364Z\"),\n                        \"version\": \"<value>\",\n                        \"service\": \"product_media\",\n                        \"is_uploaded\": False,\n                        \"created_at\": dateutil.parser.isoparse(\"2024-07-14T04:00:39.280Z\"),\n                        \"size_readable\": \"<value>\",\n                        \"public_url\": \"https://back-pear.name/\",\n                    },\n                ],\n            },\n            product_price={\n                \"created_at\": dateutil.parser.isoparse(\"2023-04-02T00:05:42.586Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2024-12-15T03:02:38.803Z\"),\n                \"id\": \"<value>\",\n                \"amount_type\": \"fixed\",\n                \"is_archived\": False,\n                \"product_id\": \"<value>\",\n                \"type\": polar_sdk.ProductPriceType.RECURRING,\n                \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                \"price_currency\": \"<value>\",\n                \"price_amount\": 825463,\n            },\n            discount={\n                \"duration\": polar_sdk.DiscountDuration.REPEATING,\n                \"duration_in_months\": 41338,\n                \"type\": polar_sdk.DiscountType.PERCENTAGE,\n                \"basis_points\": 818655,\n                \"id\": \"<value>\",\n                \"name\": \"<value>\",\n                \"code\": \"<value>\",\n            },\n            subscription_id=\"<value>\",\n            attached_custom_fields=[\n                {\n                    \"custom_field_id\": \"<value>\",\n                    \"custom_field\": {\n                        \"created_at\": dateutil.parser.isoparse(\"2023-01-09T04:38:53.436Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2024-12-24T07:52:43.518Z\"),\n                        \"id\": \"<value>\",\n                        \"metadata\": {\n                            \"key\": \"<value>\",\n                        },\n                        \"type\": \"select\",\n                        \"slug\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"organization_id\": \"<value>\",\n                        \"properties\": {\n                            \"options\": [\n                                {\n                                    \"value\": \"<value>\",\n                                    \"label\": \"<value>\",\n                                },\n                            ],\n                        },\n                    },\n                    \"order\": 552387,\n                    \"required\": False,\n                },\n                {\n                    \"custom_field_id\": \"<value>\",\n                    \"custom_field\": {\n                        \"created_at\": dateutil.parser.isoparse(\"2024-04-28T02:33:08.095Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2025-07-27T09:28:36.892Z\"),\n                        \"id\": \"<value>\",\n                        \"metadata\": {\n                            \"key\": \"<value>\",\n                        },\n                        \"type\": \"checkbox\",\n                        \"slug\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"organization_id\": \"<value>\",\n                        \"properties\": {},\n                    },\n                    \"order\": 576333,\n                    \"required\": False,\n                },\n            ],\n            customer_metadata={\n                \"key\": 667273,\n            },\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["checkout.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcheckout_updated_post(request=polar_sdk.WebhookCheckoutUpdatedPayload(\n        type=\"checkout.updated\",\n        data=polar_sdk.Checkout(\n            created_at=dateutil.parser.isoparse(\"2025-10-04T13:06:10.658Z\"),\n            modified_at=dateutil.parser.isoparse(\"2024-10-02T21:25:15.366Z\"),\n            id=\"<value>\",\n            payment_processor=polar_sdk.PaymentProcessor.STRIPE,\n            status=polar_sdk.CheckoutStatus.FAILED,\n            client_secret=\"<value>\",\n            url=\"https://square-cafe.biz/\",\n            expires_at=dateutil.parser.isoparse(\"2025-03-25T08:55:11.873Z\"),\n            success_url=\"https://physical-import.name/\",\n            embed_origin=\"<value>\",\n            amount=245418,\n            tax_amount=624213,\n            currency=\"Naira\",\n            subtotal_amount=24587,\n            total_amount=447013,\n            product_id=\"<value>\",\n            product_price_id=\"<value>\",\n            discount_id=\"<value>\",\n            allow_discount_codes=True,\n            is_discount_applicable=True,\n            is_free_product_price=True,\n            is_payment_required=False,\n            is_payment_setup_required=False,\n            is_payment_form_required=True,\n            customer_id=\"<value>\",\n            customer_name=\"<value>\",\n            customer_email=\"<value>\",\n            customer_ip_address=\"<value>\",\n            customer_billing_address={\n                \"country\": \"Zambia\",\n            },\n            customer_tax_id=\"<id>\",\n            payment_processor_metadata={\n                \"key\": \"<value>\",\n            },\n            metadata={\n\n            },\n            products=[\n                {\n                    \"created_at\": dateutil.parser.isoparse(\"2024-03-12T12:25:44.387Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2024-03-10T17:45:08.857Z\"),\n                    \"id\": \"<value>\",\n                    \"name\": \"<value>\",\n                    \"description\": \"on likewise growing capsize lest overcook vice independence strategy magnetize\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    \"is_recurring\": False,\n                    \"is_archived\": False,\n                    \"organization_id\": \"<value>\",\n                    \"prices\": [\n\n                    ],\n                    \"benefits\": [\n                        {\n                            \"created_at\": dateutil.parser.isoparse(\"2023-02-02T21:51:07.680Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2025-02-22T05:03:37.259Z\"),\n                            \"id\": \"<value>\",\n                            \"type\": polar_sdk.BenefitType.GITHUB_REPOSITORY,\n                            \"description\": \"kiddingly likewise inveigle\",\n                            \"selectable\": True,\n                            \"deletable\": False,\n                            \"organization_id\": \"<value>\",\n                        },\n                        {\n                            \"created_at\": dateutil.parser.isoparse(\"2024-03-23T22:28:05.345Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2025-04-30T11:01:37.991Z\"),\n                            \"id\": \"<value>\",\n                            \"type\": polar_sdk.BenefitType.LICENSE_KEYS,\n                            \"description\": \"repeatedly perky capsize shred loudly though whoever millet\",\n                            \"selectable\": False,\n                            \"deletable\": False,\n                            \"organization_id\": \"<value>\",\n                        },\n                    ],\n                    \"medias\": [\n                        {\n                            \"id\": \"<value>\",\n                            \"organization_id\": \"<value>\",\n                            \"name\": \"<value>\",\n                            \"path\": \"/home\",\n                            \"mime_type\": \"<value>\",\n                            \"size\": 339556,\n                            \"storage_version\": \"<value>\",\n                            \"checksum_etag\": \"<value>\",\n                            \"checksum_sha256_base64\": \"<value>\",\n                            \"checksum_sha256_hex\": \"<value>\",\n                            \"last_modified_at\": dateutil.parser.isoparse(\"2024-09-01T01:36:50.867Z\"),\n                            \"version\": \"<value>\",\n                            \"service\": \"product_media\",\n                            \"is_uploaded\": False,\n                            \"created_at\": dateutil.parser.isoparse(\"2025-06-17T05:19:25.570Z\"),\n                            \"size_readable\": \"<value>\",\n                            \"public_url\": \"https://forceful-peninsula.name/\",\n                        },\n                    ],\n                },\n                {\n                    \"created_at\": dateutil.parser.isoparse(\"2023-01-07T16:39:06.170Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2024-07-02T04:06:47.300Z\"),\n                    \"id\": \"<value>\",\n                    \"name\": \"<value>\",\n                    \"description\": \"ruin wiggly abaft\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    \"is_recurring\": False,\n                    \"is_archived\": False,\n                    \"organization_id\": \"<value>\",\n                    \"prices\": [\n\n                    ],\n                    \"benefits\": [\n                        {\n                            \"created_at\": dateutil.parser.isoparse(\"2023-01-13T15:01:23.486Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2025-01-22T18:51:34.092Z\"),\n                            \"id\": \"<value>\",\n                            \"type\": polar_sdk.BenefitType.DISCORD,\n                            \"description\": \"that resource whoa scarcely\",\n                            \"selectable\": True,\n                            \"deletable\": True,\n                            \"organization_id\": \"<value>\",\n                        },\n                        {\n                            \"created_at\": dateutil.parser.isoparse(\"2025-10-31T20:58:36.719Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2025-11-05T11:15:53.647Z\"),\n                            \"id\": \"<value>\",\n                            \"type\": polar_sdk.BenefitType.CUSTOM,\n                            \"description\": \"recovery queasily despite concrete independence celsius ouch\",\n                            \"selectable\": True,\n                            \"deletable\": True,\n                            \"organization_id\": \"<value>\",\n                        },\n                    ],\n                    \"medias\": [\n                        {\n                            \"id\": \"<value>\",\n                            \"organization_id\": \"<value>\",\n                            \"name\": \"<value>\",\n                            \"path\": \"/boot\",\n                            \"mime_type\": \"<value>\",\n                            \"size\": 913510,\n                            \"storage_version\": \"<value>\",\n                            \"checksum_etag\": \"<value>\",\n                            \"checksum_sha256_base64\": \"<value>\",\n                            \"checksum_sha256_hex\": \"<value>\",\n                            \"last_modified_at\": dateutil.parser.isoparse(\"2023-09-10T21:22:45.561Z\"),\n                            \"version\": \"<value>\",\n                            \"service\": \"product_media\",\n                            \"is_uploaded\": False,\n                            \"created_at\": dateutil.parser.isoparse(\"2023-05-08T03:57:28.293Z\"),\n                            \"size_readable\": \"<value>\",\n                            \"public_url\": \"https://stable-fort.org\",\n                        },\n                        {\n                            \"id\": \"<value>\",\n                            \"organization_id\": \"<value>\",\n                            \"name\": \"<value>\",\n                            \"path\": \"/System\",\n                            \"mime_type\": \"<value>\",\n                            \"size\": 604454,\n                            \"storage_version\": \"<value>\",\n                            \"checksum_etag\": \"<value>\",\n                            \"checksum_sha256_base64\": \"<value>\",\n                            \"checksum_sha256_hex\": \"<value>\",\n                            \"last_modified_at\": dateutil.parser.isoparse(\"2024-05-15T10:29:39.214Z\"),\n                            \"version\": \"<value>\",\n                            \"service\": \"product_media\",\n                            \"is_uploaded\": True,\n                            \"created_at\": dateutil.parser.isoparse(\"2024-01-19T16:36:20.955Z\"),\n                            \"size_readable\": \"<value>\",\n                            \"public_url\": \"https://simplistic-simple.biz\",\n                        },\n                    ],\n                },\n                {\n                    \"created_at\": dateutil.parser.isoparse(\"2024-04-10T05:20:18.358Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2023-06-22T09:12:37.578Z\"),\n                    \"id\": \"<value>\",\n                    \"name\": \"<value>\",\n                    \"description\": \"yesterday bleakly sheathe yawningly tinted untrue\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    \"is_recurring\": True,\n                    \"is_archived\": False,\n                    \"organization_id\": \"<value>\",\n                    \"prices\": [\n                        {\n                            \"created_at\": dateutil.parser.isoparse(\"2025-10-20T04:48:05.954Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2024-03-12T21:45:21.173Z\"),\n                            \"id\": \"<value>\",\n                            \"amount_type\": \"custom\",\n                            \"is_archived\": False,\n                            \"product_id\": \"<value>\",\n                            \"type\": polar_sdk.ProductPriceType.RECURRING,\n                            \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                            \"price_currency\": \"<value>\",\n                            \"minimum_amount\": 316079,\n                            \"maximum_amount\": 743040,\n                            \"preset_amount\": 306145,\n                        },\n                        {\n                            \"created_at\": dateutil.parser.isoparse(\"2024-10-03T07:55:07.025Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2023-09-26T23:29:16.889Z\"),\n                            \"id\": \"<value>\",\n                            \"amount_type\": \"custom\",\n                            \"is_archived\": False,\n                            \"product_id\": \"<value>\",\n                            \"type\": polar_sdk.ProductPriceType.RECURRING,\n                            \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                            \"price_currency\": \"<value>\",\n                            \"minimum_amount\": 24587,\n                            \"maximum_amount\": 447013,\n                            \"preset_amount\": 371362,\n                        },\n                        {\n                            \"created_at\": dateutil.parser.isoparse(\"2025-08-02T14:33:19.677Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2024-11-17T10:36:50.593Z\"),\n                            \"id\": \"<value>\",\n                            \"amount_type\": \"custom\",\n                            \"is_archived\": False,\n                            \"product_id\": \"<value>\",\n                            \"type\": \"recurring\",\n                            \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                            \"price_currency\": \"<value>\",\n                            \"minimum_amount\": 995460,\n                            \"maximum_amount\": 461061,\n                            \"preset_amount\": 134244,\n                            \"legacy\": True,\n                        },\n                    ],\n                    \"benefits\": [\n                        {\n                            \"created_at\": dateutil.parser.isoparse(\"2024-07-07T23:56:09.903Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2024-09-12T11:04:17.318Z\"),\n                            \"id\": \"<value>\",\n                            \"type\": polar_sdk.BenefitType.ADS,\n                            \"description\": \"knottily huzzah ick\",\n                            \"selectable\": True,\n                            \"deletable\": False,\n                            \"organization_id\": \"<value>\",\n                        },\n                        {\n                            \"created_at\": dateutil.parser.isoparse(\"2024-02-14T16:02:41.163Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2023-04-28T06:23:40.197Z\"),\n                            \"id\": \"<value>\",\n                            \"type\": polar_sdk.BenefitType.DISCORD,\n                            \"description\": \"before inasmuch appreciate\",\n                            \"selectable\": True,\n                            \"deletable\": False,\n                            \"organization_id\": \"<value>\",\n                        },\n                    ],\n                    \"medias\": [\n                        {\n                            \"id\": \"<value>\",\n                            \"organization_id\": \"<value>\",\n                            \"name\": \"<value>\",\n                            \"path\": \"/usr/sbin\",\n                            \"mime_type\": \"<value>\",\n                            \"size\": 165243,\n                            \"storage_version\": \"<value>\",\n                            \"checksum_etag\": \"<value>\",\n                            \"checksum_sha256_base64\": \"<value>\",\n                            \"checksum_sha256_hex\": \"<value>\",\n                            \"last_modified_at\": dateutil.parser.isoparse(\"2024-06-20T00:42:56.885Z\"),\n                            \"version\": \"<value>\",\n                            \"service\": \"product_media\",\n                            \"is_uploaded\": True,\n                            \"created_at\": dateutil.parser.isoparse(\"2024-06-03T23:30:54.188Z\"),\n                            \"size_readable\": \"<value>\",\n                            \"public_url\": \"https://pleasing-provider.biz\",\n                        },\n                    ],\n                },\n            ],\n            product={\n                \"created_at\": dateutil.parser.isoparse(\"2025-03-02T07:44:00.713Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2024-11-07T21:48:42.673Z\"),\n                \"id\": \"<value>\",\n                \"name\": \"<value>\",\n                \"description\": \"recommendation soupy tuxedo emboss unlike inscribe frankly zowie um\",\n                \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                \"is_recurring\": True,\n                \"is_archived\": False,\n                \"organization_id\": \"<value>\",\n                \"prices\": [\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2024-03-10T17:45:08.857Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2025-08-21T20:24:37.634Z\"),\n                        \"id\": \"<value>\",\n                        \"amount_type\": \"custom\",\n                        \"is_archived\": False,\n                        \"product_id\": \"<value>\",\n                        \"type\": polar_sdk.ProductPriceType.ONE_TIME,\n                        \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        \"price_currency\": \"<value>\",\n                        \"minimum_amount\": 688507,\n                        \"maximum_amount\": 907403,\n                        \"preset_amount\": 166544,\n                    },\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2025-05-08T16:44:17.277Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2023-12-03T09:52:08.965Z\"),\n                        \"id\": \"<value>\",\n                        \"amount_type\": \"fixed\",\n                        \"is_archived\": False,\n                        \"product_id\": \"<value>\",\n                        \"type\": \"recurring\",\n                        \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        \"price_currency\": \"<value>\",\n                        \"price_amount\": 751656,\n                        \"legacy\": True,\n                    },\n                ],\n                \"benefits\": [\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2023-08-11T22:46:57.443Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2023-04-27T10:34:15.837Z\"),\n                        \"id\": \"<value>\",\n                        \"type\": polar_sdk.BenefitType.GITHUB_REPOSITORY,\n                        \"description\": \"of sit jut\",\n                        \"selectable\": True,\n                        \"deletable\": False,\n                        \"organization_id\": \"<value>\",\n                    },\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2024-08-22T01:13:57.044Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2025-09-18T08:20:48.636Z\"),\n                        \"id\": \"<value>\",\n                        \"type\": polar_sdk.BenefitType.DOWNLOADABLES,\n                        \"description\": \"relative curiously grim to\",\n                        \"selectable\": False,\n                        \"deletable\": False,\n                        \"organization_id\": \"<value>\",\n                    },\n                ],\n                \"medias\": [\n                    {\n                        \"id\": \"<value>\",\n                        \"organization_id\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"path\": \"/home/user\",\n                        \"mime_type\": \"<value>\",\n                        \"size\": 558866,\n                        \"storage_version\": \"<value>\",\n                        \"checksum_etag\": \"<value>\",\n                        \"checksum_sha256_base64\": \"<value>\",\n                        \"checksum_sha256_hex\": \"<value>\",\n                        \"last_modified_at\": dateutil.parser.isoparse(\"2023-07-21T12:30:10.295Z\"),\n                        \"version\": \"<value>\",\n                        \"service\": \"product_media\",\n                        \"is_uploaded\": False,\n                        \"created_at\": dateutil.parser.isoparse(\"2023-11-12T16:29:20.536Z\"),\n                        \"size_readable\": \"<value>\",\n                        \"public_url\": \"https://silver-contractor.org\",\n                    },\n                    {\n                        \"id\": \"<value>\",\n                        \"organization_id\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"path\": \"/usr/ports\",\n                        \"mime_type\": \"<value>\",\n                        \"size\": 934999,\n                        \"storage_version\": \"<value>\",\n                        \"checksum_etag\": \"<value>\",\n                        \"checksum_sha256_base64\": \"<value>\",\n                        \"checksum_sha256_hex\": \"<value>\",\n                        \"last_modified_at\": dateutil.parser.isoparse(\"2025-09-19T02:05:47.978Z\"),\n                        \"version\": \"<value>\",\n                        \"service\": \"product_media\",\n                        \"is_uploaded\": True,\n                        \"created_at\": dateutil.parser.isoparse(\"2023-04-19T21:25:09.653Z\"),\n                        \"size_readable\": \"<value>\",\n                        \"public_url\": \"https://ashamed-platter.com\",\n                    },\n                ],\n            },\n            product_price={\n                \"created_at\": dateutil.parser.isoparse(\"2024-04-13T13:45:30.435Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2025-12-31T21:16:51.807Z\"),\n                \"id\": \"<value>\",\n                \"amount_type\": \"free\",\n                \"is_archived\": False,\n                \"product_id\": \"<value>\",\n                \"type\": \"recurring\",\n                \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                \"legacy\": True,\n            },\n            discount={\n                \"duration\": polar_sdk.DiscountDuration.FOREVER,\n                \"type\": polar_sdk.DiscountType.PERCENTAGE,\n                \"basis_points\": 701511,\n                \"id\": \"<value>\",\n                \"name\": \"<value>\",\n                \"code\": \"<value>\",\n            },\n            subscription_id=\"<value>\",\n            attached_custom_fields=[\n                {\n                    \"custom_field_id\": \"<value>\",\n                    \"custom_field\": {\n                        \"created_at\": dateutil.parser.isoparse(\"2025-06-06T19:17:28.589Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2025-02-23T18:15:44.994Z\"),\n                        \"id\": \"<value>\",\n                        \"metadata\": {\n                            \"key\": 343034,\n                        },\n                        \"type\": \"date\",\n                        \"slug\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"organization_id\": \"<value>\",\n                        \"properties\": {},\n                    },\n                    \"order\": 177975,\n                    \"required\": False,\n                },\n                {\n                    \"custom_field_id\": \"<value>\",\n                    \"custom_field\": {\n                        \"created_at\": dateutil.parser.isoparse(\"2023-01-18T13:42:58.942Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2025-09-27T11:53:33.602Z\"),\n                        \"id\": \"<value>\",\n                        \"metadata\": {\n                            \"key\": 388366,\n                        },\n                        \"type\": \"number\",\n                        \"slug\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"organization_id\": \"<value>\",\n                        \"properties\": {},\n                    },\n                    \"order\": 492106,\n                    \"required\": True,\n                },\n            ],\n            customer_metadata={\n                \"key\": 354923,\n            },\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_created_post(request=polar_sdk.WebhookOrderCreatedPayload(\n        type=\"order.created\",\n        data=polar_sdk.Order(\n            created_at=dateutil.parser.isoparse(\"2024-11-11T12:46:15.007Z\"),\n            modified_at=dateutil.parser.isoparse(\"2024-03-23T03:54:38.261Z\"),\n            id=\"<value>\",\n            metadata={\n                \"key\": \"<value>\",\n                \"key1\": \"<value>\",\n            },\n            status=\"<value>\",\n            amount=485666,\n            tax_amount=81588,\n            refunded_amount=605593,\n            refunded_tax_amount=738083,\n            currency=\"Jamaican Dollar\",\n            billing_reason=polar_sdk.OrderBillingReason.PURCHASE,\n            billing_address={\n                \"country\": \"Maldives\",\n            },\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            product_price_id=\"<value>\",\n            discount_id=\"<value>\",\n            subscription_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer={\n                \"created_at\": dateutil.parser.isoparse(\"2025-09-23T11:59:51.286Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2025-12-14T00:30:10.871Z\"),\n                \"id\": \"<value>\",\n                \"metadata\": {\n                    \"key\": \"<value>\",\n                    \"key1\": \"<value>\",\n                    \"key2\": 386855,\n                },\n                \"external_id\": \"<id>\",\n                \"email\": \"Austin65@gmail.com\",\n                \"email_verified\": False,\n                \"name\": \"<value>\",\n                \"billing_address\": {\n                    \"country\": \"Hong Kong\",\n                },\n                \"tax_id\": [\n                    \"no_vat\",\n                    \"<id>\",\n                ],\n                \"organization_id\": \"<value>\",\n                \"avatar_url\": \"https://darling-kit.org\",\n            },\n            user_id=\"<value>\",\n            user={\n                \"id\": \"<value>\",\n                \"email\": \"Delphine_Weber@hotmail.com\",\n                \"public_name\": \"<value>\",\n            },\n            product={\n                \"created_at\": dateutil.parser.isoparse(\"2025-12-27T14:05:37.748Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2025-01-01T22:00:53.940Z\"),\n                \"id\": \"<value>\",\n                \"name\": \"<value>\",\n                \"description\": \"circle colorize given\",\n                \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                \"is_recurring\": True,\n                \"is_archived\": False,\n                \"organization_id\": \"<value>\",\n            },\n            product_price={\n                \"created_at\": dateutil.parser.isoparse(\"2025-03-27T08:15:55.821Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2023-11-08T15:41:27.758Z\"),\n                \"id\": \"<value>\",\n                \"amount_type\": \"custom\",\n                \"is_archived\": False,\n                \"product_id\": \"<value>\",\n                \"type\": polar_sdk.ProductPriceType.ONE_TIME,\n                \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                \"price_currency\": \"<value>\",\n                \"minimum_amount\": 81588,\n                \"maximum_amount\": 605593,\n                \"preset_amount\": 738083,\n            },\n            discount={\n                \"duration\": polar_sdk.DiscountDuration.REPEATING,\n                \"type\": polar_sdk.DiscountType.FIXED,\n                \"amount\": 228282,\n                \"currency\": \"Baht\",\n                \"created_at\": dateutil.parser.isoparse(\"2023-04-06T06:29:00.267Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2023-03-01T18:48:46.167Z\"),\n                \"id\": \"<value>\",\n                \"metadata\": {\n                    \"key\": \"<value>\",\n                    \"key1\": \"<value>\",\n                    \"key2\": \"<value>\",\n                },\n                \"name\": \"<value>\",\n                \"code\": \"<value>\",\n                \"starts_at\": dateutil.parser.isoparse(\"2023-12-14T21:08:51.727Z\"),\n                \"ends_at\": dateutil.parser.isoparse(\"2023-08-24T00:05:31.570Z\"),\n                \"max_redemptions\": 133794,\n                \"redemptions_count\": 558400,\n                \"organization_id\": \"<value>\",\n            },\n            subscription={\n                \"metadata\": {\n                    \"key\": 838937,\n                    \"key1\": True,\n                },\n                \"created_at\": dateutil.parser.isoparse(\"2025-05-09T06:10:47.548Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2025-02-13T18:51:37.875Z\"),\n                \"id\": \"<value>\",\n                \"amount\": 420337,\n                \"currency\": \"New Zealand Dollar\",\n                \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                \"status\": polar_sdk.SubscriptionStatus.INCOMPLETE,\n                \"current_period_start\": dateutil.parser.isoparse(\"2025-12-01T13:27:57.927Z\"),\n                \"current_period_end\": dateutil.parser.isoparse(\"2023-06-23T18:54:19.334Z\"),\n                \"cancel_at_period_end\": False,\n                \"canceled_at\": dateutil.parser.isoparse(\"2024-11-15T11:53:36.436Z\"),\n                \"started_at\": dateutil.parser.isoparse(\"2025-11-18T03:47:21.756Z\"),\n                \"ends_at\": dateutil.parser.isoparse(\"2023-02-02T12:07:22.717Z\"),\n                \"ended_at\": dateutil.parser.isoparse(\"2023-02-15T16:05:22.828Z\"),\n                \"customer_id\": \"<value>\",\n                \"product_id\": \"<value>\",\n                \"price_id\": \"<value>\",\n                \"discount_id\": \"<value>\",\n                \"checkout_id\": \"<value>\",\n                \"customer_cancellation_reason\": polar_sdk.CustomerCancellationReason.SWITCHED_SERVICE,\n                \"customer_cancellation_comment\": \"<value>\",\n                \"user_id\": \"<value>\",\n            },\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.refunded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_refunded_post(request=polar_sdk.WebhookOrderRefundedPayload(\n        type=\"order.refunded\",\n        data=polar_sdk.Order(\n            created_at=dateutil.parser.isoparse(\"2023-01-02T23:38:59.363Z\"),\n            modified_at=dateutil.parser.isoparse(\"2025-02-28T12:31:35.473Z\"),\n            id=\"<value>\",\n            metadata={\n                \"key\": True,\n                \"key1\": True,\n                \"key2\": \"<value>\",\n            },\n            status=\"<value>\",\n            amount=528865,\n            tax_amount=824083,\n            refunded_amount=158895,\n            refunded_tax_amount=509231,\n            currency=\"US Dollar\",\n            billing_reason=polar_sdk.OrderBillingReason.SUBSCRIPTION_UPDATE,\n            billing_address={\n                \"country\": \"Mozambique\",\n            },\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            product_price_id=\"<value>\",\n            discount_id=\"<value>\",\n            subscription_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer={\n                \"created_at\": dateutil.parser.isoparse(\"2023-06-06T13:40:41.280Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2023-12-12T14:47:44.609Z\"),\n                \"id\": \"<value>\",\n                \"metadata\": {\n                    \"key\": \"<value>\",\n                    \"key1\": True,\n                },\n                \"external_id\": \"<id>\",\n                \"email\": \"Bryce.Schmitt@yahoo.com\",\n                \"email_verified\": True,\n                \"name\": \"<value>\",\n                \"billing_address\": {\n                    \"country\": \"Gabon\",\n                },\n                \"tax_id\": [\n                    \"tw_vat\",\n                ],\n                \"organization_id\": \"<value>\",\n                \"avatar_url\": \"https://authorized-planula.info/\",\n            },\n            user_id=\"<value>\",\n            user={\n                \"id\": \"<value>\",\n                \"email\": \"Loyce_Shields@gmail.com\",\n                \"public_name\": \"<value>\",\n            },\n            product={\n                \"created_at\": dateutil.parser.isoparse(\"2025-08-20T03:33:42.720Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2023-01-12T20:44:44.199Z\"),\n                \"id\": \"<value>\",\n                \"name\": \"<value>\",\n                \"description\": \"wholly till ill-fated ignite shyly timely duh\",\n                \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                \"is_recurring\": True,\n                \"is_archived\": True,\n                \"organization_id\": \"<value>\",\n            },\n            product_price={\n                \"created_at\": dateutil.parser.isoparse(\"2025-10-05T18:25:49.221Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2025-10-25T11:18:00.181Z\"),\n                \"id\": \"<value>\",\n                \"amount_type\": \"free\",\n                \"is_archived\": False,\n                \"product_id\": \"<value>\",\n                \"type\": \"recurring\",\n                \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                \"legacy\": True,\n            },\n            discount={\n                \"duration\": polar_sdk.DiscountDuration.FOREVER,\n                \"type\": polar_sdk.DiscountType.PERCENTAGE,\n                \"amount\": 798101,\n                \"currency\": \"UAE Dirham\",\n                \"created_at\": dateutil.parser.isoparse(\"2023-07-31T17:16:21.805Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2024-12-19T01:36:36.664Z\"),\n                \"id\": \"<value>\",\n                \"metadata\": {\n                    \"key\": 802290,\n                    \"key1\": 6677,\n                    \"key2\": 898371,\n                },\n                \"name\": \"<value>\",\n                \"code\": \"<value>\",\n                \"starts_at\": dateutil.parser.isoparse(\"2025-10-04T09:22:51.824Z\"),\n                \"ends_at\": dateutil.parser.isoparse(\"2025-05-25T20:59:26.748Z\"),\n                \"max_redemptions\": 625636,\n                \"redemptions_count\": 302499,\n                \"organization_id\": \"<value>\",\n            },\n            subscription={\n                \"metadata\": {\n                    \"key\": \"<value>\",\n                    \"key1\": 434679,\n                },\n                \"created_at\": dateutil.parser.isoparse(\"2023-03-11T03:15:27.257Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2024-08-05T00:21:50.603Z\"),\n                \"id\": \"<value>\",\n                \"amount\": 690659,\n                \"currency\": \"Lari\",\n                \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                \"status\": polar_sdk.SubscriptionStatus.CANCELED,\n                \"current_period_start\": dateutil.parser.isoparse(\"2025-08-31T07:32:06.622Z\"),\n                \"current_period_end\": dateutil.parser.isoparse(\"2023-12-09T23:03:57.242Z\"),\n                \"cancel_at_period_end\": False,\n                \"canceled_at\": dateutil.parser.isoparse(\"2024-09-03T00:25:25.397Z\"),\n                \"started_at\": dateutil.parser.isoparse(\"2023-07-04T15:25:35.943Z\"),\n                \"ends_at\": dateutil.parser.isoparse(\"2024-09-24T05:43:42.179Z\"),\n                \"ended_at\": dateutil.parser.isoparse(\"2024-11-02T16:14:59.150Z\"),\n                \"customer_id\": \"<value>\",\n                \"product_id\": \"<value>\",\n                \"price_id\": \"<value>\",\n                \"discount_id\": \"<value>\",\n                \"checkout_id\": \"<value>\",\n                \"customer_cancellation_reason\": polar_sdk.CustomerCancellationReason.MISSING_FEATURES,\n                \"customer_cancellation_comment\": \"<value>\",\n                \"user_id\": \"<value>\",\n            },\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["organization.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorganization_updated_post(request={\n        \"type\": \"organization.updated\",\n        \"data\": {\n            \"created_at\": dateutil.parser.isoparse(\"2023-08-12T18:45:04.236Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2025-12-29T16:35:25.119Z\"),\n            \"id\": \"<value>\",\n            \"name\": \"<value>\",\n            \"slug\": \"<value>\",\n            \"avatar_url\": \"https://devoted-bump.net\",\n            \"bio\": \"<value>\",\n            \"company\": \"Torp, Kuhlman and Howell\",\n            \"blog\": \"<value>\",\n            \"location\": \"<value>\",\n            \"email\": \"Dock_Friesen57@yahoo.com\",\n            \"twitter_username\": \"<value>\",\n            \"pledge_minimum_amount\": 105265,\n            \"pledge_badge_show_amount\": True,\n            \"default_upfront_split_to_contributors\": 907160,\n            \"profile_settings\": {},\n            \"feature_settings\": {},\n            \"subscription_settings\": {\n                \"allow_multiple_subscriptions\": False,\n                \"allow_customer_updates\": True,\n                \"proration_behavior\": polar_sdk.SubscriptionProrationBehavior.PRORATE,\n            },\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["pledge.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointpledge_created_post(request=polar_sdk.WebhookPledgeCreatedPayload(\n        type=\"pledge.created\",\n        data=polar_sdk.Pledge(\n            created_at=dateutil.parser.isoparse(\"2025-03-12T00:19:41.487Z\"),\n            modified_at=dateutil.parser.isoparse(\"2023-04-19T01:42:59.169Z\"),\n            id=\"<value>\",\n            amount=330877,\n            currency=\"Jamaican Dollar\",\n            state=polar_sdk.PledgeState.DISPUTED,\n            type=polar_sdk.PledgeType.PAY_DIRECTLY,\n            issue=polar_sdk.Issue(\n                id=\"66524b69-aa0b-47ac-bb9a-0cee5d3a9110\",\n                platform=polar_sdk.Platforms.GITHUB,\n                number=280857,\n                title=\"<value>\",\n                state=polar_sdk.State.OPEN,\n                issue_created_at=dateutil.parser.isoparse(\"2024-02-26T00:33:35.289Z\"),\n                needs_confirmation_solved=False,\n                funding=polar_sdk.Funding(),\n                repository=polar_sdk.Repository(\n                    id=\"356e14cb-87a4-484c-bcfa-ebfe50487706\",\n                    platform=polar_sdk.Platforms.GITHUB,\n                    is_private=True,\n                    name=\"MyOrg\",\n                    description=\"different premium tinderbox peter under often buzzing hastily\",\n                    stars=1337,\n                    license=\"<value>\",\n                    homepage=\"<value>\",\n                    profile_settings={},\n                    organization={\n                        \"id\": \"29159f56-74c0-464d-b598-8d5bc3b9cdda\",\n                        \"platform\": polar_sdk.Platforms.GITHUB,\n                        \"name\": \"<value>\",\n                        \"avatar_url\": \"https://frightened-poppy.com/\",\n                        \"is_personal\": False,\n                        \"bio\": \"<value>\",\n                        \"pretty_name\": \"<value>\",\n                        \"company\": \"Bailey - Towne\",\n                        \"blog\": \"<value>\",\n                        \"location\": \"<value>\",\n                        \"email\": \"Cortez_Stehr70@yahoo.com\",\n                        \"twitter_username\": \"<value>\",\n                        \"organization_id\": \"<value>\",\n                    },\n                    internal_organization={\n                        \"created_at\": dateutil.parser.isoparse(\"2025-01-03T15:27:13.109Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2024-02-15T22:10:17.041Z\"),\n                        \"id\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"slug\": \"<value>\",\n                        \"avatar_url\": \"https://hard-to-find-thyme.org\",\n                        \"bio\": \"<value>\",\n                        \"company\": \"Schinner - Wiegand\",\n                        \"blog\": \"<value>\",\n                        \"location\": \"<value>\",\n                        \"email\": \"Pearline_Brekke@hotmail.com\",\n                        \"twitter_username\": \"<value>\",\n                        \"pledge_minimum_amount\": 273260,\n                        \"pledge_badge_show_amount\": False,\n                        \"default_upfront_split_to_contributors\": 976949,\n                        \"profile_settings\": {},\n                        \"feature_settings\": {},\n                        \"subscription_settings\": {\n                            \"allow_multiple_subscriptions\": True,\n                            \"allow_customer_updates\": True,\n                            \"proration_behavior\": polar_sdk.SubscriptionProrationBehavior.INVOICE,\n                        },\n                    },\n                ),\n                pledge_badge_currently_embedded=False,\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["pledge.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointpledge_updated_post(request=polar_sdk.WebhookPledgeUpdatedPayload(\n        type=\"pledge.updated\",\n        data=polar_sdk.Pledge(\n            created_at=dateutil.parser.isoparse(\"2024-11-29T00:10:39.674Z\"),\n            modified_at=dateutil.parser.isoparse(\"2025-10-02T21:42:49.754Z\"),\n            id=\"<value>\",\n            amount=634567,\n            currency=\"Singapore Dollar\",\n            state=polar_sdk.PledgeState.REFUNDED,\n            type=polar_sdk.PledgeType.PAY_ON_COMPLETION,\n            issue=polar_sdk.Issue(\n                id=\"d2e1349d-085a-441c-abf4-379a1f21d0da\",\n                platform=polar_sdk.Platforms.GITHUB,\n                number=218372,\n                title=\"<value>\",\n                state=polar_sdk.State.CLOSED,\n                issue_created_at=dateutil.parser.isoparse(\"2024-08-12T14:08:31.083Z\"),\n                needs_confirmation_solved=True,\n                funding=polar_sdk.Funding(),\n                repository=polar_sdk.Repository(\n                    id=\"814bd7c6-3412-4f11-b523-7b38c659f44a\",\n                    platform=polar_sdk.Platforms.GITHUB,\n                    is_private=False,\n                    name=\"MyOrg\",\n                    description=\"hm however microchip\",\n                    stars=1337,\n                    license=\"<value>\",\n                    homepage=\"<value>\",\n                    profile_settings={},\n                    organization={\n                        \"id\": \"3ddd5cc2-de10-41ef-baa1-7551cf671cc3\",\n                        \"platform\": polar_sdk.Platforms.GITHUB,\n                        \"name\": \"<value>\",\n                        \"avatar_url\": \"https://gummy-interviewer.biz\",\n                        \"is_personal\": False,\n                        \"bio\": \"<value>\",\n                        \"pretty_name\": \"<value>\",\n                        \"company\": \"Ferry - Tremblay\",\n                        \"blog\": \"<value>\",\n                        \"location\": \"<value>\",\n                        \"email\": \"Reggie_Crist@yahoo.com\",\n                        \"twitter_username\": \"<value>\",\n                        \"organization_id\": \"<value>\",\n                    },\n                    internal_organization={\n                        \"created_at\": dateutil.parser.isoparse(\"2025-12-13T11:00:39.217Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2025-12-02T09:51:26.214Z\"),\n                        \"id\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"slug\": \"<value>\",\n                        \"avatar_url\": \"https://memorable-numeracy.com/\",\n                        \"bio\": \"<value>\",\n                        \"company\": \"Schuster - Crooks\",\n                        \"blog\": \"<value>\",\n                        \"location\": \"<value>\",\n                        \"email\": \"Tatum.Block37@yahoo.com\",\n                        \"twitter_username\": \"<value>\",\n                        \"pledge_minimum_amount\": 653584,\n                        \"pledge_badge_show_amount\": False,\n                        \"default_upfront_split_to_contributors\": 175899,\n                        \"profile_settings\": {},\n                        \"feature_settings\": {},\n                        \"subscription_settings\": {\n                            \"allow_multiple_subscriptions\": False,\n                            \"allow_customer_updates\": True,\n                            \"proration_behavior\": polar_sdk.SubscriptionProrationBehavior.INVOICE,\n                        },\n                    },\n                ),\n                pledge_badge_currently_embedded=True,\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["product.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointproduct_created_post(request={\n        \"type\": \"product.created\",\n        \"data\": {\n            \"created_at\": dateutil.parser.isoparse(\"2023-03-27T06:36:20.130Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2025-04-21T12:05:16.637Z\"),\n            \"id\": \"<value>\",\n            \"name\": \"<value>\",\n            \"description\": \"into horst metal grimy clinch big grounded industrialize\",\n            \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n            \"is_recurring\": True,\n            \"is_archived\": True,\n            \"organization_id\": \"<value>\",\n            \"metadata\": {\n                \"key\": \"<value>\",\n                \"key1\": \"<value>\",\n            },\n            \"prices\": [\n                {\n                    \"created_at\": dateutil.parser.isoparse(\"2024-12-07T23:31:39.577Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2024-04-25T10:21:28.587Z\"),\n                    \"id\": \"<value>\",\n                    \"amount_type\": \"free\",\n                    \"is_archived\": False,\n                    \"product_id\": \"<value>\",\n                    \"type\": \"recurring\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    \"legacy\": True,\n                },\n                {\n                    \"created_at\": dateutil.parser.isoparse(\"2024-09-06T02:23:36.299Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2024-10-09T12:20:00.039Z\"),\n                    \"id\": \"<value>\",\n                    \"amount_type\": \"custom\",\n                    \"is_archived\": False,\n                    \"product_id\": \"<value>\",\n                    \"type\": polar_sdk.ProductPriceType.RECURRING,\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    \"price_currency\": \"<value>\",\n                    \"minimum_amount\": 66164,\n                    \"maximum_amount\": 215783,\n                    \"preset_amount\": 203043,\n                },\n            ],\n            \"benefits\": [\n                {\n                    \"created_at\": dateutil.parser.isoparse(\"2023-12-13T12:26:05.455Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2024-04-17T08:36:36.851Z\"),\n                    \"id\": \"<value>\",\n                    \"type\": \"ads\",\n                    \"description\": \"before requite than throughout\",\n                    \"selectable\": False,\n                    \"deletable\": False,\n                    \"organization_id\": \"<value>\",\n                    \"properties\": {\n                        \"image_height\": 400,\n                        \"image_width\": 400,\n                    },\n                },\n                {\n                    \"created_at\": dateutil.parser.isoparse(\"2024-04-16T11:54:19.983Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2024-09-03T21:44:52.825Z\"),\n                    \"id\": \"<value>\",\n                    \"type\": \"discord\",\n                    \"description\": \"unaccountably beneath opposite bah hose fellow surge frankly\",\n                    \"selectable\": False,\n                    \"deletable\": False,\n                    \"organization_id\": \"<value>\",\n                    \"properties\": {\n                        \"guild_id\": \"<id>\",\n                        \"role_id\": \"<id>\",\n                        \"guild_token\": \"<value>\",\n                    },\n                },\n                {\n                    \"created_at\": dateutil.parser.isoparse(\"2023-07-03T13:23:53.646Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2025-10-22T11:14:29.082Z\"),\n                    \"id\": \"<value>\",\n                    \"type\": \"downloadables\",\n                    \"description\": \"though pace shakily stack carefully wherever\",\n                    \"selectable\": False,\n                    \"deletable\": False,\n                    \"organization_id\": \"<value>\",\n                    \"properties\": {\n                        \"archived\": {\n                            \"key\": False,\n                        },\n                        \"files\": [\n                            \"<value>\",\n                        ],\n                    },\n                },\n            ],\n            \"medias\": [\n                {\n                    \"id\": \"<value>\",\n                    \"organization_id\": \"<value>\",\n                    \"name\": \"<value>\",\n                    \"path\": \"/usr/obj\",\n                    \"mime_type\": \"<value>\",\n                    \"size\": 260470,\n                    \"storage_version\": \"<value>\",\n                    \"checksum_etag\": \"<value>\",\n                    \"checksum_sha256_base64\": \"<value>\",\n                    \"checksum_sha256_hex\": \"<value>\",\n                    \"last_modified_at\": dateutil.parser.isoparse(\"2025-08-18T19:34:49.881Z\"),\n                    \"version\": \"<value>\",\n                    \"service\": \"product_media\",\n                    \"is_uploaded\": True,\n                    \"created_at\": dateutil.parser.isoparse(\"2025-05-10T10:45:18.149Z\"),\n                    \"size_readable\": \"<value>\",\n                    \"public_url\": \"https://yellow-reasoning.biz/\",\n                },\n            ],\n            \"attached_custom_fields\": [\n                {\n                    \"custom_field_id\": \"<value>\",\n                    \"custom_field\": {\n                        \"created_at\": dateutil.parser.isoparse(\"2025-10-19T10:03:16.084Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2024-05-28T07:55:26.633Z\"),\n                        \"id\": \"<value>\",\n                        \"metadata\": {\n                            \"key\": False,\n                        },\n                        \"type\": \"date\",\n                        \"slug\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"organization_id\": \"<value>\",\n                        \"properties\": {},\n                    },\n                    \"order\": 752699,\n                    \"required\": False,\n                },\n                {\n                    \"custom_field_id\": \"<value>\",\n                    \"custom_field\": {\n                        \"created_at\": dateutil.parser.isoparse(\"2023-05-17T05:27:36.888Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2023-03-28T23:52:23.232Z\"),\n                        \"id\": \"<value>\",\n                        \"metadata\": {\n                            \"key\": \"<value>\",\n                        },\n                        \"type\": \"number\",\n                        \"slug\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"organization_id\": \"<value>\",\n                        \"properties\": {},\n                    },\n                    \"order\": 425950,\n                    \"required\": True,\n                },\n            ],\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["product.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointproduct_updated_post(request={\n        \"type\": \"product.updated\",\n        \"data\": {\n            \"created_at\": dateutil.parser.isoparse(\"2024-06-25T03:46:32.479Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2023-06-04T01:47:33.158Z\"),\n            \"id\": \"<value>\",\n            \"name\": \"<value>\",\n            \"description\": \"er ick birdcage\",\n            \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n            \"is_recurring\": False,\n            \"is_archived\": True,\n            \"organization_id\": \"<value>\",\n            \"metadata\": {\n                \"key\": 498845,\n            },\n            \"prices\": [\n                {\n                    \"created_at\": dateutil.parser.isoparse(\"2023-04-14T23:22:06.974Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2023-11-27T16:49:54.775Z\"),\n                    \"id\": \"<value>\",\n                    \"amount_type\": \"custom\",\n                    \"is_archived\": False,\n                    \"product_id\": \"<value>\",\n                    \"type\": \"recurring\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    \"price_currency\": \"<value>\",\n                    \"minimum_amount\": 147529,\n                    \"maximum_amount\": 389871,\n                    \"preset_amount\": 137830,\n                    \"legacy\": True,\n                },\n            ],\n            \"benefits\": [\n                {\n                    \"created_at\": dateutil.parser.isoparse(\"2025-10-01T01:25:21.739Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2023-04-13T14:11:42.240Z\"),\n                    \"id\": \"<value>\",\n                    \"type\": \"discord\",\n                    \"description\": \"ick nauseate louse over snoop consequently glossy probe\",\n                    \"selectable\": False,\n                    \"deletable\": False,\n                    \"organization_id\": \"<value>\",\n                    \"properties\": {\n                        \"guild_id\": \"<id>\",\n                        \"role_id\": \"<id>\",\n                        \"guild_token\": \"<value>\",\n                    },\n                },\n            ],\n            \"medias\": [\n                {\n                    \"id\": \"<value>\",\n                    \"organization_id\": \"<value>\",\n                    \"name\": \"<value>\",\n                    \"path\": \"/etc/defaults\",\n                    \"mime_type\": \"<value>\",\n                    \"size\": 132814,\n                    \"storage_version\": \"<value>\",\n                    \"checksum_etag\": \"<value>\",\n                    \"checksum_sha256_base64\": \"<value>\",\n                    \"checksum_sha256_hex\": \"<value>\",\n                    \"last_modified_at\": dateutil.parser.isoparse(\"2024-04-24T09:18:36.586Z\"),\n                    \"version\": \"<value>\",\n                    \"service\": \"product_media\",\n                    \"is_uploaded\": False,\n                    \"created_at\": dateutil.parser.isoparse(\"2024-02-12T19:04:33.442Z\"),\n                    \"size_readable\": \"<value>\",\n                    \"public_url\": \"https://kaleidoscopic-quart.name/\",\n                },\n                {\n                    \"id\": \"<value>\",\n                    \"organization_id\": \"<value>\",\n                    \"name\": \"<value>\",\n                    \"path\": \"/mnt\",\n                    \"mime_type\": \"<value>\",\n                    \"size\": 173885,\n                    \"storage_version\": \"<value>\",\n                    \"checksum_etag\": \"<value>\",\n                    \"checksum_sha256_base64\": \"<value>\",\n                    \"checksum_sha256_hex\": \"<value>\",\n                    \"last_modified_at\": dateutil.parser.isoparse(\"2023-01-02T06:55:06.076Z\"),\n                    \"version\": \"<value>\",\n                    \"service\": \"product_media\",\n                    \"is_uploaded\": True,\n                    \"created_at\": dateutil.parser.isoparse(\"2024-08-06T03:21:47.848Z\"),\n                    \"size_readable\": \"<value>\",\n                    \"public_url\": \"https://total-pigpen.com/\",\n                },\n            ],\n            \"attached_custom_fields\": [\n                {\n                    \"custom_field_id\": \"<value>\",\n                    \"custom_field\": {\n                        \"created_at\": dateutil.parser.isoparse(\"2024-05-09T01:31:02.965Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2025-12-17T05:54:42.907Z\"),\n                        \"id\": \"<value>\",\n                        \"metadata\": {\n                            \"key\": 513990,\n                        },\n                        \"type\": \"number\",\n                        \"slug\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"organization_id\": \"<value>\",\n                        \"properties\": {},\n                    },\n                    \"order\": 326849,\n                    \"required\": True,\n                },\n            ],\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["refund.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointrefund_created_post(request={\n        \"type\": \"refund.created\",\n        \"data\": {\n            \"created_at\": dateutil.parser.isoparse(\"2025-12-29T06:17:19.062Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2023-06-28T13:27:59.588Z\"),\n            \"id\": \"<value>\",\n            \"metadata\": {\n                \"key\": False,\n                \"key1\": True,\n            },\n            \"status\": polar_sdk.RefundStatus.CANCELED,\n            \"reason\": polar_sdk.RefundReason.FRAUDULENT,\n            \"amount\": 872325,\n            \"tax_amount\": 273821,\n            \"currency\": \"New Israeli Sheqel\",\n            \"organization_id\": \"<value>\",\n            \"order_id\": \"<value>\",\n            \"subscription_id\": \"<value>\",\n            \"customer_id\": \"<value>\",\n            \"revoke_benefits\": True,\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["refund.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointrefund_updated_post(request={\n        \"type\": \"refund.updated\",\n        \"data\": {\n            \"created_at\": dateutil.parser.isoparse(\"2024-01-23T03:57:31.216Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2024-04-24T01:16:45.429Z\"),\n            \"id\": \"<value>\",\n            \"metadata\": {\n\n            },\n            \"status\": polar_sdk.RefundStatus.SUCCEEDED,\n            \"reason\": polar_sdk.RefundReason.OTHER,\n            \"amount\": 397442,\n            \"tax_amount\": 509120,\n            \"currency\": \"Rufiyaa\",\n            \"organization_id\": \"<value>\",\n            \"order_id\": \"<value>\",\n            \"subscription_id\": \"<value>\",\n            \"customer_id\": \"<value>\",\n            \"revoke_benefits\": False,\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.active"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_active_post(request=polar_sdk.WebhookSubscriptionActivePayload(\n        type=\"subscription.active\",\n        data=polar_sdk.Subscription(\n            created_at=dateutil.parser.isoparse(\"2023-09-17T11:03:44.679Z\"),\n            modified_at=dateutil.parser.isoparse(\"2025-07-24T20:02:17.426Z\"),\n            id=\"<value>\",\n            amount=116760,\n            currency=\"Quetzal\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            status=polar_sdk.SubscriptionStatus.INCOMPLETE,\n            current_period_start=dateutil.parser.isoparse(\"2023-08-25T00:14:50.252Z\"),\n            current_period_end=dateutil.parser.isoparse(\"2023-12-10T18:25:01.577Z\"),\n            cancel_at_period_end=False,\n            canceled_at=dateutil.parser.isoparse(\"2024-07-05T14:07:23.099Z\"),\n            started_at=dateutil.parser.isoparse(\"2024-06-30T08:12:48.355Z\"),\n            ends_at=dateutil.parser.isoparse(\"2023-06-29T07:42:54.895Z\"),\n            ended_at=dateutil.parser.isoparse(\"2025-10-30T02:51:06.576Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            price_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.SWITCHED_SERVICE,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n                \"key\": True,\n                \"key1\": \"<value>\",\n                \"key2\": 615212,\n            },\n            customer={\n                \"created_at\": dateutil.parser.isoparse(\"2023-04-25T08:49:41.567Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2025-09-05T08:50:11.879Z\"),\n                \"id\": \"<value>\",\n                \"metadata\": {\n\n                },\n                \"external_id\": \"<id>\",\n                \"email\": \"Felicia87@hotmail.com\",\n                \"email_verified\": True,\n                \"name\": \"<value>\",\n                \"billing_address\": {\n                    \"country\": \"Cuba\",\n                },\n                \"tax_id\": [\n                    \"pe_ruc\",\n                    \"tr_tin\",\n                ],\n                \"organization_id\": \"<value>\",\n                \"avatar_url\": \"https://steel-zebra.biz/\",\n            },\n            user_id=\"<value>\",\n            user={\n                \"id\": \"<value>\",\n                \"email\": \"Raven_Feil@gmail.com\",\n                \"public_name\": \"<value>\",\n            },\n            product={\n                \"created_at\": dateutil.parser.isoparse(\"2024-08-26T12:17:17.429Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2025-06-15T18:12:34.300Z\"),\n                \"id\": \"<value>\",\n                \"name\": \"<value>\",\n                \"description\": \"during boo place enchanting\",\n                \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                \"is_recurring\": False,\n                \"is_archived\": True,\n                \"organization_id\": \"<value>\",\n                \"metadata\": {\n                    \"key\": 390560,\n                },\n                \"prices\": [\n\n                ],\n                \"benefits\": [\n\n                ],\n                \"medias\": [\n                    {\n                        \"id\": \"<value>\",\n                        \"organization_id\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"path\": \"/etc/periodic\",\n                        \"mime_type\": \"<value>\",\n                        \"size\": 368833,\n                        \"storage_version\": \"<value>\",\n                        \"checksum_etag\": \"<value>\",\n                        \"checksum_sha256_base64\": \"<value>\",\n                        \"checksum_sha256_hex\": \"<value>\",\n                        \"last_modified_at\": dateutil.parser.isoparse(\"2023-09-18T05:20:53.809Z\"),\n                        \"version\": \"<value>\",\n                        \"service\": \"product_media\",\n                        \"is_uploaded\": False,\n                        \"created_at\": dateutil.parser.isoparse(\"2025-02-15T09:26:15.001Z\"),\n                        \"size_readable\": \"<value>\",\n                        \"public_url\": \"https://scornful-flood.org\",\n                    },\n                    {\n                        \"id\": \"<value>\",\n                        \"organization_id\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"path\": \"/private/var\",\n                        \"mime_type\": \"<value>\",\n                        \"size\": 135533,\n                        \"storage_version\": \"<value>\",\n                        \"checksum_etag\": \"<value>\",\n                        \"checksum_sha256_base64\": \"<value>\",\n                        \"checksum_sha256_hex\": \"<value>\",\n                        \"last_modified_at\": dateutil.parser.isoparse(\"2025-06-08T01:38:58.555Z\"),\n                        \"version\": \"<value>\",\n                        \"service\": \"product_media\",\n                        \"is_uploaded\": True,\n                        \"created_at\": dateutil.parser.isoparse(\"2023-02-13T01:11:01.495Z\"),\n                        \"size_readable\": \"<value>\",\n                        \"public_url\": \"https://small-monocle.org\",\n                    },\n                ],\n                \"attached_custom_fields\": [\n                    {\n                        \"custom_field_id\": \"<value>\",\n                        \"custom_field\": {\n                            \"created_at\": dateutil.parser.isoparse(\"2025-07-24T20:02:17.426Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2023-05-08T23:16:06.519Z\"),\n                            \"id\": \"<value>\",\n                            \"metadata\": {\n                                \"key\": \"<value>\",\n                            },\n                            \"type\": \"date\",\n                            \"slug\": \"<value>\",\n                            \"name\": \"<value>\",\n                            \"organization_id\": \"<value>\",\n                            \"properties\": {},\n                        },\n                        \"order\": 18363,\n                        \"required\": False,\n                    },\n                ],\n            },\n            price={\n                \"created_at\": dateutil.parser.isoparse(\"2023-08-25T00:14:50.252Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2023-12-10T18:25:01.577Z\"),\n                \"id\": \"<value>\",\n                \"amount_type\": \"custom\",\n                \"is_archived\": False,\n                \"product_id\": \"<value>\",\n                \"type\": \"recurring\",\n                \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                \"price_currency\": \"<value>\",\n                \"minimum_amount\": 503274,\n                \"maximum_amount\": 498487,\n                \"preset_amount\": 163614,\n                \"legacy\": True,\n            },\n            discount={\n                \"duration\": polar_sdk.DiscountDuration.FOREVER,\n                \"duration_in_months\": 764641,\n                \"type\": polar_sdk.DiscountType.PERCENTAGE,\n                \"basis_points\": 267197,\n                \"created_at\": dateutil.parser.isoparse(\"2024-10-19T13:44:20.141Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2024-08-30T17:40:05.617Z\"),\n                \"id\": \"<value>\",\n                \"metadata\": {\n                    \"key\": 275346,\n                    \"key1\": \"<value>\",\n                },\n                \"name\": \"<value>\",\n                \"code\": \"<value>\",\n                \"starts_at\": dateutil.parser.isoparse(\"2024-07-06T18:40:04.116Z\"),\n                \"ends_at\": dateutil.parser.isoparse(\"2023-05-12T20:57:57.609Z\"),\n                \"max_redemptions\": 365189,\n                \"redemptions_count\": 573023,\n                \"organization_id\": \"<value>\",\n            },\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.canceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_canceled_post(request=polar_sdk.WebhookSubscriptionCanceledPayload(\n        type=\"subscription.canceled\",\n        data=polar_sdk.Subscription(\n            created_at=dateutil.parser.isoparse(\"2024-02-08T10:04:43.200Z\"),\n            modified_at=dateutil.parser.isoparse(\"2023-02-20T09:16:44.963Z\"),\n            id=\"<value>\",\n            amount=384017,\n            currency=\"Nakfa\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            status=polar_sdk.SubscriptionStatus.CANCELED,\n            current_period_start=dateutil.parser.isoparse(\"2025-08-29T23:51:26.505Z\"),\n            current_period_end=dateutil.parser.isoparse(\"2024-01-30T14:57:29.126Z\"),\n            cancel_at_period_end=False,\n            canceled_at=dateutil.parser.isoparse(\"2023-05-31T10:57:35.559Z\"),\n            started_at=dateutil.parser.isoparse(\"2024-10-31T08:13:37.012Z\"),\n            ends_at=dateutil.parser.isoparse(\"2023-08-22T21:50:14.399Z\"),\n            ended_at=dateutil.parser.isoparse(\"2023-07-13T20:08:34.251Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            price_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.TOO_EXPENSIVE,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n                \"key\": \"<value>\",\n                \"key1\": \"<value>\",\n                \"key2\": 199269,\n            },\n            customer={\n                \"created_at\": dateutil.parser.isoparse(\"2023-12-04T19:57:16.999Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2025-01-03T00:48:16.846Z\"),\n                \"id\": \"<value>\",\n                \"metadata\": {\n                    \"key\": \"<value>\",\n                },\n                \"external_id\": \"<id>\",\n                \"email\": \"Ila.Waters90@hotmail.com\",\n                \"email_verified\": False,\n                \"name\": \"<value>\",\n                \"billing_address\": {\n                    \"country\": \"Costa Rica\",\n                },\n                \"tax_id\": [\n                    \"eu_oss_vat\",\n                    \"in_gst\",\n                ],\n                \"organization_id\": \"<value>\",\n                \"avatar_url\": \"https://pretty-t-shirt.info/\",\n            },\n            user_id=\"<value>\",\n            user={\n                \"id\": \"<value>\",\n                \"email\": \"Hubert4@yahoo.com\",\n                \"public_name\": \"<value>\",\n            },\n            product={\n                \"created_at\": dateutil.parser.isoparse(\"2024-12-23T22:35:56.583Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2023-10-09T20:16:33.963Z\"),\n                \"id\": \"<value>\",\n                \"name\": \"<value>\",\n                \"description\": \"where yogurt atop\",\n                \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                \"is_recurring\": False,\n                \"is_archived\": False,\n                \"organization_id\": \"<value>\",\n                \"metadata\": {\n\n                },\n                \"prices\": [\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2024-02-25T21:11:48.890Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2023-10-06T06:04:45.294Z\"),\n                        \"id\": \"<value>\",\n                        \"amount_type\": \"custom\",\n                        \"is_archived\": False,\n                        \"product_id\": \"<value>\",\n                        \"type\": \"recurring\",\n                        \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        \"price_currency\": \"<value>\",\n                        \"minimum_amount\": 803599,\n                        \"maximum_amount\": 886856,\n                        \"preset_amount\": 360058,\n                        \"legacy\": True,\n                    },\n                ],\n                \"benefits\": [\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2023-05-31T10:57:35.559Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2024-10-31T08:13:37.012Z\"),\n                        \"id\": \"<value>\",\n                        \"type\": \"github_repository\",\n                        \"description\": \"around meh patiently t-shirt\",\n                        \"selectable\": False,\n                        \"deletable\": False,\n                        \"organization_id\": \"<value>\",\n                        \"properties\": {\n                            \"repository_owner\": \"polarsource\",\n                            \"repository_name\": \"private_repo\",\n                            \"permission\": polar_sdk.Permission.TRIAGE,\n                        },\n                    },\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2024-04-22T15:20:36.336Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2023-02-02T14:55:14.427Z\"),\n                        \"id\": \"<value>\",\n                        \"type\": \"github_repository\",\n                        \"description\": \"yawningly yum considering\",\n                        \"selectable\": False,\n                        \"deletable\": False,\n                        \"organization_id\": \"<value>\",\n                        \"properties\": {\n                            \"repository_owner\": \"polarsource\",\n                            \"repository_name\": \"private_repo\",\n                            \"permission\": polar_sdk.Permission.PULL,\n                        },\n                    },\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2025-04-12T18:57:51.082Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2025-02-01T11:25:35.223Z\"),\n                        \"id\": \"<value>\",\n                        \"type\": \"downloadables\",\n                        \"description\": \"bestride circa aw gum judgementally till upwardly pro urgently\",\n                        \"selectable\": False,\n                        \"deletable\": False,\n                        \"organization_id\": \"<value>\",\n                        \"properties\": {\n                            \"archived\": {\n                                \"key\": False,\n                            },\n                            \"files\": [\n                                \"<value>\",\n                            ],\n                        },\n                    },\n                ],\n                \"medias\": [\n\n                ],\n                \"attached_custom_fields\": [\n                    {\n                        \"custom_field_id\": \"<value>\",\n                        \"custom_field\": {\n                            \"created_at\": dateutil.parser.isoparse(\"2023-06-03T19:12:20.362Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2025-05-23T18:16:04.701Z\"),\n                            \"id\": \"<value>\",\n                            \"metadata\": {\n                                \"key\": \"<value>\",\n                            },\n                            \"type\": \"text\",\n                            \"slug\": \"<value>\",\n                            \"name\": \"<value>\",\n                            \"organization_id\": \"<value>\",\n                            \"properties\": {},\n                        },\n                        \"order\": 722899,\n                        \"required\": True,\n                    },\n                ],\n            },\n            price={\n                \"created_at\": dateutil.parser.isoparse(\"2023-10-27T13:26:08.325Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2025-08-04T08:26:05.471Z\"),\n                \"id\": \"<value>\",\n                \"amount_type\": \"free\",\n                \"is_archived\": False,\n                \"product_id\": \"<value>\",\n                \"type\": \"recurring\",\n                \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                \"legacy\": True,\n            },\n            discount={\n                \"duration\": polar_sdk.DiscountDuration.FOREVER,\n                \"duration_in_months\": 430541,\n                \"type\": polar_sdk.DiscountType.FIXED,\n                \"basis_points\": 609664,\n                \"created_at\": dateutil.parser.isoparse(\"2025-06-05T02:50:38.815Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2025-02-01T19:29:19.952Z\"),\n                \"id\": \"<value>\",\n                \"metadata\": {\n                    \"key\": 817419,\n                    \"key1\": 247251,\n                },\n                \"name\": \"<value>\",\n                \"code\": \"<value>\",\n                \"starts_at\": dateutil.parser.isoparse(\"2024-05-29T08:36:46.000Z\"),\n                \"ends_at\": dateutil.parser.isoparse(\"2025-10-18T20:11:55.955Z\"),\n                \"max_redemptions\": 132079,\n                \"redemptions_count\": 69009,\n                \"organization_id\": \"<value>\",\n            },\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_created_post(request=polar_sdk.WebhookSubscriptionCreatedPayload(\n        type=\"subscription.created\",\n        data=polar_sdk.Subscription(\n            created_at=dateutil.parser.isoparse(\"2024-07-03T01:29:40.920Z\"),\n            modified_at=dateutil.parser.isoparse(\"2023-02-20T03:35:25.500Z\"),\n            id=\"<value>\",\n            amount=78980,\n            currency=\"Dong\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            status=polar_sdk.SubscriptionStatus.INCOMPLETE_EXPIRED,\n            current_period_start=dateutil.parser.isoparse(\"2025-01-25T02:46:12.208Z\"),\n            current_period_end=dateutil.parser.isoparse(\"2023-10-08T16:07:22.449Z\"),\n            cancel_at_period_end=False,\n            canceled_at=dateutil.parser.isoparse(\"2025-10-17T20:21:29.819Z\"),\n            started_at=dateutil.parser.isoparse(\"2023-02-26T17:52:17.099Z\"),\n            ends_at=dateutil.parser.isoparse(\"2023-07-04T19:46:53.033Z\"),\n            ended_at=dateutil.parser.isoparse(\"2023-09-06T09:33:34.348Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            price_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.UNUSED,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n                \"key\": \"<value>\",\n                \"key1\": 229409,\n            },\n            customer={\n                \"created_at\": dateutil.parser.isoparse(\"2023-04-01T11:22:10.531Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2024-06-26T00:08:47.301Z\"),\n                \"id\": \"<value>\",\n                \"metadata\": {\n                    \"key\": True,\n                },\n                \"external_id\": \"<id>\",\n                \"email\": \"Lia42@hotmail.com\",\n                \"email_verified\": False,\n                \"name\": \"<value>\",\n                \"billing_address\": {\n                    \"country\": \"Bhutan\",\n                },\n                \"tax_id\": [\n                    \"il_vat\",\n                ],\n                \"organization_id\": \"<value>\",\n                \"avatar_url\": \"https://tense-convection.net/\",\n            },\n            user_id=\"<value>\",\n            user={\n                \"id\": \"<value>\",\n                \"email\": \"Carson_Raynor@gmail.com\",\n                \"public_name\": \"<value>\",\n            },\n            product={\n                \"created_at\": dateutil.parser.isoparse(\"2023-03-19T22:51:30.621Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2025-04-17T16:08:26.249Z\"),\n                \"id\": \"<value>\",\n                \"name\": \"<value>\",\n                \"description\": \"twine deed um on sudden\",\n                \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                \"is_recurring\": False,\n                \"is_archived\": True,\n                \"organization_id\": \"<value>\",\n                \"metadata\": {\n                    \"key\": \"<value>\",\n                },\n                \"prices\": [\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2023-03-28T13:29:27.613Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2025-10-05T17:53:50.261Z\"),\n                        \"id\": \"<value>\",\n                        \"amount_type\": \"fixed\",\n                        \"is_archived\": False,\n                        \"product_id\": \"<value>\",\n                        \"type\": polar_sdk.ProductPriceType.ONE_TIME,\n                        \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        \"price_currency\": \"<value>\",\n                        \"price_amount\": 688974,\n                    },\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2025-10-17T20:21:29.819Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2023-02-26T17:52:17.099Z\"),\n                        \"id\": \"<value>\",\n                        \"amount_type\": \"free\",\n                        \"is_archived\": False,\n                        \"product_id\": \"<value>\",\n                        \"type\": \"recurring\",\n                        \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        \"legacy\": True,\n                    },\n                ],\n                \"benefits\": [\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2025-05-17T19:46:56.602Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2025-03-19T21:12:06.131Z\"),\n                        \"id\": \"<value>\",\n                        \"type\": \"custom\",\n                        \"description\": \"huff wherever gosh bah\",\n                        \"selectable\": False,\n                        \"deletable\": False,\n                        \"organization_id\": \"<value>\",\n                        \"properties\": {\n                            \"note\": \"<value>\",\n                        },\n                        \"is_tax_applicable\": False,\n                    },\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2024-09-19T06:46:41.784Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2023-03-19T22:51:30.621Z\"),\n                        \"id\": \"<value>\",\n                        \"type\": \"ads\",\n                        \"description\": \"empty although fax phooey perfumed parody gah requite unfreeze\",\n                        \"selectable\": False,\n                        \"deletable\": False,\n                        \"organization_id\": \"<value>\",\n                        \"properties\": {\n                            \"image_height\": 400,\n                            \"image_width\": 400,\n                        },\n                    },\n                ],\n                \"medias\": [\n                    {\n                        \"id\": \"<value>\",\n                        \"organization_id\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"path\": \"/usr/share\",\n                        \"mime_type\": \"<value>\",\n                        \"size\": 586409,\n                        \"storage_version\": \"<value>\",\n                        \"checksum_etag\": \"<value>\",\n                        \"checksum_sha256_base64\": \"<value>\",\n                        \"checksum_sha256_hex\": \"<value>\",\n                        \"last_modified_at\": dateutil.parser.isoparse(\"2023-08-31T15:18:05.996Z\"),\n                        \"version\": \"<value>\",\n                        \"service\": \"product_media\",\n                        \"is_uploaded\": False,\n                        \"created_at\": dateutil.parser.isoparse(\"2024-01-15T17:54:00.133Z\"),\n                        \"size_readable\": \"<value>\",\n                        \"public_url\": \"https://moist-hydrocarbon.info/\",\n                    },\n                    {\n                        \"id\": \"<value>\",\n                        \"organization_id\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"path\": \"/etc/defaults\",\n                        \"mime_type\": \"<value>\",\n                        \"size\": 914697,\n                        \"storage_version\": \"<value>\",\n                        \"checksum_etag\": \"<value>\",\n                        \"checksum_sha256_base64\": \"<value>\",\n                        \"checksum_sha256_hex\": \"<value>\",\n                        \"last_modified_at\": dateutil.parser.isoparse(\"2023-07-03T04:55:47.377Z\"),\n                        \"version\": \"<value>\",\n                        \"service\": \"product_media\",\n                        \"is_uploaded\": True,\n                        \"created_at\": dateutil.parser.isoparse(\"2023-03-13T02:22:01.631Z\"),\n                        \"size_readable\": \"<value>\",\n                        \"public_url\": \"https://stormy-sock.net\",\n                    },\n                    {\n                        \"id\": \"<value>\",\n                        \"organization_id\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"path\": \"/lib\",\n                        \"mime_type\": \"<value>\",\n                        \"size\": 179605,\n                        \"storage_version\": \"<value>\",\n                        \"checksum_etag\": \"<value>\",\n                        \"checksum_sha256_base64\": \"<value>\",\n                        \"checksum_sha256_hex\": \"<value>\",\n                        \"last_modified_at\": dateutil.parser.isoparse(\"2024-05-17T17:16:41.803Z\"),\n                        \"version\": \"<value>\",\n                        \"service\": \"product_media\",\n                        \"is_uploaded\": True,\n                        \"created_at\": dateutil.parser.isoparse(\"2025-06-21T23:06:39.354Z\"),\n                        \"size_readable\": \"<value>\",\n                        \"public_url\": \"https://animated-vicinity.info/\",\n                    },\n                ],\n                \"attached_custom_fields\": [\n                    {\n                        \"custom_field_id\": \"<value>\",\n                        \"custom_field\": {\n                            \"created_at\": dateutil.parser.isoparse(\"2023-01-05T10:41:20.531Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2023-08-11T17:49:31.404Z\"),\n                            \"id\": \"<value>\",\n                            \"metadata\": {\n                                \"key\": \"<value>\",\n                            },\n                            \"type\": \"number\",\n                            \"slug\": \"<value>\",\n                            \"name\": \"<value>\",\n                            \"organization_id\": \"<value>\",\n                            \"properties\": {},\n                        },\n                        \"order\": 388741,\n                        \"required\": True,\n                    },\n                    {\n                        \"custom_field_id\": \"<value>\",\n                        \"custom_field\": {\n                            \"created_at\": dateutil.parser.isoparse(\"2023-03-30T15:12:32.248Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2025-11-18T22:23:40.707Z\"),\n                            \"id\": \"<value>\",\n                            \"metadata\": {\n                                \"key\": False,\n                            },\n                            \"type\": \"checkbox\",\n                            \"slug\": \"<value>\",\n                            \"name\": \"<value>\",\n                            \"organization_id\": \"<value>\",\n                            \"properties\": {},\n                        },\n                        \"order\": 287379,\n                        \"required\": False,\n                    },\n                ],\n            },\n            price={\n                \"created_at\": dateutil.parser.isoparse(\"2023-11-27T13:44:20.258Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2025-03-12T04:23:07.414Z\"),\n                \"id\": \"<value>\",\n                \"amount_type\": \"free\",\n                \"is_archived\": False,\n                \"product_id\": \"<value>\",\n                \"type\": polar_sdk.ProductPriceType.RECURRING,\n                \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n            },\n            discount={\n                \"duration\": polar_sdk.DiscountDuration.FOREVER,\n                \"duration_in_months\": 181099,\n                \"type\": polar_sdk.DiscountType.PERCENTAGE,\n                \"basis_points\": 476081,\n                \"created_at\": dateutil.parser.isoparse(\"2024-08-19T11:00:20.002Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2025-01-01T07:02:24.223Z\"),\n                \"id\": \"<value>\",\n                \"metadata\": {\n\n                },\n                \"name\": \"<value>\",\n                \"code\": \"<value>\",\n                \"starts_at\": dateutil.parser.isoparse(\"2025-07-01T06:15:52.967Z\"),\n                \"ends_at\": dateutil.parser.isoparse(\"2025-03-29T17:45:51.057Z\"),\n                \"max_redemptions\": 700007,\n                \"redemptions_count\": 24340,\n                \"organization_id\": \"<value>\",\n            },\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_revoked_post(request=polar_sdk.WebhookSubscriptionRevokedPayload(\n        type=\"subscription.revoked\",\n        data=polar_sdk.Subscription(\n            created_at=dateutil.parser.isoparse(\"2025-11-29T12:00:55.925Z\"),\n            modified_at=dateutil.parser.isoparse(\"2023-03-13T04:36:55.320Z\"),\n            id=\"<value>\",\n            amount=780683,\n            currency=\"CFP Franc\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n            status=polar_sdk.SubscriptionStatus.TRIALING,\n            current_period_start=dateutil.parser.isoparse(\"2023-06-20T05:55:42.170Z\"),\n            current_period_end=dateutil.parser.isoparse(\"2024-05-16T17:55:53.899Z\"),\n            cancel_at_period_end=True,\n            canceled_at=dateutil.parser.isoparse(\"2025-10-25T10:04:20.460Z\"),\n            started_at=dateutil.parser.isoparse(\"2024-09-29T18:36:35.285Z\"),\n            ends_at=dateutil.parser.isoparse(\"2024-02-23T17:26:12.806Z\"),\n            ended_at=dateutil.parser.isoparse(\"2024-01-24T11:12:57.680Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            price_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.TOO_EXPENSIVE,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n\n            },\n            customer={\n                \"created_at\": dateutil.parser.isoparse(\"2025-09-02T15:09:07.489Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2025-06-23T22:13:15.423Z\"),\n                \"id\": \"<value>\",\n                \"metadata\": {\n                    \"key\": \"<value>\",\n                    \"key1\": 182663,\n                },\n                \"external_id\": \"<id>\",\n                \"email\": \"Arvilla_Walsh62@yahoo.com\",\n                \"email_verified\": False,\n                \"name\": \"<value>\",\n                \"billing_address\": {\n                    \"country\": \"Portugal\",\n                },\n                \"tax_id\": [\n\n                ],\n                \"organization_id\": \"<value>\",\n                \"avatar_url\": \"https://exotic-traffic.com/\",\n            },\n            user_id=\"<value>\",\n            user={\n                \"id\": \"<value>\",\n                \"email\": \"Percival.Schuster21@hotmail.com\",\n                \"public_name\": \"<value>\",\n            },\n            product={\n                \"created_at\": dateutil.parser.isoparse(\"2024-10-17T20:35:01.045Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2025-05-01T17:14:35.906Z\"),\n                \"id\": \"<value>\",\n                \"name\": \"<value>\",\n                \"description\": \"scout second management whose underachieve weakly yippee\",\n                \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                \"is_recurring\": False,\n                \"is_archived\": True,\n                \"organization_id\": \"<value>\",\n                \"metadata\": {\n                    \"key\": True,\n                    \"key1\": False,\n                },\n                \"prices\": [\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2025-11-17T16:25:39.728Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2024-08-16T13:41:14.572Z\"),\n                        \"id\": \"<value>\",\n                        \"amount_type\": \"free\",\n                        \"is_archived\": False,\n                        \"product_id\": \"<value>\",\n                        \"type\": \"recurring\",\n                        \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        \"legacy\": True,\n                    },\n                ],\n                \"benefits\": [\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2024-05-16T17:55:53.899Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2024-06-24T17:28:30.971Z\"),\n                        \"id\": \"<value>\",\n                        \"type\": \"ads\",\n                        \"description\": \"uh-huh that drab psst gee scout second management whose underachieve\",\n                        \"selectable\": False,\n                        \"deletable\": False,\n                        \"organization_id\": \"<value>\",\n                        \"properties\": {\n                            \"image_height\": 400,\n                            \"image_width\": 400,\n                        },\n                    },\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2025-04-09T17:12:00.943Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2024-07-26T22:37:48.771Z\"),\n                        \"id\": \"<value>\",\n                        \"type\": \"github_repository\",\n                        \"description\": \"ridge reconsideration spirit tromp\",\n                        \"selectable\": False,\n                        \"deletable\": False,\n                        \"organization_id\": \"<value>\",\n                        \"properties\": {\n                            \"repository_owner\": \"polarsource\",\n                            \"repository_name\": \"private_repo\",\n                            \"permission\": polar_sdk.Permission.PULL,\n                        },\n                    },\n                ],\n                \"medias\": [\n\n                ],\n                \"attached_custom_fields\": [\n                    {\n                        \"custom_field_id\": \"<value>\",\n                        \"custom_field\": {\n                            \"created_at\": dateutil.parser.isoparse(\"2023-12-15T15:35:52.203Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2023-07-22T04:02:13.353Z\"),\n                            \"id\": \"<value>\",\n                            \"metadata\": {\n                                \"key\": \"<value>\",\n                            },\n                            \"type\": \"text\",\n                            \"slug\": \"<value>\",\n                            \"name\": \"<value>\",\n                            \"organization_id\": \"<value>\",\n                            \"properties\": {},\n                        },\n                        \"order\": 679852,\n                        \"required\": True,\n                    },\n                    {\n                        \"custom_field_id\": \"<value>\",\n                        \"custom_field\": {\n                            \"created_at\": dateutil.parser.isoparse(\"2025-06-06T16:36:59.904Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2024-12-14T07:14:12.681Z\"),\n                            \"id\": \"<value>\",\n                            \"metadata\": {\n                                \"key\": \"<value>\",\n                            },\n                            \"type\": \"text\",\n                            \"slug\": \"<value>\",\n                            \"name\": \"<value>\",\n                            \"organization_id\": \"<value>\",\n                            \"properties\": {},\n                        },\n                        \"order\": 63475,\n                        \"required\": True,\n                    },\n                    {\n                        \"custom_field_id\": \"<value>\",\n                        \"custom_field\": {\n                            \"created_at\": dateutil.parser.isoparse(\"2024-10-25T16:43:54.572Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2023-06-30T10:25:57.370Z\"),\n                            \"id\": \"<value>\",\n                            \"metadata\": {\n                                \"key\": \"<value>\",\n                            },\n                            \"type\": \"text\",\n                            \"slug\": \"<value>\",\n                            \"name\": \"<value>\",\n                            \"organization_id\": \"<value>\",\n                            \"properties\": {},\n                        },\n                        \"order\": 436843,\n                        \"required\": True,\n                    },\n                ],\n            },\n            price={\n                \"created_at\": dateutil.parser.isoparse(\"2025-04-10T09:20:53.588Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2025-07-20T00:25:29.865Z\"),\n                \"id\": \"<value>\",\n                \"amount_type\": \"custom\",\n                \"is_archived\": False,\n                \"product_id\": \"<value>\",\n                \"type\": polar_sdk.ProductPriceType.ONE_TIME,\n                \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                \"price_currency\": \"<value>\",\n                \"minimum_amount\": 374556,\n                \"maximum_amount\": 385209,\n                \"preset_amount\": 613688,\n            },\n            discount={\n                \"duration\": polar_sdk.DiscountDuration.FOREVER,\n                \"type\": polar_sdk.DiscountType.FIXED,\n                \"amount\": 80847,\n                \"currency\": \"Leone\",\n                \"created_at\": dateutil.parser.isoparse(\"2024-10-04T15:58:28.010Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2023-10-23T10:13:26.881Z\"),\n                \"id\": \"<value>\",\n                \"metadata\": {\n                    \"key\": 156123,\n                    \"key1\": False,\n                },\n                \"name\": \"<value>\",\n                \"code\": \"<value>\",\n                \"starts_at\": dateutil.parser.isoparse(\"2024-01-03T19:38:21.378Z\"),\n                \"ends_at\": dateutil.parser.isoparse(\"2023-06-25T15:31:04.595Z\"),\n                \"max_redemptions\": 915224,\n                \"redemptions_count\": 505961,\n                \"organization_id\": \"<value>\",\n            },\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.uncanceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_uncanceled_post(request=polar_sdk.WebhookSubscriptionUncanceledPayload(\n        type=\"subscription.uncanceled\",\n        data=polar_sdk.Subscription(\n            created_at=dateutil.parser.isoparse(\"2024-06-17T13:11:57.598Z\"),\n            modified_at=dateutil.parser.isoparse(\"2025-03-19T00:33:29.972Z\"),\n            id=\"<value>\",\n            amount=243909,\n            currency=\"Swiss Franc\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            status=polar_sdk.SubscriptionStatus.PAST_DUE,\n            current_period_start=dateutil.parser.isoparse(\"2025-04-10T22:53:35.005Z\"),\n            current_period_end=dateutil.parser.isoparse(\"2025-11-06T14:37:36.152Z\"),\n            cancel_at_period_end=False,\n            canceled_at=dateutil.parser.isoparse(\"2025-11-20T17:26:51.612Z\"),\n            started_at=dateutil.parser.isoparse(\"2023-03-17T23:30:29.508Z\"),\n            ends_at=dateutil.parser.isoparse(\"2024-09-26T10:53:58.966Z\"),\n            ended_at=dateutil.parser.isoparse(\"2023-07-03T15:11:27.108Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            price_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.LOW_QUALITY,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n                \"key\": 21399,\n                \"key1\": \"<value>\",\n            },\n            customer={\n                \"created_at\": dateutil.parser.isoparse(\"2023-12-13T17:38:34.053Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2025-01-30T22:08:30.455Z\"),\n                \"id\": \"<value>\",\n                \"metadata\": {\n\n                },\n                \"external_id\": \"<id>\",\n                \"email\": \"Tess.Veum@yahoo.com\",\n                \"email_verified\": False,\n                \"name\": \"<value>\",\n                \"billing_address\": {\n                    \"country\": \"Bangladesh\",\n                },\n                \"tax_id\": [\n                    \"us_ein\",\n                    \"jp_trn\",\n                    \"ca_gst_hst\",\n                ],\n                \"organization_id\": \"<value>\",\n                \"avatar_url\": \"https://direct-ferret.org/\",\n            },\n            user_id=\"<value>\",\n            user={\n                \"id\": \"<value>\",\n                \"email\": \"Everardo_Wilkinson@yahoo.com\",\n                \"public_name\": \"<value>\",\n            },\n            product={\n                \"created_at\": dateutil.parser.isoparse(\"2023-03-30T10:41:05.586Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2025-10-18T00:21:05.189Z\"),\n                \"id\": \"<value>\",\n                \"name\": \"<value>\",\n                \"description\": \"fully pepper hm jovially outside coal bah fax midst\",\n                \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                \"is_recurring\": False,\n                \"is_archived\": True,\n                \"organization_id\": \"<value>\",\n                \"metadata\": {\n                    \"key\": True,\n                    \"key1\": 737248,\n                    \"key2\": \"<value>\",\n                },\n                \"prices\": [\n\n                ],\n                \"benefits\": [\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2023-07-07T10:48:19.585Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2024-03-27T14:57:46.256Z\"),\n                        \"id\": \"<value>\",\n                        \"type\": \"custom\",\n                        \"description\": \"even record ick misappropriate toe grouchy tough why\",\n                        \"selectable\": False,\n                        \"deletable\": False,\n                        \"organization_id\": \"<value>\",\n                        \"properties\": {\n                            \"note\": \"<value>\",\n                        },\n                        \"is_tax_applicable\": False,\n                    },\n                ],\n                \"medias\": [\n                    {\n                        \"id\": \"<value>\",\n                        \"organization_id\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"path\": \"/usr/src\",\n                        \"mime_type\": \"<value>\",\n                        \"size\": 297045,\n                        \"storage_version\": \"<value>\",\n                        \"checksum_etag\": \"<value>\",\n                        \"checksum_sha256_base64\": \"<value>\",\n                        \"checksum_sha256_hex\": \"<value>\",\n                        \"last_modified_at\": dateutil.parser.isoparse(\"2023-10-31T23:41:23.146Z\"),\n                        \"version\": \"<value>\",\n                        \"service\": \"product_media\",\n                        \"is_uploaded\": True,\n                        \"created_at\": dateutil.parser.isoparse(\"2025-09-28T06:56:53.284Z\"),\n                        \"size_readable\": \"<value>\",\n                        \"public_url\": \"https://quarrelsome-cauliflower.com/\",\n                    },\n                    {\n                        \"id\": \"<value>\",\n                        \"organization_id\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"path\": \"/var/spool\",\n                        \"mime_type\": \"<value>\",\n                        \"size\": 364012,\n                        \"storage_version\": \"<value>\",\n                        \"checksum_etag\": \"<value>\",\n                        \"checksum_sha256_base64\": \"<value>\",\n                        \"checksum_sha256_hex\": \"<value>\",\n                        \"last_modified_at\": dateutil.parser.isoparse(\"2023-12-04T23:56:43.538Z\"),\n                        \"version\": \"<value>\",\n                        \"service\": \"product_media\",\n                        \"is_uploaded\": True,\n                        \"created_at\": dateutil.parser.isoparse(\"2023-05-30T06:21:31.559Z\"),\n                        \"size_readable\": \"<value>\",\n                        \"public_url\": \"https://illiterate-airline.org/\",\n                    },\n                    {\n                        \"id\": \"<value>\",\n                        \"organization_id\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"path\": \"/usr/include\",\n                        \"mime_type\": \"<value>\",\n                        \"size\": 597598,\n                        \"storage_version\": \"<value>\",\n                        \"checksum_etag\": \"<value>\",\n                        \"checksum_sha256_base64\": \"<value>\",\n                        \"checksum_sha256_hex\": \"<value>\",\n                        \"last_modified_at\": dateutil.parser.isoparse(\"2023-06-18T04:43:20.642Z\"),\n                        \"version\": \"<value>\",\n                        \"service\": \"product_media\",\n                        \"is_uploaded\": True,\n                        \"created_at\": dateutil.parser.isoparse(\"2023-04-29T23:28:30.708Z\"),\n                        \"size_readable\": \"<value>\",\n                        \"public_url\": \"https://ugly-unique.name\",\n                    },\n                ],\n                \"attached_custom_fields\": [\n                    {\n                        \"custom_field_id\": \"<value>\",\n                        \"custom_field\": {\n                            \"created_at\": dateutil.parser.isoparse(\"2025-10-15T00:12:13.325Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2024-12-21T23:06:09.697Z\"),\n                            \"id\": \"<value>\",\n                            \"metadata\": {\n                                \"key\": \"<value>\",\n                            },\n                            \"type\": \"number\",\n                            \"slug\": \"<value>\",\n                            \"name\": \"<value>\",\n                            \"organization_id\": \"<value>\",\n                            \"properties\": {},\n                        },\n                        \"order\": 756036,\n                        \"required\": True,\n                    },\n                    {\n                        \"custom_field_id\": \"<value>\",\n                        \"custom_field\": {\n                            \"created_at\": dateutil.parser.isoparse(\"2025-10-24T08:25:56.079Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2023-09-30T20:08:09.304Z\"),\n                            \"id\": \"<value>\",\n                            \"metadata\": {\n                                \"key\": False,\n                            },\n                            \"type\": \"select\",\n                            \"slug\": \"<value>\",\n                            \"name\": \"<value>\",\n                            \"organization_id\": \"<value>\",\n                            \"properties\": {\n                                \"options\": [\n                                    {\n                                        \"value\": \"<value>\",\n                                        \"label\": \"<value>\",\n                                    },\n                                ],\n                            },\n                        },\n                        \"order\": 123447,\n                        \"required\": True,\n                    },\n                ],\n            },\n            price={\n                \"created_at\": dateutil.parser.isoparse(\"2024-02-14T18:38:24.900Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2024-02-21T00:12:57.498Z\"),\n                \"id\": \"<value>\",\n                \"amount_type\": \"custom\",\n                \"is_archived\": False,\n                \"product_id\": \"<value>\",\n                \"type\": polar_sdk.ProductPriceType.RECURRING,\n                \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                \"price_currency\": \"<value>\",\n                \"minimum_amount\": 258418,\n                \"maximum_amount\": 31232,\n                \"preset_amount\": 383685,\n            },\n            discount={\n                \"duration\": polar_sdk.DiscountDuration.ONCE,\n                \"duration_in_months\": 124703,\n                \"type\": polar_sdk.DiscountType.FIXED,\n                \"amount\": 999504,\n                \"currency\": \"Kina\",\n                \"created_at\": dateutil.parser.isoparse(\"2025-06-23T01:13:00.462Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2023-12-24T01:11:49.705Z\"),\n                \"id\": \"<value>\",\n                \"metadata\": {\n                    \"key\": \"<value>\",\n                    \"key1\": \"<value>\",\n                },\n                \"name\": \"<value>\",\n                \"code\": \"<value>\",\n                \"starts_at\": dateutil.parser.isoparse(\"2025-11-14T22:48:21.529Z\"),\n                \"ends_at\": dateutil.parser.isoparse(\"2023-01-05T01:25:46.479Z\"),\n                \"max_redemptions\": 140123,\n                \"redemptions_count\": 513004,\n                \"organization_id\": \"<value>\",\n            },\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_updated_post(request=polar_sdk.WebhookSubscriptionUpdatedPayload(\n        type=\"subscription.updated\",\n        data=polar_sdk.Subscription(\n            created_at=dateutil.parser.isoparse(\"2023-08-16T06:35:49.390Z\"),\n            modified_at=dateutil.parser.isoparse(\"2025-11-13T10:48:05.575Z\"),\n            id=\"<value>\",\n            amount=299644,\n            currency=\"Baht\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n            status=polar_sdk.SubscriptionStatus.TRIALING,\n            current_period_start=dateutil.parser.isoparse(\"2025-10-06T07:01:55.000Z\"),\n            current_period_end=dateutil.parser.isoparse(\"2025-01-20T06:59:31.349Z\"),\n            cancel_at_period_end=False,\n            canceled_at=dateutil.parser.isoparse(\"2023-10-04T04:56:04.382Z\"),\n            started_at=dateutil.parser.isoparse(\"2023-01-22T12:57:07.430Z\"),\n            ends_at=dateutil.parser.isoparse(\"2025-08-08T17:53:12.513Z\"),\n            ended_at=dateutil.parser.isoparse(\"2023-10-08T02:40:52.099Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            price_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.TOO_EXPENSIVE,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n                \"key\": 394013,\n            },\n            customer={\n                \"created_at\": dateutil.parser.isoparse(\"2025-09-14T04:37:19.722Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2025-03-24T00:03:13.207Z\"),\n                \"id\": \"<value>\",\n                \"metadata\": {\n                    \"key\": \"<value>\",\n                    \"key1\": True,\n                    \"key2\": 392900,\n                },\n                \"external_id\": \"<id>\",\n                \"email\": \"Dominic.Toy27@yahoo.com\",\n                \"email_verified\": False,\n                \"name\": \"<value>\",\n                \"billing_address\": {\n                    \"country\": \"Sweden\",\n                },\n                \"tax_id\": [\n                    \"mx_rfc\",\n                    \"gb_vat\",\n                    \"<id>\",\n                ],\n                \"organization_id\": \"<value>\",\n                \"avatar_url\": \"https://worthy-place.biz\",\n            },\n            user_id=\"<value>\",\n            user={\n                \"id\": \"<value>\",\n                \"email\": \"Domenico_Franecki46@hotmail.com\",\n                \"public_name\": \"<value>\",\n            },\n            product={\n                \"created_at\": dateutil.parser.isoparse(\"2024-06-11T14:55:33.574Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2023-06-02T07:14:13.619Z\"),\n                \"id\": \"<value>\",\n                \"name\": \"<value>\",\n                \"description\": \"intent that yowza\",\n                \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                \"is_recurring\": False,\n                \"is_archived\": False,\n                \"organization_id\": \"<value>\",\n                \"metadata\": {\n\n                },\n                \"prices\": [\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2023-11-25T09:50:52.301Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2025-06-16T22:58:18.488Z\"),\n                        \"id\": \"<value>\",\n                        \"amount_type\": \"free\",\n                        \"is_archived\": False,\n                        \"product_id\": \"<value>\",\n                        \"type\": \"recurring\",\n                        \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                        \"legacy\": True,\n                    },\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2025-01-20T06:59:31.349Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2025-10-02T11:51:36.131Z\"),\n                        \"id\": \"<value>\",\n                        \"amount_type\": \"free\",\n                        \"is_archived\": False,\n                        \"product_id\": \"<value>\",\n                        \"type\": \"recurring\",\n                        \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        \"legacy\": True,\n                    },\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2023-10-08T02:40:52.099Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2024-11-17T00:23:52.590Z\"),\n                        \"id\": \"<value>\",\n                        \"amount_type\": \"free\",\n                        \"is_archived\": False,\n                        \"product_id\": \"<value>\",\n                        \"type\": \"recurring\",\n                        \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        \"legacy\": True,\n                    },\n                ],\n                \"benefits\": [\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2024-03-07T20:06:27.705Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2025-09-14T04:37:19.722Z\"),\n                        \"id\": \"<value>\",\n                        \"type\": \"discord\",\n                        \"description\": \"though ski freely really caption intent that yowza\",\n                        \"selectable\": False,\n                        \"deletable\": False,\n                        \"organization_id\": \"<value>\",\n                        \"properties\": {\n                            \"guild_id\": \"<id>\",\n                            \"role_id\": \"<id>\",\n                            \"guild_token\": \"<value>\",\n                        },\n                    },\n                    {\n                        \"created_at\": dateutil.parser.isoparse(\"2025-02-15T13:33:22.624Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2024-10-23T16:11:02.880Z\"),\n                        \"id\": \"<value>\",\n                        \"type\": \"ads\",\n                        \"description\": \"meanwhile unique shoddy whether\",\n                        \"selectable\": False,\n                        \"deletable\": False,\n                        \"organization_id\": \"<value>\",\n                        \"properties\": {\n                            \"image_height\": 400,\n                            \"image_width\": 400,\n                        },\n                    },\n                ],\n                \"medias\": [\n                    {\n                        \"id\": \"<value>\",\n                        \"organization_id\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"path\": \"/etc/periodic\",\n                        \"mime_type\": \"<value>\",\n                        \"size\": 982857,\n                        \"storage_version\": \"<value>\",\n                        \"checksum_etag\": \"<value>\",\n                        \"checksum_sha256_base64\": \"<value>\",\n                        \"checksum_sha256_hex\": \"<value>\",\n                        \"last_modified_at\": dateutil.parser.isoparse(\"2024-01-10T04:34:23.991Z\"),\n                        \"version\": \"<value>\",\n                        \"service\": \"product_media\",\n                        \"is_uploaded\": True,\n                        \"created_at\": dateutil.parser.isoparse(\"2023-09-24T05:10:51.411Z\"),\n                        \"size_readable\": \"<value>\",\n                        \"public_url\": \"https://gaseous-scorpion.net\",\n                    },\n                    {\n                        \"id\": \"<value>\",\n                        \"organization_id\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"path\": \"/bin\",\n                        \"mime_type\": \"<value>\",\n                        \"size\": 900741,\n                        \"storage_version\": \"<value>\",\n                        \"checksum_etag\": \"<value>\",\n                        \"checksum_sha256_base64\": \"<value>\",\n                        \"checksum_sha256_hex\": \"<value>\",\n                        \"last_modified_at\": dateutil.parser.isoparse(\"2025-06-03T14:50:28.387Z\"),\n                        \"version\": \"<value>\",\n                        \"service\": \"product_media\",\n                        \"is_uploaded\": True,\n                        \"created_at\": dateutil.parser.isoparse(\"2025-03-17T21:34:29.382Z\"),\n                        \"size_readable\": \"<value>\",\n                        \"public_url\": \"https://fatal-adrenalin.org\",\n                    },\n                    {\n                        \"id\": \"<value>\",\n                        \"organization_id\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"path\": \"/private/tmp\",\n                        \"mime_type\": \"<value>\",\n                        \"size\": 964994,\n                        \"storage_version\": \"<value>\",\n                        \"checksum_etag\": \"<value>\",\n                        \"checksum_sha256_base64\": \"<value>\",\n                        \"checksum_sha256_hex\": \"<value>\",\n                        \"last_modified_at\": dateutil.parser.isoparse(\"2024-08-02T02:45:10.380Z\"),\n                        \"version\": \"<value>\",\n                        \"service\": \"product_media\",\n                        \"is_uploaded\": False,\n                        \"created_at\": dateutil.parser.isoparse(\"2025-04-01T15:44:20.788Z\"),\n                        \"size_readable\": \"<value>\",\n                        \"public_url\": \"https://bruised-bid.net/\",\n                    },\n                ],\n                \"attached_custom_fields\": [\n                    {\n                        \"custom_field_id\": \"<value>\",\n                        \"custom_field\": {\n                            \"created_at\": dateutil.parser.isoparse(\"2025-01-08T14:04:12.750Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2023-06-03T02:13:26.324Z\"),\n                            \"id\": \"<value>\",\n                            \"metadata\": {\n                                \"key\": False,\n                            },\n                            \"type\": \"number\",\n                            \"slug\": \"<value>\",\n                            \"name\": \"<value>\",\n                            \"organization_id\": \"<value>\",\n                            \"properties\": {},\n                        },\n                        \"order\": 456613,\n                        \"required\": True,\n                    },\n                ],\n            },\n            price={\n                \"created_at\": dateutil.parser.isoparse(\"2025-07-17T05:00:37.853Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2025-04-13T10:51:42.560Z\"),\n                \"id\": \"<value>\",\n                \"amount_type\": \"custom\",\n                \"is_archived\": False,\n                \"product_id\": \"<value>\",\n                \"type\": \"recurring\",\n                \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                \"price_currency\": \"<value>\",\n                \"minimum_amount\": 610711,\n                \"maximum_amount\": 874041,\n                \"preset_amount\": 276608,\n                \"legacy\": True,\n            },\n            discount={\n                \"duration\": polar_sdk.DiscountDuration.FOREVER,\n                \"type\": polar_sdk.DiscountType.PERCENTAGE,\n                \"basis_points\": 348833,\n                \"created_at\": dateutil.parser.isoparse(\"2025-01-17T18:55:09.118Z\"),\n                \"modified_at\": dateutil.parser.isoparse(\"2023-08-24T20:25:51.621Z\"),\n                \"id\": \"<value>\",\n                \"metadata\": {\n                    \"key\": True,\n                    \"key1\": 865091,\n                },\n                \"name\": \"<value>\",\n                \"code\": \"<value>\",\n                \"starts_at\": dateutil.parser.isoparse(\"2023-06-05T09:14:00.691Z\"),\n                \"ends_at\": dateutil.parser.isoparse(\"2025-02-12T07:29:32.508Z\"),\n                \"max_redemptions\": 29535,\n                \"redemptions_count\": 59919,\n                \"organization_id\": \"<value>\",\n            },\n        ),\n    ))\n\n    # Handle response\n    print(res)"
