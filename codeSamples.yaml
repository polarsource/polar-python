overlay: 1.0.0
info:
  title: CodeSamples overlay for python target
  version: 0.0.0
actions:
  - target: $["paths"]["/v1/benefits/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/benefits/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.create(request={\n        \"type\": \"downloadables\",\n        \"description\": \"delightfully fumigate convection though zowie up bulky electronics\",\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        \"properties\": {\n            \"files\": [\n                \"<value>\",\n            ],\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/benefits/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.benefits.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/benefits/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/benefits/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.update(id=\"<value>\", request_body={\n        \"type\": \"meter_credit\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/benefits/{id}/grants"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.grants(id=\"<value>\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/checkout-links/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/checkout-links/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.create(request={\n        \"payment_processor\": \"stripe\",\n        \"allow_discount_codes\": True,\n        \"require_billing_address\": False,\n        \"product_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkout-links/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.checkout_links.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/checkout-links/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkout-links/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.update(id=\"<value>\", checkout_link_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/checkouts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.create(request={\n        \"customer_billing_address\": {\n            \"country\": \"SE\",\n        },\n        \"products\": [\n            \"<value>\",\n            \"<value>\",\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.checkouts.client_get(client_secret=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.checkouts.client_update(client_secret=\"<value>\", checkout_update_public={\n        \"customer_billing_address\": {\n            \"country\": \"FR\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}/confirm"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.client_confirm(client_secret=\"<value>\", checkout_confirm_stripe={\n        \"customer_billing_address\": {\n            \"country\": \"FR\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.update(id=\"<value>\", checkout_update={\n        \"customer_billing_address\": {\n            \"country\": \"FR\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/custom-fields/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/custom-fields/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.create(request={\n        \"type\": \"number\",\n        \"slug\": \"<value>\",\n        \"name\": \"<value>\",\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        \"properties\": {},\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/custom-fields/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.custom_fields.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/custom-fields/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/custom-fields/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.update(id=\"<value>\", custom_field_update={\n        \"type\": \"text\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customer_meters.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customer_meters.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.benefit_grants.list(security=polar_sdk.CustomerPortalBenefitGrantsListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.benefit_grants.get(security=polar_sdk.CustomerPortalBenefitGrantsGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.benefit_grants.update(security=polar_sdk.CustomerPortalBenefitGrantsUpdateSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\", customer_benefit_grant_update={\n        \"benefit_type\": \"meter_credit\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.get(security=polar_sdk.CustomerPortalCustomersGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.update(security=polar_sdk.CustomerPortalCustomersUpdateSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), request={\n        \"billing_address\": {\n            \"country\": \"FR\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.get_payment_methods(security=polar_sdk.CustomerPortalCustomersGetPaymentMethodsSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ))\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.add_payment_method(security=polar_sdk.CustomerPortalCustomersAddPaymentMethodSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), request={\n        \"confirmation_token_id\": \"<id>\",\n        \"set_default\": False,\n        \"return_url\": \"https://slight-digestive.info\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    polar.customer_portal.customers.delete_payment_method(security=polar_sdk.CustomerPortalCustomersDeletePaymentMethodSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<id>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customer-portal/downloadables/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.downloadables.list(security=polar_sdk.CustomerPortalDownloadablesListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/downloadables/{token}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.downloadables.get(token=\"<value>\")\n\n    assert res is not None\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/license-keys/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.list(security=polar_sdk.CustomerPortalLicenseKeysListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/license-keys/activate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.activate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n        \"label\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/license-keys/deactivate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    polar.customer_portal.license_keys.deactivate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n        \"activation_id\": \"<value>\",\n    })\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customer-portal/license-keys/validate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.validate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.get(security=polar_sdk.CustomerPortalLicenseKeysGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customer_meters.list(security=polar_sdk.CustomerPortalCustomerMetersListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ))\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customer_meters.get(security=polar_sdk.CustomerPortalCustomerMetersGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.list(security=polar_sdk.CustomerPortalOrdersListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.get(security=polar_sdk.CustomerPortalOrdersGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.invoice(security=polar_sdk.CustomerPortalOrdersInvoiceSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/organizations/{slug}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customer_portal.organizations.get(slug=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.list(security=polar_sdk.CustomerPortalSubscriptionsListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.cancel(security=polar_sdk.CustomerPortalSubscriptionsCancelSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.get(security=polar_sdk.CustomerPortalSubscriptionsGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.update(security=polar_sdk.CustomerPortalSubscriptionsUpdateSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\", customer_subscription_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-sessions/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customer_sessions.create(request={\n        \"customer_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customers/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.create(request={\n        \"external_id\": \"usr_1337\",\n        \"email\": \"customer@example.com\",\n        \"name\": \"John Doe\",\n        \"billing_address\": {\n            \"country\": \"SE\",\n        },\n        \"tax_id\": [\n            \"FR61954506077\",\n            \"eu_vat\",\n        ],\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.customers.delete_external(external_id=\"<id>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customers/external/{external_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get_external(external_id=\"<id>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.update_external(external_id=\"<id>\", customer_update={\n        \"external_id\": \"usr_1337\",\n        \"email\": \"customer@example.com\",\n        \"name\": \"John Doe\",\n        \"billing_address\": {\n            \"country\": \"US\",\n        },\n        \"tax_id\": [\n            \"FR61954506077\",\n            \"eu_vat\",\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/external/{external_id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get_state_external(external_id=\"<id>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.customers.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customers/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.update(id=\"<value>\", customer_update={\n        \"external_id\": \"usr_1337\",\n        \"email\": \"customer@example.com\",\n        \"name\": \"John Doe\",\n        \"billing_address\": {\n            \"country\": \"FR\",\n        },\n        \"tax_id\": [\n            \"FR61954506077\",\n            \"eu_vat\",\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/{id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get_state(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/discounts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/discounts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.create(request={\n        \"duration\": polar_sdk.DiscountDuration.FOREVER,\n        \"duration_in_months\": 417458,\n        \"type\": polar_sdk.DiscountType.FIXED,\n        \"amount\": 69025,\n        \"currency\": \"usd\",\n        \"name\": \"<value>\",\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/discounts/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.discounts.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/discounts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/discounts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.update(id=\"<value>\", discount_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/events/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/events/ingest"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.ingest(request={\n        \"events\": [\n            {\n                \"name\": \"<value>\",\n                \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                \"customer_id\": \"<value>\",\n            },\n            {\n                \"name\": \"<value>\",\n                \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                \"external_customer_id\": \"<id>\",\n            },\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/events/names"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.list_names(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/events/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/files/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/files/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.create(request={\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        \"name\": \"<value>\",\n        \"mime_type\": \"<value>\",\n        \"size\": 638424,\n        \"upload\": {\n            \"parts\": [\n                {\n                    \"number\": 417458,\n                    \"chunk_start\": 134365,\n                    \"chunk_end\": 69025,\n                },\n            ],\n        },\n        \"service\": \"organization_avatar\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/files/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.files.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/files/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.update(id=\"<value>\", file_patch={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/files/{id}/uploaded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.uploaded(id=\"<value>\", file_upload_completed={\n        \"id\": \"<id>\",\n        \"path\": \"/sys\",\n        \"parts\": [\n            {\n                \"number\": 173116,\n                \"checksum_etag\": \"<value>\",\n                \"checksum_sha256_base64\": \"<value>\",\n            },\n            {\n                \"number\": 894030,\n                \"checksum_etag\": \"<value>\",\n                \"checksum_sha256_base64\": \"<value>\",\n            },\n            {\n                \"number\": 673715,\n                \"checksum_etag\": \"<value>\",\n                \"checksum_sha256_base64\": \"<value>\",\n            },\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/license-keys"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/license-keys/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.update(id=\"<value>\", license_key_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/license-keys/{id}/activations/{activation_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.get_activation(id=\"<value>\", activation_id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/meters/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.create(request={\n        \"name\": \"<value>\",\n        \"filter_\": {\n            \"conjunction\": polar_sdk.FilterConjunction.AND,\n            \"clauses\": [],\n        },\n        \"aggregation\": {\n            \"func\": polar_sdk.Func.SUM,\n            \"property\": \"<value>\",\n        },\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.update(id=\"<value>\", meter_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/{id}/quantities"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.quantities(id=\"<value>\", start_timestamp=dateutil.parser.isoparse(\"2023-09-17T00:45:34.608Z\"), end_timestamp=dateutil.parser.isoparse(\"2023-07-21T18:11:39.069Z\"), interval=polar_sdk.TimeInterval.HOUR)\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/metrics/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.metrics.get(start_date=dateutil.parser.parse(\"2025-02-06\").date(), end_date=dateutil.parser.parse(\"2024-09-04\").date(), interval=polar_sdk.TimeInterval.WEEK, organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/metrics/limits"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.metrics.limits()\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.clients.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/oauth2/authorize"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.authorize()\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/introspect"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.oauth2.introspect(request={\n        \"token\": \"<value>\",\n        \"client_id\": \"<id>\",\n        \"client_secret\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/register"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.clients.create(request={\n        \"redirect_uris\": [\n            \"https://inferior-chainstay.com\",\n        ],\n        \"client_name\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.clients.delete(client_id=\"<id>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.clients.get(client_id=\"<id>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["put"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.clients.update(client_id=\"<id>\", o_auth2_client_configuration_update={\n        \"redirect_uris\": [\n            \"https://grown-worth.name\",\n            \"https://worthwhile-avalanche.org/\",\n            \"https://general-digit.com/\",\n        ],\n        \"client_name\": \"<value>\",\n        \"client_id\": \"<id>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/revoke"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.oauth2.revoke(request={\n        \"token\": \"<value>\",\n        \"client_id\": \"<id>\",\n        \"client_secret\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/token"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.oauth2.token(request={\n        \"grant_type\": \"authorization_code\",\n        \"client_id\": \"<id>\",\n        \"client_secret\": \"<value>\",\n        \"code\": \"<value>\",\n        \"redirect_uri\": \"https://old-fort.name\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/userinfo"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.userinfo()\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.orders.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.orders.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.orders.invoice(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/organizations/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.list()\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/organizations/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.create(request={\n        \"name\": \"<value>\",\n        \"slug\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/organizations/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.get(id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/organizations/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.update(id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", organization_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/products/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.create(request={\n        \"name\": \"<value>\",\n        \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n        \"prices\": [\n            {\n                \"amount_type\": \"custom\",\n                \"price_currency\": \"usd\",\n            },\n            {\n                \"amount_type\": \"free\",\n            },\n        ],\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.update(id=\"<value>\", product_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/{id}/benefits"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.update_benefits(id=\"<value>\", product_benefits_update={\n        \"benefits\": [\n            \"<value>\",\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/refunds/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.refunds.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/refunds/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.refunds.create(request={\n        \"order_id\": \"<value>\",\n        \"reason\": polar_sdk.RefundReason.CUSTOMER_REQUEST,\n        \"amount\": 638424,\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.list(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/subscriptions/export"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.export(organization_id=[\n        \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ])\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.revoke(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.update(id=\"<value>\", subscription_update={\n        \"revoke\": True,\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_created_post(request={\n        \"type\": \"benefit.created\",\n        \"data\": {\n            \"id\": \"<value>\",\n            \"created_at\": dateutil.parser.isoparse(\"2023-04-15T11:45:18.891Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2025-06-17T12:04:55.002Z\"),\n            \"type\": \"license_keys\",\n            \"description\": \"vastly lest but\",\n            \"selectable\": False,\n            \"deletable\": False,\n            \"organization_id\": \"<value>\",\n            \"metadata\": {\n                \"key\": 87417,\n            },\n            \"properties\": {\n                \"prefix\": \"<value>\",\n                \"expires\": {\n                    \"ttl\": 565064,\n                    \"timeframe\": polar_sdk.Timeframe.MONTH,\n                },\n                \"activations\": {\n                    \"limit\": 251765,\n                    \"enable_customer_admin\": False,\n                },\n                \"limit_usage\": 345169,\n            },\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_updated_post(request={\n        \"type\": \"benefit.updated\",\n        \"data\": {\n            \"id\": \"<value>\",\n            \"created_at\": dateutil.parser.isoparse(\"2025-11-19T14:31:03.333Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2023-08-21T02:54:25.671Z\"),\n            \"type\": \"downloadables\",\n            \"description\": \"merge when gratefully sparse hmph throughout honesty untried gripping um\",\n            \"selectable\": False,\n            \"deletable\": False,\n            \"organization_id\": \"<value>\",\n            \"metadata\": {\n                \"key\": 9593.26,\n            },\n            \"properties\": {\n                \"archived\": {\n                    \"key\": False,\n                },\n                \"files\": [\n                    \"<value>\",\n                ],\n            },\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_created_post(request=polar_sdk.WebhookBenefitGrantCreatedPayload(\n        data=polar_sdk.BenefitGrantWebhook(\n            created_at=dateutil.parser.isoparse(\"2025-01-04T13:03:27.870Z\"),\n            modified_at=dateutil.parser.isoparse(\"2023-05-08T00:47:14.556Z\"),\n            id=\"<value>\",\n            is_granted=True,\n            is_revoked=False,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer=polar_sdk.Customer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2025-08-25T12:22:42.430Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-03-03T22:39:55.256Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"SE\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2023-04-05T03:50:05.028Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            properties=polar_sdk.BenefitGrantDiscordProperties(),\n            benefit=polar_sdk.BenefitLicenseKeys(\n                id=\"<value>\",\n                created_at=dateutil.parser.isoparse(\"2023-05-08T00:47:14.556Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-02-20T12:28:33.166Z\"),\n                description=\"ick form ack lest plus worriedly gifted\",\n                selectable=False,\n                deletable=False,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": 266305,\n                },\n                properties=polar_sdk.BenefitLicenseKeysProperties(\n                    prefix=\"<value>\",\n                    expires=polar_sdk.BenefitLicenseKeyExpirationProperties(\n                        ttl=363847,\n                        timeframe=polar_sdk.Timeframe.YEAR,\n                    ),\n                    activations=polar_sdk.BenefitLicenseKeyActivationProperties(\n                        limit=426577,\n                        enable_customer_admin=False,\n                    ),\n                    limit_usage=931627,\n                ),\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.cycled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_cycled_post(request=polar_sdk.WebhookBenefitGrantCycledPayload(\n        data=polar_sdk.BenefitGrantWebhook(\n            created_at=dateutil.parser.isoparse(\"2024-09-17T22:29:23.174Z\"),\n            modified_at=dateutil.parser.isoparse(\"2025-06-14T11:07:13.305Z\"),\n            id=\"<value>\",\n            is_granted=False,\n            is_revoked=True,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer=polar_sdk.Customer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2024-11-28T04:36:34.627Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-12-06T09:05:10.912Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"FR61954506077\",\n                    \"eu_vat\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2025-10-18T02:05:35.631Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            properties=polar_sdk.BenefitGrantDiscordProperties(),\n            benefit=polar_sdk.BenefitDownloadables(\n                id=\"<value>\",\n                created_at=dateutil.parser.isoparse(\"2025-06-14T11:07:13.305Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-10-15T03:09:38.180Z\"),\n                description=\"miskey ha alongside\",\n                selectable=False,\n                deletable=False,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": \"<value>\",\n                },\n                properties=polar_sdk.BenefitDownloadablesProperties(\n                    archived={\n                        \"key\": False,\n                    },\n                    files=[\n                        \"<value>\",\n                    ],\n                ),\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_revoked_post(request=polar_sdk.WebhookBenefitGrantRevokedPayload(\n        data=polar_sdk.BenefitGrantWebhook(\n            created_at=dateutil.parser.isoparse(\"2025-03-12T10:35:36.881Z\"),\n            modified_at=dateutil.parser.isoparse(\"2025-04-12T13:10:16.426Z\"),\n            id=\"<value>\",\n            is_granted=True,\n            is_revoked=False,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer=polar_sdk.Customer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2025-03-29T21:56:48.008Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-07-18T16:16:40.562Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"FR\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2024-11-01T21:51:36.732Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            properties=polar_sdk.BenefitGrantDiscordProperties(),\n            benefit=polar_sdk.BenefitLicenseKeys(\n                id=\"<value>\",\n                created_at=dateutil.parser.isoparse(\"2025-04-12T13:10:16.426Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-03-08T05:20:11.943Z\"),\n                description=\"incidentally immense scotch meh quaff generously supposing however ugh kindly\",\n                selectable=False,\n                deletable=False,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": False,\n                },\n                properties=polar_sdk.BenefitLicenseKeysProperties(\n                    prefix=\"<value>\",\n                    expires=polar_sdk.BenefitLicenseKeyExpirationProperties(\n                        ttl=688374,\n                        timeframe=polar_sdk.Timeframe.DAY,\n                    ),\n                    activations=polar_sdk.BenefitLicenseKeyActivationProperties(\n                        limit=24670,\n                        enable_customer_admin=False,\n                    ),\n                    limit_usage=168330,\n                ),\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_updated_post(request=polar_sdk.WebhookBenefitGrantUpdatedPayload(\n        data=polar_sdk.BenefitGrantWebhook(\n            created_at=dateutil.parser.isoparse(\"2025-01-02T13:54:42.243Z\"),\n            modified_at=dateutil.parser.isoparse(\"2024-02-25T11:58:59.486Z\"),\n            id=\"<value>\",\n            is_granted=False,\n            is_revoked=False,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer=polar_sdk.Customer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2025-08-08T07:44:28.757Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-08-31T04:19:19.970Z\"),\n                metadata={\n                    \"key\": \"<value>\",\n                    \"key1\": 5493.71,\n                    \"key2\": 5023.5,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"FR\",\n                ),\n                tax_id=[\n                    \"FR61954506077\",\n                    \"eu_vat\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2024-07-15T16:39:59.264Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            properties=polar_sdk.BenefitGrantDiscordProperties(),\n            benefit=polar_sdk.BenefitLicenseKeys(\n                id=\"<value>\",\n                created_at=dateutil.parser.isoparse(\"2024-02-25T11:58:59.486Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-04-04T12:08:04.168Z\"),\n                description=\"oil painfully spring requirement import lest to tragic\",\n                selectable=False,\n                deletable=False,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": 2564.11,\n                },\n                properties=polar_sdk.BenefitLicenseKeysProperties(\n                    prefix=\"<value>\",\n                    expires=polar_sdk.BenefitLicenseKeyExpirationProperties(\n                        ttl=475574,\n                        timeframe=polar_sdk.Timeframe.YEAR,\n                    ),\n                    activations=polar_sdk.BenefitLicenseKeyActivationProperties(\n                        limit=670311,\n                        enable_customer_admin=False,\n                    ),\n                    limit_usage=601222,\n                ),\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["checkout.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcheckout_created_post(request=polar_sdk.WebhookCheckoutCreatedPayload(\n        data=polar_sdk.Checkout(\n            created_at=dateutil.parser.isoparse(\"2025-11-12T14:26:42.882Z\"),\n            modified_at=dateutil.parser.isoparse(\"2024-05-27T05:08:06.235Z\"),\n            id=\"<value>\",\n            payment_processor=polar_sdk.PaymentProcessor.STRIPE,\n            status=polar_sdk.CheckoutStatus.FAILED,\n            client_secret=\"<value>\",\n            url=\"https://heavy-beret.com/\",\n            expires_at=dateutil.parser.isoparse(\"2023-02-25T02:26:48.460Z\"),\n            success_url=\"https://sardonic-final.info/\",\n            embed_origin=\"<value>\",\n            amount=962818,\n            discount_amount=6400,\n            net_amount=426090,\n            tax_amount=648726,\n            total_amount=210702,\n            currency=\"Riel\",\n            product_id=\"<value>\",\n            product_price_id=\"<value>\",\n            discount_id=\"<value>\",\n            allow_discount_codes=False,\n            require_billing_address=False,\n            is_discount_applicable=False,\n            is_free_product_price=False,\n            is_payment_required=False,\n            is_payment_setup_required=False,\n            is_payment_form_required=False,\n            customer_id=\"<value>\",\n            customer_name=\"<value>\",\n            customer_email=\"<value>\",\n            customer_ip_address=\"<value>\",\n            customer_billing_address=polar_sdk.Address(\n                country=\"US\",\n            ),\n            customer_tax_id=\"<id>\",\n            payment_processor_metadata={\n\n            },\n            metadata={\n                \"key\": 366960,\n                \"key1\": False,\n            },\n            customer_external_id=\"<id>\",\n            products=[\n                polar_sdk.CheckoutProduct(\n                    created_at=dateutil.parser.isoparse(\"2023-01-21T11:17:02.173Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-08-14T19:11:10.463Z\"),\n                    id=\"<value>\",\n                    name=\"<value>\",\n                    description=\"accessorise ack pave\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    is_recurring=False,\n                    is_archived=False,\n                    organization_id=\"<value>\",\n                    prices=[\n                        polar_sdk.LegacyRecurringProductPriceFree(\n                            created_at=dateutil.parser.isoparse(\"2023-11-17T00:11:23.972Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2024-02-03T11:05:02.671Z\"),\n                            id=\"<value>\",\n                            is_archived=False,\n                            product_id=\"<value>\",\n                            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        ),\n                        polar_sdk.LegacyRecurringProductPriceCustom(\n                            created_at=dateutil.parser.isoparse(\"2024-06-03T08:42:54.736Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2025-02-14T09:22:19.644Z\"),\n                            id=\"<value>\",\n                            is_archived=False,\n                            product_id=\"<value>\",\n                            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                            price_currency=\"<value>\",\n                            minimum_amount=417896,\n                            maximum_amount=962818,\n                            preset_amount=6400,\n                        ),\n                    ],\n                    benefits=[],\n                    medias=[\n                        polar_sdk.ProductMediaFileRead(\n                            id=\"<value>\",\n                            organization_id=\"<value>\",\n                            name=\"<value>\",\n                            path=\"/media\",\n                            mime_type=\"<value>\",\n                            size=757308,\n                            storage_version=\"<value>\",\n                            checksum_etag=\"<value>\",\n                            checksum_sha256_base64=\"<value>\",\n                            checksum_sha256_hex=\"<value>\",\n                            last_modified_at=dateutil.parser.isoparse(\"2024-07-16T16:32:06.101Z\"),\n                            version=\"<value>\",\n                            is_uploaded=False,\n                            created_at=dateutil.parser.isoparse(\"2025-12-08T10:05:37.208Z\"),\n                            size_readable=\"<value>\",\n                            public_url=\"https://separate-pinstripe.com\",\n                        ),\n                    ],\n                ),\n            ],\n            product=polar_sdk.CheckoutProduct(\n                created_at=dateutil.parser.isoparse(\"2025-08-22T02:17:20.661Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-09-12T19:41:14.261Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"darling lined nephew crank\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=True,\n                is_archived=False,\n                organization_id=\"<value>\",\n                prices=[],\n                benefits=[\n                    polar_sdk.BenefitPublic(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2025-11-18T07:12:26.749Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-08-14T14:29:29.201Z\"),\n                        type=polar_sdk.BenefitType.GITHUB_REPOSITORY,\n                        description=\"phew empty flawed worth radiant anti of blissfully\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                    ),\n                    polar_sdk.BenefitPublic(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2024-03-12T06:20:21.161Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-06-27T20:20:27.400Z\"),\n                        type=polar_sdk.BenefitType.LICENSE_KEYS,\n                        description=\"ack neatly jagged as weekly drat nor why\",\n                        selectable=True,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                    ),\n                    polar_sdk.BenefitPublic(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2024-03-31T07:42:35.077Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-04-30T13:13:01.707Z\"),\n                        type=polar_sdk.BenefitType.GITHUB_REPOSITORY,\n                        description=\"ironclad chilly seriously finger unbearably and bourgeoisie deplore unless\",\n                        selectable=False,\n                        deletable=True,\n                        organization_id=\"<value>\",\n                    ),\n                ],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/usr/share\",\n                        mime_type=\"<value>\",\n                        size=366209,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2024-09-08T17:09:22.377Z\"),\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=dateutil.parser.isoparse(\"2025-01-15T08:45:21.256Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://cumbersome-seafood.net\",\n                    ),\n                ],\n            ),\n            product_price=polar_sdk.LegacyRecurringProductPriceFixed(\n                created_at=dateutil.parser.isoparse(\"2023-08-19T22:18:44.316Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-04-28T23:39:10.699Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                price_currency=\"<value>\",\n                price_amount=598949,\n            ),\n            discount=polar_sdk.CheckoutDiscountPercentageRepeatDuration(\n                duration=polar_sdk.DiscountDuration.FOREVER,\n                duration_in_months=928294,\n                type=polar_sdk.DiscountType.FIXED,\n                basis_points=887018,\n                id=\"<value>\",\n                name=\"<value>\",\n                code=\"<value>\",\n            ),\n            subscription_id=\"<value>\",\n            attached_custom_fields=[\n                polar_sdk.AttachedCustomField(\n                    custom_field_id=\"<value>\",\n                    custom_field=polar_sdk.CustomFieldNumber(\n                        created_at=dateutil.parser.isoparse(\"2025-01-24T18:08:49.597Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-07-22T12:18:02.066Z\"),\n                        id=\"<value>\",\n                        metadata={\n                            \"key\": False,\n                        },\n                        slug=\"<value>\",\n                        name=\"<value>\",\n                        organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        properties=polar_sdk.CustomFieldNumberProperties(),\n                    ),\n                    order=192934,\n                    required=True,\n                ),\n                polar_sdk.AttachedCustomField(\n                    custom_field_id=\"<value>\",\n                    custom_field=polar_sdk.CustomFieldText(\n                        created_at=dateutil.parser.isoparse(\"2023-11-12T09:40:10.044Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-08-29T09:50:00.241Z\"),\n                        id=\"<value>\",\n                        metadata={\n                            \"key\": 3852.18,\n                        },\n                        slug=\"<value>\",\n                        name=\"<value>\",\n                        organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        properties=polar_sdk.CustomFieldTextProperties(),\n                    ),\n                    order=597839,\n                    required=False,\n                ),\n                polar_sdk.AttachedCustomField(\n                    custom_field_id=\"<value>\",\n                    custom_field=polar_sdk.CustomFieldDate(\n                        created_at=dateutil.parser.isoparse(\"2025-06-25T22:47:14.264Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-01-27T19:10:37.564Z\"),\n                        id=\"<value>\",\n                        metadata={\n                            \"key\": 18677,\n                        },\n                        slug=\"<value>\",\n                        name=\"<value>\",\n                        organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        properties=polar_sdk.CustomFieldDateProperties(),\n                    ),\n                    order=660585,\n                    required=False,\n                ),\n            ],\n            customer_metadata={\n                \"key\": True,\n            },\n            customer_billing_address_fields=polar_sdk.CheckoutCustomerBillingAddressFields(\n                country=True,\n                state=False,\n                city=False,\n                postal_code=True,\n                line1=False,\n                line2=False,\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["checkout.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcheckout_updated_post(request=polar_sdk.WebhookCheckoutUpdatedPayload(\n        data=polar_sdk.Checkout(\n            created_at=dateutil.parser.isoparse(\"2025-10-04T13:06:10.658Z\"),\n            modified_at=dateutil.parser.isoparse(\"2024-10-02T21:25:15.366Z\"),\n            id=\"<value>\",\n            payment_processor=polar_sdk.PaymentProcessor.STRIPE,\n            status=polar_sdk.CheckoutStatus.FAILED,\n            client_secret=\"<value>\",\n            url=\"https://square-cafe.biz/\",\n            expires_at=dateutil.parser.isoparse(\"2025-03-25T08:55:11.873Z\"),\n            success_url=\"https://physical-import.name/\",\n            embed_origin=\"<value>\",\n            amount=245418,\n            discount_amount=624213,\n            net_amount=615580,\n            tax_amount=24587,\n            total_amount=447013,\n            currency=\"New Israeli Sheqel\",\n            product_id=\"<value>\",\n            product_price_id=\"<value>\",\n            discount_id=\"<value>\",\n            allow_discount_codes=True,\n            require_billing_address=True,\n            is_discount_applicable=False,\n            is_free_product_price=False,\n            is_payment_required=True,\n            is_payment_setup_required=False,\n            is_payment_form_required=True,\n            customer_id=\"<value>\",\n            customer_name=\"<value>\",\n            customer_email=\"<value>\",\n            customer_ip_address=\"<value>\",\n            customer_billing_address=polar_sdk.Address(\n                country=\"US\",\n            ),\n            customer_tax_id=\"<id>\",\n            payment_processor_metadata={\n                \"key\": \"<value>\",\n                \"key1\": \"<value>\",\n                \"key2\": \"<value>\",\n            },\n            metadata={\n                \"key\": 879426,\n            },\n            customer_external_id=\"<id>\",\n            products=[\n                polar_sdk.CheckoutProduct(\n                    created_at=dateutil.parser.isoparse(\"2023-07-11T15:52:54.020Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-01-24T14:28:29.444Z\"),\n                    id=\"<value>\",\n                    name=\"<value>\",\n                    description=\"sashay thankfully overreact yum before overspend red bitter recklessly along\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    is_recurring=True,\n                    is_archived=False,\n                    organization_id=\"<value>\",\n                    prices=[\n                        polar_sdk.ProductPriceFree(\n                            created_at=dateutil.parser.isoparse(\"2025-10-20T04:48:05.954Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2024-03-12T21:45:21.173Z\"),\n                            id=\"<value>\",\n                            is_archived=False,\n                            product_id=\"<value>\",\n                            type=polar_sdk.ProductPriceType.RECURRING,\n                            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        ),\n                        polar_sdk.LegacyRecurringProductPriceFree(\n                            created_at=dateutil.parser.isoparse(\"2023-12-02T12:51:00.416Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2024-10-28T13:46:29.597Z\"),\n                            id=\"<value>\",\n                            is_archived=False,\n                            product_id=\"<value>\",\n                            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        ),\n                    ],\n                    benefits=[\n                        polar_sdk.BenefitPublic(\n                            id=\"<value>\",\n                            created_at=dateutil.parser.isoparse(\"2024-03-31T06:14:16.097Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2023-08-22T12:21:49.089Z\"),\n                            type=polar_sdk.BenefitType.DOWNLOADABLES,\n                            description=\"inborn putrid frilly solemnly over notwithstanding forgather event vastly\",\n                            selectable=False,\n                            deletable=False,\n                            organization_id=\"<value>\",\n                        ),\n                    ],\n                    medias=[\n                        polar_sdk.ProductMediaFileRead(\n                            id=\"<value>\",\n                            organization_id=\"<value>\",\n                            name=\"<value>\",\n                            path=\"/usr/src\",\n                            mime_type=\"<value>\",\n                            size=541092,\n                            storage_version=\"<value>\",\n                            checksum_etag=\"<value>\",\n                            checksum_sha256_base64=\"<value>\",\n                            checksum_sha256_hex=\"<value>\",\n                            last_modified_at=dateutil.parser.isoparse(\"2023-11-24T15:47:22.071Z\"),\n                            version=\"<value>\",\n                            is_uploaded=True,\n                            created_at=dateutil.parser.isoparse(\"2024-01-08T03:40:28.811Z\"),\n                            size_readable=\"<value>\",\n                            public_url=\"https://only-skyscraper.com\",\n                        ),\n                        polar_sdk.ProductMediaFileRead(\n                            id=\"<value>\",\n                            organization_id=\"<value>\",\n                            name=\"<value>\",\n                            path=\"/media\",\n                            mime_type=\"<value>\",\n                            size=654810,\n                            storage_version=\"<value>\",\n                            checksum_etag=\"<value>\",\n                            checksum_sha256_base64=\"<value>\",\n                            checksum_sha256_hex=\"<value>\",\n                            last_modified_at=dateutil.parser.isoparse(\"2024-09-02T04:41:11.909Z\"),\n                            version=\"<value>\",\n                            is_uploaded=True,\n                            created_at=dateutil.parser.isoparse(\"2024-07-02T04:06:47.300Z\"),\n                            size_readable=\"<value>\",\n                            public_url=\"https://determined-casement.info/\",\n                        ),\n                    ],\n                ),\n            ],\n            product=polar_sdk.CheckoutProduct(\n                created_at=dateutil.parser.isoparse(\"2024-02-22T17:28:32.408Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-12-14T16:24:53.412Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"upbeat um after ick\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=False,\n                is_archived=False,\n                organization_id=\"<value>\",\n                prices=[\n                    polar_sdk.ProductPriceFixed(\n                        created_at=dateutil.parser.isoparse(\"2024-11-15T03:18:06.755Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-11-05T16:13:01.569Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        type=polar_sdk.ProductPriceType.ONE_TIME,\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        price_currency=\"<value>\",\n                        price_amount=371362,\n                    ),\n                    polar_sdk.LegacyRecurringProductPriceCustom(\n                        created_at=dateutil.parser.isoparse(\"2025-08-02T14:33:19.677Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-11-17T10:36:50.593Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        price_currency=\"<value>\",\n                        minimum_amount=995460,\n                        maximum_amount=461061,\n                        preset_amount=134244,\n                    ),\n                    polar_sdk.ProductPriceCustom(\n                        created_at=dateutil.parser.isoparse(\"2024-03-10T17:45:08.857Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-08-21T20:24:37.634Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        type=polar_sdk.ProductPriceType.ONE_TIME,\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        price_currency=\"<value>\",\n                        minimum_amount=688507,\n                        maximum_amount=907403,\n                        preset_amount=166544,\n                    ),\n                ],\n                benefits=[],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/boot/defaults\",\n                        mime_type=\"<value>\",\n                        size=87231,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2024-11-12T18:25:15.295Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=dateutil.parser.isoparse(\"2023-10-30T23:32:52.191Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://short-term-cappelletti.org/\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/var/log\",\n                        mime_type=\"<value>\",\n                        size=215865,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2025-01-11T00:27:33.502Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=dateutil.parser.isoparse(\"2024-11-08T12:26:13.908Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://fluffy-aftermath.com/\",\n                    ),\n                ],\n            ),\n            product_price=polar_sdk.LegacyRecurringProductPriceFixed(\n                created_at=dateutil.parser.isoparse(\"2025-05-08T16:44:17.277Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-12-03T09:52:08.965Z\"),\n                id=\"<value>\",\n                is_archived=False,\n                product_id=\"<value>\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                price_currency=\"<value>\",\n                price_amount=751656,\n            ),\n            discount=polar_sdk.CheckoutDiscountFixedOnceForeverDuration(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                amount=557445,\n                currency=\"Kwacha\",\n                id=\"<value>\",\n                name=\"<value>\",\n                code=\"<value>\",\n            ),\n            subscription_id=\"<value>\",\n            attached_custom_fields=[],\n            customer_metadata={\n                \"key\": 132400,\n            },\n            customer_billing_address_fields=polar_sdk.CheckoutCustomerBillingAddressFields(\n                country=True,\n                state=True,\n                city=True,\n                postal_code=False,\n                line1=True,\n                line2=True,\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["customer.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcustomer_created_post(request={\n        \"type\": \"customer.created\",\n        \"data\": {\n            \"id\": \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n            \"created_at\": dateutil.parser.isoparse(\"2023-11-05T00:02:45.979Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2025-11-25T19:38:56.737Z\"),\n            \"metadata\": {\n                \"key\": True,\n            },\n            \"external_id\": \"usr_1337\",\n            \"email\": \"customer@example.com\",\n            \"email_verified\": True,\n            \"name\": \"John Doe\",\n            \"billing_address\": {\n                \"country\": \"SE\",\n            },\n            \"tax_id\": [\n                \"FR61954506077\",\n                \"eu_vat\",\n            ],\n            \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"deleted_at\": dateutil.parser.isoparse(\"2024-12-23T01:13:50.641Z\"),\n            \"avatar_url\": \"https://www.gravatar.com/avatar/xxx?d=blank\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["customer.deleted"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcustomer_deleted_post(request={\n        \"type\": \"customer.deleted\",\n        \"data\": {\n            \"id\": \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n            \"created_at\": dateutil.parser.isoparse(\"2023-07-23T22:06:15.045Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2025-04-24T07:05:50.504Z\"),\n            \"metadata\": {\n                \"key\": \"<value>\",\n            },\n            \"external_id\": \"usr_1337\",\n            \"email\": \"customer@example.com\",\n            \"email_verified\": True,\n            \"name\": \"John Doe\",\n            \"billing_address\": {\n                \"country\": \"US\",\n            },\n            \"tax_id\": [\n                \"FR61954506077\",\n                \"eu_vat\",\n            ],\n            \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"deleted_at\": dateutil.parser.isoparse(\"2024-05-11T04:45:12.206Z\"),\n            \"avatar_url\": \"https://www.gravatar.com/avatar/xxx?d=blank\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["customer.state_changed"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcustomer_state_changed_post(request={\n        \"type\": \"customer.state_changed\",\n        \"data\": {\n            \"id\": \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n            \"created_at\": dateutil.parser.isoparse(\"2024-04-26T07:11:39.517Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2023-06-21T11:54:36.368Z\"),\n            \"metadata\": {\n                \"key\": 6612.66,\n                \"key1\": 162534,\n            },\n            \"external_id\": \"usr_1337\",\n            \"email\": \"customer@example.com\",\n            \"email_verified\": True,\n            \"name\": \"John Doe\",\n            \"billing_address\": {\n                \"country\": \"US\",\n            },\n            \"tax_id\": [\n                \"FR61954506077\",\n                \"eu_vat\",\n            ],\n            \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"deleted_at\": dateutil.parser.isoparse(\"2025-11-01T16:24:29.890Z\"),\n            \"active_subscriptions\": [\n                {\n                    \"id\": \"e5149aae-e521-42b9-b24c-abb3d71eea2e\",\n                    \"created_at\": dateutil.parser.isoparse(\"2025-12-23T00:00:00.457Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2024-03-19T21:14:46.825Z\"),\n                    \"metadata\": {\n\n                    },\n                    \"status\": \"active\",\n                    \"amount\": 1000,\n                    \"currency\": \"usd\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    \"current_period_start\": dateutil.parser.isoparse(\"2025-02-03T13:37:00Z\"),\n                    \"current_period_end\": dateutil.parser.isoparse(\"2025-03-03T13:37:00Z\"),\n                    \"cancel_at_period_end\": False,\n                    \"canceled_at\": None,\n                    \"started_at\": dateutil.parser.isoparse(\"2025-01-03T13:37:00Z\"),\n                    \"ends_at\": None,\n                    \"product_id\": \"d8dd2de1-21b7-4a41-8bc3-ce909c0cfe23\",\n                    \"discount_id\": None,\n                    \"meters\": [\n                        {\n                            \"created_at\": dateutil.parser.isoparse(\"2025-06-03T23:57:08.417Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2025-07-31T05:42:27.761Z\"),\n                            \"id\": \"<value>\",\n                            \"consumed_units\": 25,\n                            \"credited_units\": 100,\n                            \"amount\": 0,\n                            \"meter_id\": \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                        },\n                        {\n                            \"created_at\": dateutil.parser.isoparse(\"2024-07-04T21:55:47.759Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2025-09-17T10:53:45.757Z\"),\n                            \"id\": \"<value>\",\n                            \"consumed_units\": 25,\n                            \"credited_units\": 100,\n                            \"amount\": 0,\n                            \"meter_id\": \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                        },\n                        {\n                            \"created_at\": dateutil.parser.isoparse(\"2024-04-19T12:37:55.806Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2025-02-24T12:54:31.112Z\"),\n                            \"id\": \"<value>\",\n                            \"consumed_units\": 25,\n                            \"credited_units\": 100,\n                            \"amount\": 0,\n                            \"meter_id\": \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                        },\n                    ],\n                },\n                {\n                    \"id\": \"e5149aae-e521-42b9-b24c-abb3d71eea2e\",\n                    \"created_at\": dateutil.parser.isoparse(\"2025-07-09T06:32:19.884Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2024-02-15T21:51:13.048Z\"),\n                    \"metadata\": {\n\n                    },\n                    \"status\": \"active\",\n                    \"amount\": 1000,\n                    \"currency\": \"usd\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    \"current_period_start\": dateutil.parser.isoparse(\"2025-02-03T13:37:00Z\"),\n                    \"current_period_end\": dateutil.parser.isoparse(\"2025-03-03T13:37:00Z\"),\n                    \"cancel_at_period_end\": False,\n                    \"canceled_at\": None,\n                    \"started_at\": dateutil.parser.isoparse(\"2025-01-03T13:37:00Z\"),\n                    \"ends_at\": None,\n                    \"product_id\": \"d8dd2de1-21b7-4a41-8bc3-ce909c0cfe23\",\n                    \"discount_id\": None,\n                    \"meters\": [\n                        {\n                            \"created_at\": dateutil.parser.isoparse(\"2024-05-21T10:11:40.885Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2024-05-01T05:59:19.269Z\"),\n                            \"id\": \"<value>\",\n                            \"consumed_units\": 25,\n                            \"credited_units\": 100,\n                            \"amount\": 0,\n                            \"meter_id\": \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                        },\n                        {\n                            \"created_at\": dateutil.parser.isoparse(\"2023-11-21T13:12:44.218Z\"),\n                            \"modified_at\": dateutil.parser.isoparse(\"2023-02-15T23:19:28.506Z\"),\n                            \"id\": \"<value>\",\n                            \"consumed_units\": 25,\n                            \"credited_units\": 100,\n                            \"amount\": 0,\n                            \"meter_id\": \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                        },\n                    ],\n                },\n            ],\n            \"granted_benefits\": [\n                {\n                    \"id\": \"d322132c-a9d0-4e0d-b8d3-d81ad021a3a9\",\n                    \"created_at\": dateutil.parser.isoparse(\"2024-01-06T17:05:41.501Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2024-06-15T05:38:38.765Z\"),\n                    \"granted_at\": dateutil.parser.isoparse(\"2025-01-03T13:37:00Z\"),\n                    \"benefit_id\": \"397a17aa-15cf-4cb4-9333-18040203cf98\",\n                    \"benefit_type\": polar_sdk.BenefitType.DOWNLOADABLES,\n                    \"properties\": {},\n                },\n            ],\n            \"active_meters\": [\n                {\n                    \"created_at\": dateutil.parser.isoparse(\"2023-04-30T20:06:18.800Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2025-06-17T18:24:55.187Z\"),\n                    \"meter_id\": \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    \"consumed_units\": 25,\n                    \"credited_units\": 100,\n                    \"balance\": 75,\n                },\n            ],\n            \"avatar_url\": \"https://www.gravatar.com/avatar/xxx?d=blank\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["customer.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcustomer_updated_post(request={\n        \"type\": \"customer.updated\",\n        \"data\": {\n            \"id\": \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n            \"created_at\": dateutil.parser.isoparse(\"2023-10-11T01:52:16.669Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2024-07-17T00:54:05.167Z\"),\n            \"metadata\": {\n                \"key\": 906944,\n                \"key1\": 513720,\n            },\n            \"external_id\": \"usr_1337\",\n            \"email\": \"customer@example.com\",\n            \"email_verified\": True,\n            \"name\": \"John Doe\",\n            \"billing_address\": {\n                \"country\": \"US\",\n            },\n            \"tax_id\": [\n                \"FR61954506077\",\n                \"eu_vat\",\n            ],\n            \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"deleted_at\": dateutil.parser.isoparse(\"2025-10-11T03:02:11.318Z\"),\n            \"avatar_url\": \"https://www.gravatar.com/avatar/xxx?d=blank\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_created_post(request=polar_sdk.WebhookOrderCreatedPayload(\n        data=polar_sdk.Order(\n            created_at=dateutil.parser.isoparse(\"2024-11-11T12:46:15.007Z\"),\n            modified_at=dateutil.parser.isoparse(\"2024-03-23T03:54:38.261Z\"),\n            id=\"<value>\",\n            metadata={\n                \"key\": 196366,\n                \"key1\": 81588,\n            },\n            status=polar_sdk.OrderStatus.REFUNDED,\n            paid=True,\n            subtotal_amount=738083,\n            discount_amount=409401,\n            net_amount=229323,\n            amount=543579,\n            tax_amount=909216,\n            total_amount=983596,\n            refunded_amount=979645,\n            refunded_tax_amount=328114,\n            currency=\"Egyptian Pound\",\n            billing_reason=polar_sdk.OrderBillingReason.SUBSCRIPTION_CYCLE,\n            billing_address=polar_sdk.Address(\n                country=\"SE\",\n            ),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            subscription_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer=polar_sdk.OrderCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2023-01-27T10:40:59.012Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-04-15T20:14:00.592Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"FR\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2024-12-20T02:35:43.406Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            product=polar_sdk.OrderProduct(\n                metadata={\n                    \"key\": True,\n                    \"key1\": 6494.75,\n                },\n                created_at=dateutil.parser.isoparse(\"2025-01-19T08:45:08.985Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-05-22T16:28:34.624Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"er especially but searchingly except married whereas healthily the adolescent\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                is_recurring=True,\n                is_archived=False,\n                organization_id=\"<value>\",\n            ),\n            discount=polar_sdk.DiscountPercentageOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.REPEATING,\n                type=polar_sdk.DiscountType.FIXED,\n                basis_points=41670,\n                created_at=dateutil.parser.isoparse(\"2024-06-29T19:48:33.823Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-10-13T23:31:11.679Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": 9667.04,\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2025-11-03T05:50:26.584Z\"),\n                ends_at=dateutil.parser.isoparse(\"2025-06-16T03:30:59.854Z\"),\n                max_redemptions=156318,\n                redemptions_count=906483,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            subscription=polar_sdk.OrderSubscription(\n                metadata={\n\n                },\n                created_at=dateutil.parser.isoparse(\"2025-10-26T04:20:46.828Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-02-21T07:49:51.858Z\"),\n                id=\"<value>\",\n                amount=162785,\n                currency=\"Kina\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                status=polar_sdk.SubscriptionStatus.INCOMPLETE,\n                current_period_start=dateutil.parser.isoparse(\"2023-07-16T15:15:20.704Z\"),\n                current_period_end=dateutil.parser.isoparse(\"2025-07-20T01:25:23.024Z\"),\n                cancel_at_period_end=False,\n                canceled_at=dateutil.parser.isoparse(\"2025-05-19T17:32:22.162Z\"),\n                started_at=dateutil.parser.isoparse(\"2024-04-06T15:59:15.318Z\"),\n                ends_at=dateutil.parser.isoparse(\"2023-09-04T19:31:06.745Z\"),\n                ended_at=dateutil.parser.isoparse(\"2025-09-25T00:56:37.047Z\"),\n                customer_id=\"<value>\",\n                product_id=\"<value>\",\n                discount_id=\"<value>\",\n                checkout_id=\"<value>\",\n                customer_cancellation_reason=polar_sdk.CustomerCancellationReason.TOO_COMPLEX,\n                customer_cancellation_comment=\"<value>\",\n            ),\n            items=[\n                polar_sdk.OrderItemSchema(\n                    created_at=dateutil.parser.isoparse(\"2025-01-27T10:45:43.275Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-07-14T13:43:10.873Z\"),\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=579249,\n                    tax_amount=463268,\n                    proration=True,\n                    product_price_id=\"<value>\",\n                ),\n                polar_sdk.OrderItemSchema(\n                    created_at=dateutil.parser.isoparse(\"2025-03-17T12:03:23.602Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-09-21T14:39:10.503Z\"),\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=486225,\n                    tax_amount=575297,\n                    proration=True,\n                    product_price_id=\"<value>\",\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.paid"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_paid_post(request=polar_sdk.WebhookOrderPaidPayload(\n        data=polar_sdk.Order(\n            created_at=dateutil.parser.isoparse(\"2023-06-20T16:51:26.974Z\"),\n            modified_at=dateutil.parser.isoparse(\"2023-07-05T02:29:13.883Z\"),\n            id=\"<value>\",\n            metadata={\n                \"key\": 937633,\n            },\n            status=polar_sdk.OrderStatus.PARTIALLY_REFUNDED,\n            paid=True,\n            subtotal_amount=296121,\n            discount_amount=852158,\n            net_amount=356116,\n            amount=518304,\n            tax_amount=963472,\n            total_amount=214173,\n            refunded_amount=945808,\n            refunded_tax_amount=928326,\n            currency=\"Liberian Dollar\",\n            billing_reason=polar_sdk.OrderBillingReason.PURCHASE,\n            billing_address=polar_sdk.Address(\n                country=\"SE\",\n            ),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            subscription_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer=polar_sdk.OrderCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2025-01-21T10:43:46.171Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-09-05T01:56:49.572Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"SE\",\n                ),\n                tax_id=[\n                    \"FR61954506077\",\n                    \"eu_vat\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2024-06-27T22:26:24.407Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            product=polar_sdk.OrderProduct(\n                metadata={\n                    \"key\": \"<value>\",\n                },\n                created_at=dateutil.parser.isoparse(\"2023-06-17T18:42:07.006Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-11-29T10:23:33.223Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"mob whoa yet between\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=False,\n                is_archived=True,\n                organization_id=\"<value>\",\n            ),\n            discount=polar_sdk.DiscountFixedOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.FOREVER,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                amount=783478,\n                currency=\"Jordanian Dinar\",\n                created_at=dateutil.parser.isoparse(\"2023-05-09T16:19:47.360Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-09-08T19:14:27.545Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": 2595.75,\n                    \"key1\": 278415,\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2024-05-02T16:45:02.487Z\"),\n                ends_at=dateutil.parser.isoparse(\"2025-05-26T21:29:07.165Z\"),\n                max_redemptions=290491,\n                redemptions_count=736890,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            subscription=polar_sdk.OrderSubscription(\n                metadata={\n                    \"key\": 109000,\n                    \"key1\": 880746,\n                },\n                created_at=dateutil.parser.isoparse(\"2024-04-17T17:18:55.813Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-12-27T07:45:28.840Z\"),\n                id=\"<value>\",\n                amount=153854,\n                currency=\"Guyana Dollar\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                status=polar_sdk.SubscriptionStatus.INCOMPLETE_EXPIRED,\n                current_period_start=dateutil.parser.isoparse(\"2024-12-10T16:42:15.352Z\"),\n                current_period_end=dateutil.parser.isoparse(\"2023-03-01T10:45:57.014Z\"),\n                cancel_at_period_end=True,\n                canceled_at=dateutil.parser.isoparse(\"2023-05-20T06:13:30.583Z\"),\n                started_at=dateutil.parser.isoparse(\"2023-10-16T04:20:52.005Z\"),\n                ends_at=dateutil.parser.isoparse(\"2023-09-19T17:22:48.325Z\"),\n                ended_at=dateutil.parser.isoparse(\"2025-06-30T04:04:24.685Z\"),\n                customer_id=\"<value>\",\n                product_id=\"<value>\",\n                discount_id=\"<value>\",\n                checkout_id=\"<value>\",\n                customer_cancellation_reason=polar_sdk.CustomerCancellationReason.MISSING_FEATURES,\n                customer_cancellation_comment=\"<value>\",\n            ),\n            items=[\n                polar_sdk.OrderItemSchema(\n                    created_at=dateutil.parser.isoparse(\"2023-04-18T06:44:10.547Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2023-05-12T14:03:43.474Z\"),\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=192601,\n                    tax_amount=78031,\n                    proration=False,\n                    product_price_id=\"<value>\",\n                ),\n                polar_sdk.OrderItemSchema(\n                    created_at=dateutil.parser.isoparse(\"2024-02-03T17:07:58.129Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-07-24T05:30:16.561Z\"),\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=512493,\n                    tax_amount=583088,\n                    proration=False,\n                    product_price_id=\"<value>\",\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.refunded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_refunded_post(request=polar_sdk.WebhookOrderRefundedPayload(\n        data=polar_sdk.Order(\n            created_at=dateutil.parser.isoparse(\"2023-01-02T23:38:59.363Z\"),\n            modified_at=dateutil.parser.isoparse(\"2025-02-28T12:31:35.473Z\"),\n            id=\"<value>\",\n            metadata={\n                \"key\": True,\n                \"key1\": True,\n                \"key2\": 528865,\n            },\n            status=polar_sdk.OrderStatus.PARTIALLY_REFUNDED,\n            paid=True,\n            subtotal_amount=158895,\n            discount_amount=509231,\n            net_amount=890779,\n            amount=952371,\n            tax_amount=607176,\n            total_amount=142855,\n            refunded_amount=315343,\n            refunded_tax_amount=594696,\n            currency=\"Belize Dollar\",\n            billing_reason=polar_sdk.OrderBillingReason.SUBSCRIPTION_CYCLE,\n            billing_address=polar_sdk.Address(\n                country=\"US\",\n            ),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            subscription_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer=polar_sdk.OrderCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2024-04-10T12:40:37.234Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-06-05T18:36:35.351Z\"),\n                metadata={\n                    \"key\": True,\n                    \"key1\": \"<value>\",\n                    \"key2\": 403095,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2024-11-25T06:39:16.384Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            product=polar_sdk.OrderProduct(\n                metadata={\n                    \"key\": 49426,\n                    \"key1\": 4187.12,\n                    \"key2\": \"<value>\",\n                },\n                created_at=dateutil.parser.isoparse(\"2024-11-30T21:57:31.952Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-02-21T23:02:17.394Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"wilt sans reach sell pulp underneath petty unless source\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                is_recurring=True,\n                is_archived=False,\n                organization_id=\"<value>\",\n            ),\n            discount=polar_sdk.DiscountFixedRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                duration_in_months=394868,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                amount=798101,\n                currency=\"UAE Dirham\",\n                created_at=dateutil.parser.isoparse(\"2023-07-31T17:16:21.805Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-12-19T01:36:36.664Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": 8022.9,\n                    \"key1\": 6677,\n                    \"key2\": 8983.71,\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2025-10-04T09:22:51.824Z\"),\n                ends_at=dateutil.parser.isoparse(\"2025-05-25T20:59:26.748Z\"),\n                max_redemptions=625636,\n                redemptions_count=302499,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            subscription=polar_sdk.OrderSubscription(\n                metadata={\n                    \"key\": \"<value>\",\n                    \"key1\": 434679,\n                },\n                created_at=dateutil.parser.isoparse(\"2023-03-11T03:15:27.257Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-08-05T00:21:50.603Z\"),\n                id=\"<value>\",\n                amount=690659,\n                currency=\"Lari\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                status=polar_sdk.SubscriptionStatus.CANCELED,\n                current_period_start=dateutil.parser.isoparse(\"2025-08-31T07:32:06.622Z\"),\n                current_period_end=dateutil.parser.isoparse(\"2023-12-09T23:03:57.242Z\"),\n                cancel_at_period_end=False,\n                canceled_at=dateutil.parser.isoparse(\"2024-09-03T00:25:25.397Z\"),\n                started_at=dateutil.parser.isoparse(\"2023-07-04T15:25:35.943Z\"),\n                ends_at=dateutil.parser.isoparse(\"2024-09-24T05:43:42.179Z\"),\n                ended_at=dateutil.parser.isoparse(\"2024-11-02T16:14:59.150Z\"),\n                customer_id=\"<value>\",\n                product_id=\"<value>\",\n                discount_id=\"<value>\",\n                checkout_id=\"<value>\",\n                customer_cancellation_reason=polar_sdk.CustomerCancellationReason.MISSING_FEATURES,\n                customer_cancellation_comment=\"<value>\",\n            ),\n            items=[\n                polar_sdk.OrderItemSchema(\n                    created_at=dateutil.parser.isoparse(\"2023-02-21T19:31:04.867Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-06-17T14:21:24.989Z\"),\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=954979,\n                    tax_amount=464023,\n                    proration=True,\n                    product_price_id=\"<value>\",\n                ),\n                polar_sdk.OrderItemSchema(\n                    created_at=dateutil.parser.isoparse(\"2023-03-20T08:59:13.901Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-11-27T02:46:49.869Z\"),\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=436193,\n                    tax_amount=334120,\n                    proration=True,\n                    product_price_id=\"<value>\",\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_updated_post(request=polar_sdk.WebhookOrderUpdatedPayload(\n        data=polar_sdk.Order(\n            created_at=dateutil.parser.isoparse(\"2023-07-30T20:50:28.569Z\"),\n            modified_at=dateutil.parser.isoparse(\"2024-03-02T13:14:46.788Z\"),\n            id=\"<value>\",\n            metadata={\n                \"key\": \"<value>\",\n            },\n            status=polar_sdk.OrderStatus.PENDING,\n            paid=True,\n            subtotal_amount=334220,\n            discount_amount=7263,\n            net_amount=832690,\n            amount=700550,\n            tax_amount=61899,\n            total_amount=190491,\n            refunded_amount=400227,\n            refunded_tax_amount=279797,\n            currency=\"Bahamian Dollar\",\n            billing_reason=polar_sdk.OrderBillingReason.PURCHASE,\n            billing_address=polar_sdk.Address(\n                country=\"FR\",\n            ),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            subscription_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer=polar_sdk.OrderCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2025-11-29T21:44:19.115Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-10-30T08:05:04.104Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"FR\",\n                ),\n                tax_id=[\n                    \"FR61954506077\",\n                    \"eu_vat\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2023-03-18T10:39:58.209Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            user_id=\"<value>\",\n            product=polar_sdk.OrderProduct(\n                metadata={\n                    \"key\": 290301,\n                    \"key1\": True,\n                    \"key2\": 8266.09,\n                },\n                created_at=dateutil.parser.isoparse(\"2024-03-21T21:55:05.137Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-02-05T08:10:52.828Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"icebreaker gah sentimental gray meanwhile\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=False,\n                is_archived=True,\n                organization_id=\"<value>\",\n            ),\n            discount=polar_sdk.DiscountFixedOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.FOREVER,\n                type=polar_sdk.DiscountType.FIXED,\n                amount=649787,\n                currency=\"Vatu\",\n                created_at=dateutil.parser.isoparse(\"2024-04-20T13:52:24.321Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-02-19T00:48:07.983Z\"),\n                id=\"<value>\",\n                metadata={\n\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2024-03-09T11:03:07.527Z\"),\n                ends_at=dateutil.parser.isoparse(\"2024-12-16T22:48:16.587Z\"),\n                max_redemptions=352171,\n                redemptions_count=60662,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            subscription=polar_sdk.OrderSubscription(\n                metadata={\n                    \"key\": 270973,\n                },\n                created_at=dateutil.parser.isoparse(\"2025-07-15T18:56:36.594Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-05-06T07:36:36.588Z\"),\n                id=\"<value>\",\n                amount=386013,\n                currency=\"Moldovan Leu\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                status=polar_sdk.SubscriptionStatus.PAST_DUE,\n                current_period_start=dateutil.parser.isoparse(\"2023-11-12T05:05:34.276Z\"),\n                current_period_end=dateutil.parser.isoparse(\"2025-01-09T01:08:18.771Z\"),\n                cancel_at_period_end=False,\n                canceled_at=dateutil.parser.isoparse(\"2025-07-22T13:25:10.034Z\"),\n                started_at=dateutil.parser.isoparse(\"2025-10-13T14:11:16.615Z\"),\n                ends_at=dateutil.parser.isoparse(\"2024-09-05T00:29:27.969Z\"),\n                ended_at=dateutil.parser.isoparse(\"2023-11-02T08:11:44.027Z\"),\n                customer_id=\"<value>\",\n                product_id=\"<value>\",\n                discount_id=\"<value>\",\n                checkout_id=\"<value>\",\n                customer_cancellation_reason=polar_sdk.CustomerCancellationReason.TOO_EXPENSIVE,\n                customer_cancellation_comment=\"<value>\",\n            ),\n            items=[],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["organization.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorganization_updated_post(request={\n        \"type\": \"organization.updated\",\n        \"data\": {\n            \"created_at\": dateutil.parser.isoparse(\"2023-08-12T18:45:04.236Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2025-12-29T16:35:25.119Z\"),\n            \"id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"name\": \"<value>\",\n            \"slug\": \"<value>\",\n            \"avatar_url\": \"https://devoted-bump.net\",\n            \"email\": \"Shaylee26@hotmail.com\",\n            \"website\": \"<value>\",\n            \"socials\": [\n                {\n                    \"platform\": polar_sdk.OrganizationSocialPlatforms.TIKTOK,\n                    \"url\": \"https://bright-bug.biz\",\n                },\n            ],\n            \"details_submitted_at\": dateutil.parser.isoparse(\"2025-09-21T05:55:39.282Z\"),\n            \"feature_settings\": {},\n            \"subscription_settings\": {\n                \"allow_multiple_subscriptions\": False,\n                \"allow_customer_updates\": True,\n                \"proration_behavior\": polar_sdk.SubscriptionProrationBehavior.PRORATE,\n            },\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["product.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointproduct_created_post(request={\n        \"type\": \"product.created\",\n        \"data\": {\n            \"created_at\": dateutil.parser.isoparse(\"2023-03-27T06:36:20.130Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2025-04-21T12:05:16.637Z\"),\n            \"id\": \"<value>\",\n            \"name\": \"<value>\",\n            \"description\": \"into horst metal grimy clinch big grounded industrialize\",\n            \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n            \"is_recurring\": True,\n            \"is_archived\": True,\n            \"organization_id\": \"<value>\",\n            \"metadata\": {\n                \"key\": 273829,\n                \"key1\": 168.26,\n            },\n            \"prices\": [\n                {\n                    \"created_at\": dateutil.parser.isoparse(\"2024-12-07T23:31:39.577Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2024-04-25T10:21:28.587Z\"),\n                    \"id\": \"<value>\",\n                    \"amount_type\": \"free\",\n                    \"is_archived\": False,\n                    \"product_id\": \"<value>\",\n                    \"type\": \"recurring\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    \"legacy\": True,\n                },\n            ],\n            \"benefits\": [\n                {\n                    \"id\": \"<value>\",\n                    \"created_at\": dateutil.parser.isoparse(\"2024-11-29T13:37:27.569Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2024-09-06T02:23:36.299Z\"),\n                    \"type\": \"downloadables\",\n                    \"description\": \"hastily tromp these near throughout shear plan\",\n                    \"selectable\": False,\n                    \"deletable\": False,\n                    \"organization_id\": \"<value>\",\n                    \"metadata\": {\n                        \"key\": 112434,\n                    },\n                    \"properties\": {\n                        \"archived\": {\n                            \"key\": False,\n                        },\n                        \"files\": [\n                            \"<value>\",\n                        ],\n                    },\n                },\n            ],\n            \"medias\": [\n                {\n                    \"id\": \"<value>\",\n                    \"organization_id\": \"<value>\",\n                    \"name\": \"<value>\",\n                    \"path\": \"/srv\",\n                    \"mime_type\": \"<value>\",\n                    \"size\": 581265,\n                    \"storage_version\": \"<value>\",\n                    \"checksum_etag\": \"<value>\",\n                    \"checksum_sha256_base64\": \"<value>\",\n                    \"checksum_sha256_hex\": \"<value>\",\n                    \"last_modified_at\": dateutil.parser.isoparse(\"2025-04-07T02:06:02.757Z\"),\n                    \"version\": \"<value>\",\n                    \"service\": \"product_media\",\n                    \"is_uploaded\": True,\n                    \"created_at\": dateutil.parser.isoparse(\"2023-04-12T13:06:20.088Z\"),\n                    \"size_readable\": \"<value>\",\n                    \"public_url\": \"https://unripe-co-producer.org/\",\n                },\n                {\n                    \"id\": \"<value>\",\n                    \"organization_id\": \"<value>\",\n                    \"name\": \"<value>\",\n                    \"path\": \"/sbin\",\n                    \"mime_type\": \"<value>\",\n                    \"size\": 59414,\n                    \"storage_version\": \"<value>\",\n                    \"checksum_etag\": \"<value>\",\n                    \"checksum_sha256_base64\": \"<value>\",\n                    \"checksum_sha256_hex\": \"<value>\",\n                    \"last_modified_at\": dateutil.parser.isoparse(\"2025-07-07T02:17:46.592Z\"),\n                    \"version\": \"<value>\",\n                    \"service\": \"product_media\",\n                    \"is_uploaded\": True,\n                    \"created_at\": dateutil.parser.isoparse(\"2025-10-19T10:03:16.084Z\"),\n                    \"size_readable\": \"<value>\",\n                    \"public_url\": \"https://shimmering-longboat.com/\",\n                },\n                {\n                    \"id\": \"<value>\",\n                    \"organization_id\": \"<value>\",\n                    \"name\": \"<value>\",\n                    \"path\": \"/dev\",\n                    \"mime_type\": \"<value>\",\n                    \"size\": 150978,\n                    \"storage_version\": \"<value>\",\n                    \"checksum_etag\": \"<value>\",\n                    \"checksum_sha256_base64\": \"<value>\",\n                    \"checksum_sha256_hex\": \"<value>\",\n                    \"last_modified_at\": dateutil.parser.isoparse(\"2024-01-22T17:57:22.350Z\"),\n                    \"version\": \"<value>\",\n                    \"service\": \"product_media\",\n                    \"is_uploaded\": False,\n                    \"created_at\": dateutil.parser.isoparse(\"2024-04-18T23:00:14.080Z\"),\n                    \"size_readable\": \"<value>\",\n                    \"public_url\": \"https://self-assured-sock.name/\",\n                },\n            ],\n            \"attached_custom_fields\": [\n                {\n                    \"custom_field_id\": \"<value>\",\n                    \"custom_field\": {\n                        \"created_at\": dateutil.parser.isoparse(\"2023-08-13T09:14:32.599Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2025-02-08T23:55:56.411Z\"),\n                        \"id\": \"<value>\",\n                        \"metadata\": {\n                            \"key\": 273829,\n                        },\n                        \"type\": \"checkbox\",\n                        \"slug\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        \"properties\": {},\n                    },\n                    \"order\": 238471,\n                    \"required\": False,\n                },\n                {\n                    \"custom_field_id\": \"<value>\",\n                    \"custom_field\": {\n                        \"created_at\": dateutil.parser.isoparse(\"2023-01-19T10:36:12.447Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2024-02-26T01:40:26.896Z\"),\n                        \"id\": \"<value>\",\n                        \"metadata\": {\n                            \"key\": False,\n                        },\n                        \"type\": \"number\",\n                        \"slug\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        \"properties\": {},\n                    },\n                    \"order\": 841436,\n                    \"required\": False,\n                },\n            ],\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["product.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointproduct_updated_post(request={\n        \"type\": \"product.updated\",\n        \"data\": {\n            \"created_at\": dateutil.parser.isoparse(\"2024-06-25T03:46:32.479Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2023-06-04T01:47:33.158Z\"),\n            \"id\": \"<value>\",\n            \"name\": \"<value>\",\n            \"description\": \"er ick birdcage\",\n            \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n            \"is_recurring\": False,\n            \"is_archived\": True,\n            \"organization_id\": \"<value>\",\n            \"metadata\": {\n                \"key\": 498845,\n            },\n            \"prices\": [\n                {\n                    \"created_at\": dateutil.parser.isoparse(\"2023-04-14T23:22:06.974Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2023-11-27T16:49:54.775Z\"),\n                    \"id\": \"<value>\",\n                    \"amount_type\": \"custom\",\n                    \"is_archived\": False,\n                    \"product_id\": \"<value>\",\n                    \"type\": \"recurring\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    \"price_currency\": \"<value>\",\n                    \"minimum_amount\": 147529,\n                    \"maximum_amount\": 389871,\n                    \"preset_amount\": 137830,\n                    \"legacy\": True,\n                },\n            ],\n            \"benefits\": [\n                {\n                    \"id\": \"<value>\",\n                    \"created_at\": dateutil.parser.isoparse(\"2025-10-01T01:25:21.739Z\"),\n                    \"modified_at\": dateutil.parser.isoparse(\"2023-04-13T14:11:42.240Z\"),\n                    \"type\": \"github_repository\",\n                    \"description\": \"ick nauseate louse over snoop consequently glossy probe\",\n                    \"selectable\": False,\n                    \"deletable\": False,\n                    \"organization_id\": \"<value>\",\n                    \"metadata\": {\n                        \"key\": 450788,\n                    },\n                    \"properties\": {\n                        \"repository_owner\": \"polarsource\",\n                        \"repository_name\": \"private_repo\",\n                        \"permission\": polar_sdk.Permission.ADMIN,\n                    },\n                },\n            ],\n            \"medias\": [\n                {\n                    \"id\": \"<value>\",\n                    \"organization_id\": \"<value>\",\n                    \"name\": \"<value>\",\n                    \"path\": \"/opt/lib\",\n                    \"mime_type\": \"<value>\",\n                    \"size\": 447833,\n                    \"storage_version\": \"<value>\",\n                    \"checksum_etag\": \"<value>\",\n                    \"checksum_sha256_base64\": \"<value>\",\n                    \"checksum_sha256_hex\": \"<value>\",\n                    \"last_modified_at\": dateutil.parser.isoparse(\"2025-03-04T12:55:31.114Z\"),\n                    \"version\": \"<value>\",\n                    \"service\": \"product_media\",\n                    \"is_uploaded\": False,\n                    \"created_at\": dateutil.parser.isoparse(\"2023-12-12T15:13:01.743Z\"),\n                    \"size_readable\": \"<value>\",\n                    \"public_url\": \"https://able-ad.name/\",\n                },\n            ],\n            \"attached_custom_fields\": [\n                {\n                    \"custom_field_id\": \"<value>\",\n                    \"custom_field\": {\n                        \"created_at\": dateutil.parser.isoparse(\"2024-07-17T07:59:01.757Z\"),\n                        \"modified_at\": dateutil.parser.isoparse(\"2024-02-16T20:36:04.790Z\"),\n                        \"id\": \"<value>\",\n                        \"metadata\": {\n                            \"key\": False,\n                        },\n                        \"type\": \"number\",\n                        \"slug\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        \"properties\": {},\n                    },\n                    \"order\": 574449,\n                    \"required\": True,\n                },\n            ],\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["refund.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointrefund_created_post(request={\n        \"type\": \"refund.created\",\n        \"data\": {\n            \"created_at\": dateutil.parser.isoparse(\"2025-12-29T06:17:19.062Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2023-06-28T13:27:59.588Z\"),\n            \"id\": \"<value>\",\n            \"metadata\": {\n                \"key\": False,\n                \"key1\": True,\n            },\n            \"status\": polar_sdk.RefundStatus.CANCELED,\n            \"reason\": polar_sdk.RefundReason.FRAUDULENT,\n            \"amount\": 872325,\n            \"tax_amount\": 273821,\n            \"currency\": \"New Israeli Sheqel\",\n            \"organization_id\": \"<value>\",\n            \"order_id\": \"<value>\",\n            \"subscription_id\": \"<value>\",\n            \"customer_id\": \"<value>\",\n            \"revoke_benefits\": True,\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["refund.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointrefund_updated_post(request={\n        \"type\": \"refund.updated\",\n        \"data\": {\n            \"created_at\": dateutil.parser.isoparse(\"2024-01-23T03:57:31.216Z\"),\n            \"modified_at\": dateutil.parser.isoparse(\"2024-04-24T01:16:45.429Z\"),\n            \"id\": \"<value>\",\n            \"metadata\": {\n\n            },\n            \"status\": polar_sdk.RefundStatus.SUCCEEDED,\n            \"reason\": polar_sdk.RefundReason.OTHER,\n            \"amount\": 397442,\n            \"tax_amount\": 509120,\n            \"currency\": \"Rufiyaa\",\n            \"organization_id\": \"<value>\",\n            \"order_id\": \"<value>\",\n            \"subscription_id\": \"<value>\",\n            \"customer_id\": \"<value>\",\n            \"revoke_benefits\": False,\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.active"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_active_post(request=polar_sdk.WebhookSubscriptionActivePayload(\n        data=polar_sdk.Subscription(\n            created_at=dateutil.parser.isoparse(\"2023-09-17T11:03:44.679Z\"),\n            modified_at=dateutil.parser.isoparse(\"2025-07-24T20:02:17.426Z\"),\n            id=\"<value>\",\n            amount=116760,\n            currency=\"Quetzal\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            status=polar_sdk.SubscriptionStatus.INCOMPLETE,\n            current_period_start=dateutil.parser.isoparse(\"2023-08-25T00:14:50.252Z\"),\n            current_period_end=dateutil.parser.isoparse(\"2023-12-10T18:25:01.577Z\"),\n            cancel_at_period_end=False,\n            canceled_at=dateutil.parser.isoparse(\"2024-07-05T14:07:23.099Z\"),\n            started_at=dateutil.parser.isoparse(\"2024-06-30T08:12:48.355Z\"),\n            ends_at=dateutil.parser.isoparse(\"2023-06-29T07:42:54.895Z\"),\n            ended_at=dateutil.parser.isoparse(\"2025-10-30T02:51:06.576Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.SWITCHED_SERVICE,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n                \"key\": 4802.79,\n                \"key1\": \"<value>\",\n                \"key2\": 6152.12,\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2023-04-25T08:49:41.567Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-09-05T08:50:11.879Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"FR\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2024-04-06T03:26:32.986Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            product=polar_sdk.Product(\n                created_at=dateutil.parser.isoparse(\"2025-10-29T01:44:30.411Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-01-17T08:14:32.982Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"like thoughtfully skyline ouch openly aboard moisten graffiti pleasure claw\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                is_recurring=True,\n                is_archived=True,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": \"<value>\",\n                    \"key1\": True,\n                    \"key2\": \"<value>\",\n                },\n                prices=[],\n                benefits=[],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/usr/lib\",\n                        mime_type=\"<value>\",\n                        size=471788,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2025-04-29T21:41:28.180Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=dateutil.parser.isoparse(\"2023-01-21T03:01:14.288Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://some-mantua.org\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/dev\",\n                        mime_type=\"<value>\",\n                        size=212226,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2025-02-06T12:14:24.412Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=dateutil.parser.isoparse(\"2025-05-06T03:32:35.129Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://soupy-secret.name/\",\n                    ),\n                ],\n                attached_custom_fields=[\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldText(\n                            created_at=dateutil.parser.isoparse(\"2023-05-08T23:16:06.519Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2023-12-23T21:06:29.057Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": 110303,\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldTextProperties(),\n                        ),\n                        order=504359,\n                        required=True,\n                    ),\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldDate(\n                            created_at=dateutil.parser.isoparse(\"2023-12-10T18:25:01.577Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2024-09-04T07:05:35.451Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": 4984.87,\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldDateProperties(),\n                        ),\n                        order=569952,\n                        required=False,\n                    ),\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldCheckbox(\n                            created_at=dateutil.parser.isoparse(\"2025-10-30T02:51:06.576Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2024-06-20T14:46:16.535Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": False,\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldCheckboxProperties(),\n                        ),\n                        order=853452,\n                        required=True,\n                    ),\n                ],\n            ),\n            discount=polar_sdk.DiscountFixedRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                duration_in_months=156138,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                amount=378097,\n                currency=\"Colombian Peso\",\n                created_at=dateutil.parser.isoparse(\"2025-02-03T17:12:33.225Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-04-12T05:33:41.833Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": 843499,\n                    \"key1\": 4802.79,\n                    \"key2\": 6362.72,\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2025-03-08T08:26:36.119Z\"),\n                ends_at=dateutil.parser.isoparse(\"2023-06-29T22:39:21.226Z\"),\n                max_redemptions=707770,\n                redemptions_count=555106,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            prices=[\n                polar_sdk.LegacyRecurringProductPriceFixed(\n                    created_at=dateutil.parser.isoparse(\"2024-11-05T06:32:30.065Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2023-04-25T08:49:41.567Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    price_currency=\"<value>\",\n                    price_amount=126766,\n                ),\n                polar_sdk.ProductPriceCustom(\n                    created_at=dateutil.parser.isoparse(\"2024-04-06T03:26:32.986Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-10-29T01:44:30.411Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    type=polar_sdk.ProductPriceType.RECURRING,\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    price_currency=\"<value>\",\n                    minimum_amount=968465,\n                    maximum_amount=35496,\n                    preset_amount=221113,\n                ),\n            ],\n            meters=[\n                polar_sdk.SubscriptionMeter(\n                    created_at=dateutil.parser.isoparse(\"2023-02-11T05:37:36.272Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-01-20T12:23:37.845Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n                            \"key\": 6094.89,\n                            \"key1\": 5467.72,\n                        },\n                        created_at=dateutil.parser.isoparse(\"2023-09-08T22:16:21.336Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-09-15T15:58:52.712Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.OR,\n                            clauses=[],\n                        ),\n                        aggregation=polar_sdk.PropertyAggregation(\n                            func=polar_sdk.Func.MIN,\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n                polar_sdk.SubscriptionMeter(\n                    created_at=dateutil.parser.isoparse(\"2023-03-09T22:12:48.363Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-09-09T06:07:50.979Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n                            \"key\": 6040.55,\n                            \"key1\": \"<value>\",\n                            \"key2\": 1010.5,\n                        },\n                        created_at=dateutil.parser.isoparse(\"2024-04-25T22:22:19.388Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-02-02T00:30:57.495Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.OR,\n                            clauses=[],\n                        ),\n                        aggregation=polar_sdk.PropertyAggregation(\n                            func=polar_sdk.Func.MAX,\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n                polar_sdk.SubscriptionMeter(\n                    created_at=dateutil.parser.isoparse(\"2023-10-26T16:01:57.187Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-09-24T14:23:14.148Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n                            \"key\": 7086.53,\n                        },\n                        created_at=dateutil.parser.isoparse(\"2024-07-22T07:33:56.099Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-03-02T15:40:26.218Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.OR,\n                            clauses=[],\n                        ),\n                        aggregation=polar_sdk.PropertyAggregation(\n                            func=polar_sdk.Func.MAX,\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.canceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_canceled_post(request=polar_sdk.WebhookSubscriptionCanceledPayload(\n        data=polar_sdk.Subscription(\n            created_at=dateutil.parser.isoparse(\"2024-02-08T10:04:43.200Z\"),\n            modified_at=dateutil.parser.isoparse(\"2023-02-20T09:16:44.963Z\"),\n            id=\"<value>\",\n            amount=384017,\n            currency=\"Nakfa\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            status=polar_sdk.SubscriptionStatus.CANCELED,\n            current_period_start=dateutil.parser.isoparse(\"2025-08-29T23:51:26.505Z\"),\n            current_period_end=dateutil.parser.isoparse(\"2024-01-30T14:57:29.126Z\"),\n            cancel_at_period_end=False,\n            canceled_at=dateutil.parser.isoparse(\"2023-05-31T10:57:35.559Z\"),\n            started_at=dateutil.parser.isoparse(\"2024-10-31T08:13:37.012Z\"),\n            ends_at=dateutil.parser.isoparse(\"2023-08-22T21:50:14.399Z\"),\n            ended_at=dateutil.parser.isoparse(\"2023-07-13T20:08:34.251Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.TOO_EXPENSIVE,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n                \"key\": 38827,\n                \"key1\": 199269,\n                \"key2\": 668826,\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2024-03-16T21:08:54.900Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-10-15T15:32:03.593Z\"),\n                metadata={\n                    \"key\": 497112,\n                    \"key1\": True,\n                    \"key2\": True,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"FR\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2024-09-21T11:12:46.571Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            product=polar_sdk.Product(\n                created_at=dateutil.parser.isoparse(\"2025-10-12T16:18:30.796Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-02-08T11:59:00.133Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"excluding pfft upside-down ick rust bestride circa\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                is_recurring=True,\n                is_archived=True,\n                organization_id=\"<value>\",\n                metadata={\n\n                },\n                prices=[\n                    polar_sdk.LegacyRecurringProductPriceCustom(\n                        created_at=dateutil.parser.isoparse(\"2024-02-25T21:11:48.890Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-10-06T06:04:45.294Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        price_currency=\"<value>\",\n                        minimum_amount=803599,\n                        maximum_amount=886856,\n                        preset_amount=360058,\n                    ),\n                ],\n                benefits=[\n                    polar_sdk.BenefitDownloadables(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2023-05-31T10:57:35.559Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-10-31T08:13:37.012Z\"),\n                        description=\"around meh patiently t-shirt\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        metadata={\n                            \"key\": 629264,\n                        },\n                        properties=polar_sdk.BenefitDownloadablesProperties(\n                            archived={\n                                \"key\": False,\n                            },\n                            files=[\n                                \"<value>\",\n                            ],\n                        ),\n                    ),\n                    polar_sdk.BenefitGitHubRepository(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2023-02-02T14:55:14.427Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-01-12T05:03:52.598Z\"),\n                        description=\"whether futon carpool\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        metadata={\n                            \"key\": False,\n                        },\n                        properties=polar_sdk.BenefitGitHubRepositoryProperties(\n                            repository_owner=\"polarsource\",\n                            repository_name=\"private_repo\",\n                            permission=polar_sdk.Permission.MAINTAIN,\n                        ),\n                    ),\n                    polar_sdk.BenefitLicenseKeys(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2025-04-24T09:35:02.806Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-10-04T07:48:24.035Z\"),\n                        description=\"or distinct abaft amidst until key merrily\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        metadata={\n                            \"key\": \"<value>\",\n                        },\n                        properties=polar_sdk.BenefitLicenseKeysProperties(\n                            prefix=\"<value>\",\n                            expires=polar_sdk.BenefitLicenseKeyExpirationProperties(\n                                ttl=11556,\n                                timeframe=polar_sdk.Timeframe.YEAR,\n                            ),\n                            activations=polar_sdk.BenefitLicenseKeyActivationProperties(\n                                limit=765648,\n                                enable_customer_admin=False,\n                            ),\n                            limit_usage=724883,\n                        ),\n                    ),\n                ],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/bin\",\n                        mime_type=\"<value>\",\n                        size=134264,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2023-05-29T03:29:41.945Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=dateutil.parser.isoparse(\"2024-02-12T09:19:41.334Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://black-and-white-pharmacopoeia.net\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/opt/share\",\n                        mime_type=\"<value>\",\n                        size=430302,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2024-04-06T16:29:58.577Z\"),\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=dateutil.parser.isoparse(\"2025-01-07T11:02:44.524Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://violent-publicity.com\",\n                    ),\n                ],\n                attached_custom_fields=[\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldSelect(\n                            created_at=dateutil.parser.isoparse(\"2024-03-30T22:07:25.990Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2024-09-05T02:09:16.173Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": False,\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldSelectProperties(\n                                options=[\n                                    polar_sdk.CustomFieldSelectOption(\n                                        value=\"<value>\",\n                                        label=\"<value>\",\n                                    ),\n                                ],\n                            ),\n                        ),\n                        order=848717,\n                        required=True,\n                    ),\n                ],\n            ),\n            discount=polar_sdk.DiscountPercentageOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.FOREVER,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                basis_points=357022,\n                created_at=dateutil.parser.isoparse(\"2024-11-07T02:15:48.395Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-08-13T10:10:44.714Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": False,\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2023-08-08T20:27:11.335Z\"),\n                ends_at=dateutil.parser.isoparse(\"2025-04-02T16:35:30.414Z\"),\n                max_redemptions=982290,\n                redemptions_count=227101,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            prices=[\n                polar_sdk.LegacyRecurringProductPriceFree(\n                    created_at=dateutil.parser.isoparse(\"2025-07-30T17:23:59.652Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2023-06-03T19:12:20.362Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                ),\n                polar_sdk.LegacyRecurringProductPriceFixed(\n                    created_at=dateutil.parser.isoparse(\"2025-10-11T05:55:27.601Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2023-10-27T13:26:08.325Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    price_currency=\"<value>\",\n                    price_amount=125035,\n                ),\n                polar_sdk.LegacyRecurringProductPriceFixed(\n                    created_at=dateutil.parser.isoparse(\"2024-08-22T17:07:21.257Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-08-24T04:18:58.722Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    price_currency=\"<value>\",\n                    price_amount=525988,\n                ),\n            ],\n            meters=[\n                polar_sdk.SubscriptionMeter(\n                    created_at=dateutil.parser.isoparse(\"2023-05-24T20:25:30.956Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-02-20T20:47:35.184Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n                            \"key\": 34837,\n                            \"key1\": \"<value>\",\n                        },\n                        created_at=dateutil.parser.isoparse(\"2024-10-09T11:24:58.450Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-01-04T14:57:22.990Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.OR,\n                            clauses=[],\n                        ),\n                        aggregation=polar_sdk.PropertyAggregation(\n                            func=polar_sdk.Func.SUM,\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n                polar_sdk.SubscriptionMeter(\n                    created_at=dateutil.parser.isoparse(\"2023-10-15T19:57:28.120Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-07-05T08:08:12.059Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n\n                        },\n                        created_at=dateutil.parser.isoparse(\"2024-09-18T19:36:25.904Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-12-24T00:48:09.714Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.AND,\n                            clauses=[],\n                        ),\n                        aggregation=polar_sdk.PropertyAggregation(\n                            func=polar_sdk.Func.MIN,\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_created_post(request=polar_sdk.WebhookSubscriptionCreatedPayload(\n        data=polar_sdk.Subscription(\n            created_at=dateutil.parser.isoparse(\"2024-07-03T01:29:40.920Z\"),\n            modified_at=dateutil.parser.isoparse(\"2023-02-20T03:35:25.500Z\"),\n            id=\"<value>\",\n            amount=78980,\n            currency=\"Dong\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            status=polar_sdk.SubscriptionStatus.INCOMPLETE_EXPIRED,\n            current_period_start=dateutil.parser.isoparse(\"2025-01-25T02:46:12.208Z\"),\n            current_period_end=dateutil.parser.isoparse(\"2023-10-08T16:07:22.449Z\"),\n            cancel_at_period_end=False,\n            canceled_at=dateutil.parser.isoparse(\"2025-10-17T20:21:29.819Z\"),\n            started_at=dateutil.parser.isoparse(\"2023-02-26T17:52:17.099Z\"),\n            ends_at=dateutil.parser.isoparse(\"2023-07-04T19:46:53.033Z\"),\n            ended_at=dateutil.parser.isoparse(\"2023-09-06T09:33:34.348Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.UNUSED,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n                \"key\": \"<value>\",\n                \"key1\": 2294.09,\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2023-04-01T11:22:10.531Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-06-26T00:08:47.301Z\"),\n                metadata={\n                    \"key\": True,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"FR\",\n                ),\n                tax_id=[\n                    \"FR61954506077\",\n                    \"eu_vat\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2025-05-16T01:12:33.254Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            product=polar_sdk.Product(\n                created_at=dateutil.parser.isoparse(\"2025-11-30T21:57:15.452Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-10-01T17:40:20.374Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"likewise publication partially afore under subsidy\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=False,\n                is_archived=False,\n                organization_id=\"<value>\",\n                metadata={\n\n                },\n                prices=[],\n                benefits=[\n                    polar_sdk.BenefitDownloadables(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2023-02-20T03:35:25.500Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-03-28T13:29:27.613Z\"),\n                        description=\"average deer plagiarise carefree qua yippee by capitalise from than\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        metadata={\n                            \"key\": \"<value>\",\n                        },\n                        properties=polar_sdk.BenefitDownloadablesProperties(\n                            archived={\n                                \"key\": False,\n                            },\n                            files=[\n                                \"<value>\",\n                            ],\n                        ),\n                    ),\n                    polar_sdk.BenefitCustom(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2024-11-29T01:30:25.624Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-11-25T16:26:54.952Z\"),\n                        description=\"wisely tooth incidentally huzzah for tool white needily grandpa\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        metadata={\n                            \"key\": 120645,\n                        },\n                        properties=polar_sdk.BenefitCustomProperties(\n                            note=\"<value>\",\n                        ),\n                    ),\n                ],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/bin\",\n                        mime_type=\"<value>\",\n                        size=748789,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2024-02-12T15:58:53.546Z\"),\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=dateutil.parser.isoparse(\"2025-11-01T22:56:07.845Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://outrageous-dead.org\",\n                    ),\n                ],\n                attached_custom_fields=[\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldCheckbox(\n                            created_at=dateutil.parser.isoparse(\"2025-04-26T06:50:11.633Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2023-06-21T22:51:37.278Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": \"<value>\",\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldCheckboxProperties(),\n                        ),\n                        order=914697,\n                        required=True,\n                    ),\n                ],\n            ),\n            discount=polar_sdk.DiscountFixedOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                amount=803154,\n                currency=\"Somoni\",\n                created_at=dateutil.parser.isoparse(\"2025-01-05T04:14:46.492Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-09-23T02:20:13.988Z\"),\n                id=\"<value>\",\n                metadata={\n\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2024-05-17T17:16:41.803Z\"),\n                ends_at=dateutil.parser.isoparse(\"2023-09-20T09:03:51.426Z\"),\n                max_redemptions=823872,\n                redemptions_count=263404,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            prices=[],\n            meters=[\n                polar_sdk.SubscriptionMeter(\n                    created_at=dateutil.parser.isoparse(\"2024-05-01T03:43:55.760Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-12-20T10:24:18.080Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n                            \"key\": 548349,\n                            \"key1\": 5802.62,\n                            \"key2\": 660061,\n                        },\n                        created_at=dateutil.parser.isoparse(\"2024-01-08T01:57:20.378Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-03-02T01:26:17.229Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.AND,\n                            clauses=[],\n                        ),\n                        aggregation=polar_sdk.PropertyAggregation(\n                            func=polar_sdk.Func.MAX,\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n                polar_sdk.SubscriptionMeter(\n                    created_at=dateutil.parser.isoparse(\"2025-05-07T13:44:00.705Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-11-21T11:37:28.520Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n\n                        },\n                        created_at=dateutil.parser.isoparse(\"2024-08-13T20:42:08.040Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-09-25T20:12:33.320Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.AND,\n                            clauses=[],\n                        ),\n                        aggregation=polar_sdk.CountAggregation(),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n                polar_sdk.SubscriptionMeter(\n                    created_at=dateutil.parser.isoparse(\"2025-03-17T12:22:39.918Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-04-30T20:36:47.473Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n                            \"key\": 608050,\n                            \"key1\": \"<value>\",\n                            \"key2\": 282087,\n                        },\n                        created_at=dateutil.parser.isoparse(\"2024-04-02T23:02:34.789Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-07-18T11:38:25.103Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.OR,\n                            clauses=[],\n                        ),\n                        aggregation=polar_sdk.PropertyAggregation(\n                            func=polar_sdk.Func.MIN,\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_revoked_post(request=polar_sdk.WebhookSubscriptionRevokedPayload(\n        data=polar_sdk.Subscription(\n            created_at=dateutil.parser.isoparse(\"2025-11-29T12:00:55.925Z\"),\n            modified_at=dateutil.parser.isoparse(\"2023-03-13T04:36:55.320Z\"),\n            id=\"<value>\",\n            amount=780683,\n            currency=\"CFP Franc\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n            status=polar_sdk.SubscriptionStatus.TRIALING,\n            current_period_start=dateutil.parser.isoparse(\"2023-06-20T05:55:42.170Z\"),\n            current_period_end=dateutil.parser.isoparse(\"2024-05-16T17:55:53.899Z\"),\n            cancel_at_period_end=True,\n            canceled_at=dateutil.parser.isoparse(\"2025-10-25T10:04:20.460Z\"),\n            started_at=dateutil.parser.isoparse(\"2024-09-29T18:36:35.285Z\"),\n            ends_at=dateutil.parser.isoparse(\"2024-02-23T17:26:12.806Z\"),\n            ended_at=dateutil.parser.isoparse(\"2024-01-24T11:12:57.680Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.TOO_EXPENSIVE,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2025-09-02T15:09:07.489Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-06-23T22:13:15.423Z\"),\n                metadata={\n                    \"key\": \"<value>\",\n                    \"key1\": 1826.63,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"SE\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2024-12-07T07:31:07.439Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            product=polar_sdk.Product(\n                created_at=dateutil.parser.isoparse(\"2025-10-10T20:53:21.424Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-04-13T14:40:28.840Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"tousle evenly footrest whoever happy underpants collaborate license\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=True,\n                is_archived=True,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": True,\n                    \"key1\": 738461,\n                    \"key2\": \"<value>\",\n                },\n                prices=[\n                    polar_sdk.ProductPriceFixed(\n                        created_at=dateutil.parser.isoparse(\"2025-05-05T15:05:02.863Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-11-17T16:25:39.728Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        type=polar_sdk.ProductPriceType.RECURRING,\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        price_currency=\"<value>\",\n                        price_amount=155335,\n                    ),\n                    polar_sdk.LegacyRecurringProductPriceFixed(\n                        created_at=dateutil.parser.isoparse(\"2025-10-25T10:04:20.460Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-09-29T18:36:35.285Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        price_currency=\"<value>\",\n                        price_amount=354441,\n                    ),\n                    polar_sdk.ProductPriceFixed(\n                        created_at=dateutil.parser.isoparse(\"2025-09-02T15:09:07.489Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-06-23T22:13:15.423Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        type=polar_sdk.ProductPriceType.RECURRING,\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        price_currency=\"<value>\",\n                        price_amount=603348,\n                    ),\n                ],\n                benefits=[\n                    polar_sdk.BenefitDiscord(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2024-11-17T04:36:46.811Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-04-04T23:05:18.441Z\"),\n                        description=\"drab psst gee scout second management whose underachieve\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        metadata={\n                            \"key\": 7570.41,\n                        },\n                        properties=polar_sdk.BenefitDiscordProperties(\n                            guild_id=\"<id>\",\n                            role_id=\"<id>\",\n                            guild_token=\"<value>\",\n                        ),\n                    ),\n                    polar_sdk.BenefitDownloadables(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2023-07-08T15:43:38.078Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-06-14T12:45:40.568Z\"),\n                        description=\"ick blah altruistic\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        metadata={\n                            \"key\": 9100.37,\n                        },\n                        properties=polar_sdk.BenefitDownloadablesProperties(\n                            archived={\n                                \"key\": False,\n                            },\n                            files=[\n                                \"<value>\",\n                            ],\n                        ),\n                    ),\n                ],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/etc/mail\",\n                        mime_type=\"<value>\",\n                        size=530169,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2024-01-04T02:19:46.902Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=dateutil.parser.isoparse(\"2025-07-08T20:17:06.724Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://scared-subexpression.info\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/opt/sbin\",\n                        mime_type=\"<value>\",\n                        size=830297,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2023-03-26T22:10:02.657Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=dateutil.parser.isoparse(\"2024-09-27T22:03:48.752Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://lined-developing.net/\",\n                    ),\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/srv\",\n                        mime_type=\"<value>\",\n                        size=357142,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=dateutil.parser.isoparse(\"2023-01-07T17:24:21.854Z\"),\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=dateutil.parser.isoparse(\"2023-05-18T08:32:33.285Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://sparkling-platter.com\",\n                    ),\n                ],\n                attached_custom_fields=[\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldText(\n                            created_at=dateutil.parser.isoparse(\"2024-12-21T17:29:46.697Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2025-10-21T13:42:06.158Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": \"<value>\",\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldTextProperties(),\n                        ),\n                        order=849523,\n                        required=False,\n                    ),\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldText(\n                            created_at=dateutil.parser.isoparse(\"2023-12-15T15:35:52.203Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2023-07-22T04:02:13.353Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": 937507,\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldTextProperties(),\n                        ),\n                        order=119373,\n                        required=True,\n                    ),\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldText(\n                            created_at=dateutil.parser.isoparse(\"2024-12-14T07:14:12.681Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2023-07-18T22:29:18.081Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": False,\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldTextProperties(),\n                        ),\n                        order=333677,\n                        required=False,\n                    ),\n                ],\n            ),\n            discount=polar_sdk.DiscountPercentageRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.REPEATING,\n                duration_in_months=100172,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                basis_points=306142,\n                created_at=dateutil.parser.isoparse(\"2023-03-30T14:36:41.417Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-05-01T03:35:09.760Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": 696581,\n                    \"key1\": 156123,\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2025-04-27T19:15:55.010Z\"),\n                ends_at=dateutil.parser.isoparse(\"2024-08-10T03:47:28.734Z\"),\n                max_redemptions=335600,\n                redemptions_count=160261,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            prices=[\n                polar_sdk.ProductPriceFixed(\n                    created_at=dateutil.parser.isoparse(\"2023-04-28T18:17:29.065Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-11-19T08:20:39.303Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    type=polar_sdk.ProductPriceType.ONE_TIME,\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    price_currency=\"<value>\",\n                    price_amount=849469,\n                ),\n                polar_sdk.LegacyRecurringProductPriceFixed(\n                    created_at=dateutil.parser.isoparse(\"2024-02-15T12:19:40.586Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-02-27T04:32:02.630Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    price_currency=\"<value>\",\n                    price_amount=815612,\n                ),\n                polar_sdk.ProductPriceMeteredUnit(\n                    created_at=dateutil.parser.isoparse(\"2023-05-15T22:26:54.006Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-10-17T16:46:10.227Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    type=polar_sdk.ProductPriceType.RECURRING,\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    price_currency=\"<value>\",\n                    unit_amount=\"<value>\",\n                    cap_amount=241695,\n                    meter_id=\"<value>\",\n                    meter=polar_sdk.ProductPriceMeter(\n                        id=\"<value>\",\n                        name=\"<value>\",\n                    ),\n                ),\n            ],\n            meters=[\n                polar_sdk.SubscriptionMeter(\n                    created_at=dateutil.parser.isoparse(\"2025-03-05T10:04:10.522Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-07-21T02:28:10.454Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n                            \"key\": \"<value>\",\n                        },\n                        created_at=dateutil.parser.isoparse(\"2023-05-13T16:20:53.597Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-08-11T16:14:24.565Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.AND,\n                            clauses=[],\n                        ),\n                        aggregation=polar_sdk.PropertyAggregation(\n                            func=polar_sdk.Func.AVG,\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.uncanceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_uncanceled_post(request=polar_sdk.WebhookSubscriptionUncanceledPayload(\n        data=polar_sdk.Subscription(\n            created_at=dateutil.parser.isoparse(\"2024-06-17T13:11:57.598Z\"),\n            modified_at=dateutil.parser.isoparse(\"2025-03-19T00:33:29.972Z\"),\n            id=\"<value>\",\n            amount=243909,\n            currency=\"Swiss Franc\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n            status=polar_sdk.SubscriptionStatus.PAST_DUE,\n            current_period_start=dateutil.parser.isoparse(\"2025-04-10T22:53:35.005Z\"),\n            current_period_end=dateutil.parser.isoparse(\"2025-11-06T14:37:36.152Z\"),\n            cancel_at_period_end=False,\n            canceled_at=dateutil.parser.isoparse(\"2025-11-20T17:26:51.612Z\"),\n            started_at=dateutil.parser.isoparse(\"2023-03-17T23:30:29.508Z\"),\n            ends_at=dateutil.parser.isoparse(\"2024-09-26T10:53:58.966Z\"),\n            ended_at=dateutil.parser.isoparse(\"2023-07-03T15:11:27.108Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.LOW_QUALITY,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n                \"key\": 213.99,\n                \"key1\": 316364,\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2025-01-30T22:08:30.455Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-02-02T22:26:23.446Z\"),\n                metadata={\n                    \"key\": True,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"FR\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2025-10-31T14:46:23.010Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            product=polar_sdk.Product(\n                created_at=dateutil.parser.isoparse(\"2024-11-09T05:19:53.169Z\"),\n                modified_at=dateutil.parser.isoparse(\"2024-09-22T08:44:15.301Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"creamy furthermore where\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=False,\n                is_archived=False,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": 3172.58,\n                    \"key1\": 785644,\n                    \"key2\": 146640,\n                },\n                prices=[\n                    polar_sdk.LegacyRecurringProductPriceFree(\n                        created_at=dateutil.parser.isoparse(\"2023-09-25T07:47:22.602Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-07-07T10:48:19.585Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    ),\n                    polar_sdk.ProductPriceMeteredUnit(\n                        created_at=dateutil.parser.isoparse(\"2025-11-06T14:37:36.152Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-05-03T10:18:29.658Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        type=polar_sdk.ProductPriceType.RECURRING,\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        price_currency=\"<value>\",\n                        unit_amount=\"<value>\",\n                        cap_amount=578882,\n                        meter_id=\"<value>\",\n                        meter=polar_sdk.ProductPriceMeter(\n                            id=\"<value>\",\n                            name=\"<value>\",\n                        ),\n                    ),\n                    polar_sdk.LegacyRecurringProductPriceCustom(\n                        created_at=dateutil.parser.isoparse(\"2025-03-15T14:25:14.463Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-10-04T14:51:52.137Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                        price_currency=\"<value>\",\n                        minimum_amount=271985,\n                        maximum_amount=316364,\n                        preset_amount=694273,\n                    ),\n                ],\n                benefits=[\n                    polar_sdk.BenefitCustom(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2024-04-14T01:03:37.496Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-10-04T06:49:35.301Z\"),\n                        description=\"oof loosely whose meh surprisingly among\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        metadata={\n                            \"key\": 9373.65,\n                        },\n                        properties=polar_sdk.BenefitCustomProperties(\n                            note=\"<value>\",\n                        ),\n                    ),\n                ],\n                medias=[],\n                attached_custom_fields=[\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldDate(\n                            created_at=dateutil.parser.isoparse(\"2025-07-26T07:22:38.597Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2025-01-13T15:58:26.086Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": 373884,\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldDateProperties(),\n                        ),\n                        order=94965,\n                        required=True,\n                    ),\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldDate(\n                            created_at=dateutil.parser.isoparse(\"2024-08-10T09:43:32.113Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2025-08-13T13:42:13.485Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": 31232,\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldDateProperties(),\n                        ),\n                        order=634097,\n                        required=False,\n                    ),\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldDate(\n                            created_at=dateutil.parser.isoparse(\"2023-10-29T00:03:55.769Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2024-04-09T09:27:02.033Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": \"<value>\",\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldDateProperties(),\n                        ),\n                        order=96265,\n                        required=False,\n                    ),\n                ],\n            ),\n            discount=polar_sdk.DiscountFixedOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.REPEATING,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                amount=898456,\n                currency=\"Riel\",\n                created_at=dateutil.parser.isoparse(\"2024-10-09T05:35:43.669Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-08-02T04:54:56.850Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": True,\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2024-01-26T13:36:59.644Z\"),\n                ends_at=dateutil.parser.isoparse(\"2025-04-24T08:23:27.502Z\"),\n                max_redemptions=305590,\n                redemptions_count=755292,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            prices=[\n                polar_sdk.LegacyRecurringProductPriceCustom(\n                    created_at=dateutil.parser.isoparse(\"2025-11-08T10:21:05.522Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-01-09T08:14:23.639Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                    price_currency=\"<value>\",\n                    minimum_amount=963528,\n                    maximum_amount=373189,\n                    preset_amount=981202,\n                ),\n                polar_sdk.ProductPriceFixed(\n                    created_at=dateutil.parser.isoparse(\"2023-06-25T03:26:57.331Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-11-03T11:13:28.466Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    type=polar_sdk.ProductPriceType.ONE_TIME,\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    price_currency=\"<value>\",\n                    price_amount=267438,\n                ),\n                polar_sdk.ProductPriceCustom(\n                    created_at=dateutil.parser.isoparse(\"2024-12-08T06:56:12.545Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2023-09-21T02:33:03.865Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    type=polar_sdk.ProductPriceType.ONE_TIME,\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    price_currency=\"<value>\",\n                    minimum_amount=528490,\n                    maximum_amount=139757,\n                    preset_amount=176803,\n                ),\n            ],\n            meters=[\n                polar_sdk.SubscriptionMeter(\n                    created_at=dateutil.parser.isoparse(\"2023-03-18T04:07:15.266Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-06-28T02:22:05.259Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n                            \"key\": 257932,\n                        },\n                        created_at=dateutil.parser.isoparse(\"2023-11-22T13:28:36.122Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-10-31T23:41:23.146Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.AND,\n                            clauses=[],\n                        ),\n                        aggregation=polar_sdk.CountAggregation(),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n                polar_sdk.SubscriptionMeter(\n                    created_at=dateutil.parser.isoparse(\"2023-01-26T05:22:36.002Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-07-12T08:51:47.105Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n                            \"key\": 1534.64,\n                            \"key1\": \"<value>\",\n                        },\n                        created_at=dateutil.parser.isoparse(\"2023-04-29T23:28:30.708Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-09-10T10:04:41.595Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.OR,\n                            clauses=[],\n                        ),\n                        aggregation=polar_sdk.PropertyAggregation(\n                            func=polar_sdk.Func.MIN,\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n                polar_sdk.SubscriptionMeter(\n                    created_at=dateutil.parser.isoparse(\"2024-12-16T05:06:27.930Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2023-12-28T11:29:29.778Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n                            \"key\": 386144,\n                        },\n                        created_at=dateutil.parser.isoparse(\"2024-07-08T10:23:41.787Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-11-01T17:35:18.566Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.OR,\n                            clauses=[],\n                        ),\n                        aggregation=polar_sdk.CountAggregation(),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import dateutil.parser\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_updated_post(request=polar_sdk.WebhookSubscriptionUpdatedPayload(\n        data=polar_sdk.Subscription(\n            created_at=dateutil.parser.isoparse(\"2023-08-16T06:35:49.390Z\"),\n            modified_at=dateutil.parser.isoparse(\"2025-11-13T10:48:05.575Z\"),\n            id=\"<value>\",\n            amount=299644,\n            currency=\"Baht\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n            status=polar_sdk.SubscriptionStatus.TRIALING,\n            current_period_start=dateutil.parser.isoparse(\"2025-10-06T07:01:55.000Z\"),\n            current_period_end=dateutil.parser.isoparse(\"2025-01-20T06:59:31.349Z\"),\n            cancel_at_period_end=False,\n            canceled_at=dateutil.parser.isoparse(\"2023-10-04T04:56:04.382Z\"),\n            started_at=dateutil.parser.isoparse(\"2023-01-22T12:57:07.430Z\"),\n            ends_at=dateutil.parser.isoparse(\"2025-08-08T17:53:12.513Z\"),\n            ended_at=dateutil.parser.isoparse(\"2023-10-08T02:40:52.099Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.TOO_EXPENSIVE,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n                \"key\": 394013,\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=dateutil.parser.isoparse(\"2025-09-14T04:37:19.722Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-03-24T00:03:13.207Z\"),\n                metadata={\n                    \"key\": \"<value>\",\n                    \"key1\": True,\n                    \"key2\": 3929,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"SE\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=dateutil.parser.isoparse(\"2025-03-10T21:57:02.022Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=blank\",\n            ),\n            product=polar_sdk.Product(\n                created_at=dateutil.parser.isoparse(\"2025-09-03T02:13:58.900Z\"),\n                modified_at=dateutil.parser.isoparse(\"2023-01-06T20:49:48.804Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"tall sans now duh mysteriously\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=False,\n                is_archived=True,\n                organization_id=\"<value>\",\n                metadata={\n\n                },\n                prices=[],\n                benefits=[\n                    polar_sdk.BenefitDiscord(\n                        id=\"<value>\",\n                        created_at=dateutil.parser.isoparse(\"2025-11-13T10:48:05.575Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-11-25T09:50:52.301Z\"),\n                        description=\"afford while lest at important ew yowza whereas demob\",\n                        selectable=False,\n                        deletable=False,\n                        organization_id=\"<value>\",\n                        metadata={\n                            \"key\": 143.16,\n                        },\n                        properties=polar_sdk.BenefitDiscordProperties(\n                            guild_id=\"<id>\",\n                            role_id=\"<id>\",\n                            guild_token=\"<value>\",\n                        ),\n                    ),\n                ],\n                medias=[],\n                attached_custom_fields=[\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldDate(\n                            created_at=dateutil.parser.isoparse(\"2023-01-20T13:33:31.771Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2024-02-22T02:13:37.066Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": \"<value>\",\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldDateProperties(),\n                        ),\n                        order=915760,\n                        required=True,\n                    ),\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldCheckbox(\n                            created_at=dateutil.parser.isoparse(\"2023-06-03T11:59:38.300Z\"),\n                            modified_at=dateutil.parser.isoparse(\"2023-03-14T13:16:39.126Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": 6037.18,\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldCheckboxProperties(),\n                        ),\n                        order=560596,\n                        required=False,\n                    ),\n                ],\n            ),\n            discount=polar_sdk.DiscountPercentageOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.REPEATING,\n                type=polar_sdk.DiscountType.FIXED,\n                basis_points=172538,\n                created_at=dateutil.parser.isoparse(\"2023-03-14T09:14:44.030Z\"),\n                modified_at=dateutil.parser.isoparse(\"2025-07-07T23:54:00.303Z\"),\n                id=\"<value>\",\n                metadata={\n\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=dateutil.parser.isoparse(\"2023-10-11T04:49:26.739Z\"),\n                ends_at=dateutil.parser.isoparse(\"2025-05-30T13:10:48.001Z\"),\n                max_redemptions=981769,\n                redemptions_count=131085,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            prices=[\n                polar_sdk.LegacyRecurringProductPriceFree(\n                    created_at=dateutil.parser.isoparse(\"2023-03-28T22:24:16.436Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2023-06-25T07:31:50.142Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                ),\n                polar_sdk.LegacyRecurringProductPriceFixed(\n                    created_at=dateutil.parser.isoparse(\"2024-04-26T03:42:46.919Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2023-07-10T15:18:31.478Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                    price_currency=\"<value>\",\n                    price_amount=777708,\n                ),\n                polar_sdk.LegacyRecurringProductPriceFree(\n                    created_at=dateutil.parser.isoparse(\"2023-02-23T15:34:22.418Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2025-11-06T22:37:29.139Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                ),\n            ],\n            meters=[\n                polar_sdk.SubscriptionMeter(\n                    created_at=dateutil.parser.isoparse(\"2023-12-29T09:31:58.314Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2023-05-11T16:22:21.331Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n                            \"key\": 273221,\n                            \"key1\": 210374,\n                        },\n                        created_at=dateutil.parser.isoparse(\"2024-09-26T10:52:31.232Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2024-10-22T00:38:08.110Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.OR,\n                            clauses=[],\n                        ),\n                        aggregation=polar_sdk.PropertyAggregation(\n                            func=polar_sdk.Func.MIN,\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n                polar_sdk.SubscriptionMeter(\n                    created_at=dateutil.parser.isoparse(\"2024-05-26T14:01:08.339Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2023-05-01T04:54:46.773Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n                            \"key\": 4108.38,\n                        },\n                        created_at=dateutil.parser.isoparse(\"2025-09-01T19:58:32.729Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2023-04-15T12:01:43.458Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.AND,\n                            clauses=[],\n                        ),\n                        aggregation=polar_sdk.PropertyAggregation(\n                            func=polar_sdk.Func.SUM,\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n                polar_sdk.SubscriptionMeter(\n                    created_at=dateutil.parser.isoparse(\"2024-07-14T14:21:57.379Z\"),\n                    modified_at=dateutil.parser.isoparse(\"2024-11-19T07:47:16.233Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n\n                        },\n                        created_at=dateutil.parser.isoparse(\"2024-03-01T13:08:49.991Z\"),\n                        modified_at=dateutil.parser.isoparse(\"2025-03-20T14:00:49.875Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.AND,\n                            clauses=[],\n                        ),\n                        aggregation=polar_sdk.PropertyAggregation(\n                            func=polar_sdk.Func.AVG,\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
