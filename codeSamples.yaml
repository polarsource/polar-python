overlay: 1.0.0
info:
  title: CodeSamples overlay for python target
  version: 0.0.0
actions:
  - target: $["paths"]["/v1/benefits/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/benefits/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.create(request={\n        \"type\": \"license_keys\",\n        \"description\": \"mature emergent at outside arrogantly gadzooks zealous equatorial notwithstanding\",\n        \"properties\": {},\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/benefits/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.benefits.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/benefits/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/benefits/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.update(id=\"<value>\", request_body={\n        \"type\": \"meter_credit\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/benefits/{id}/grants"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.benefits.grants(id=\"<value>\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/checkout-links/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/checkout-links/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.create(request={\n        \"payment_processor\": \"stripe\",\n        \"allow_discount_codes\": True,\n        \"require_billing_address\": False,\n        \"product_price_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkout-links/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.checkout_links.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/checkout-links/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkout-links/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkout_links.update(id=\"<value>\", checkout_link_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/checkouts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.create(request={\n        \"customer_billing_address\": {\n            \"country\": \"US\",\n        },\n        \"products\": [\n            \"<value 1>\",\n            \"<value 2>\",\n            \"<value 3>\",\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.checkouts.client_get(client_secret=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.checkouts.client_update(client_secret=\"<value>\", checkout_update_public={\n        \"customer_billing_address\": None,\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}/confirm"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.client_confirm(client_secret=\"<value>\", checkout_confirm_stripe={\n        \"customer_billing_address\": {\n            \"country\": \"US\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/checkouts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.checkouts.update(id=\"<value>\", checkout_update={\n        \"customer_billing_address\": {\n            \"country\": \"US\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/custom-fields/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/custom-fields/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.create(request={\n        \"type\": \"select\",\n        \"slug\": \"<value>\",\n        \"name\": \"<value>\",\n        \"properties\": {\n            \"options\": [],\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/custom-fields/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.custom_fields.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/custom-fields/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/custom-fields/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.custom_fields.update(id=\"<value>\", custom_field_update={\n        \"type\": \"date\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customer_meters.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customer_meters.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.benefit_grants.list(security=polar_sdk.CustomerPortalBenefitGrantsListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=None, page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.benefit_grants.get(security=polar_sdk.CustomerPortalBenefitGrantsGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.benefit_grants.update(security=polar_sdk.CustomerPortalBenefitGrantsUpdateSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\", customer_benefit_grant_update={\n        \"benefit_type\": \"license_keys\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.get(security=polar_sdk.CustomerPortalCustomersGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.update(security=polar_sdk.CustomerPortalCustomersUpdateSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), request={\n        \"billing_address\": {\n            \"country\": \"US\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.list_payment_methods(security=polar_sdk.CustomerPortalCustomersListPaymentMethodsSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customers.add_payment_method(security=polar_sdk.CustomerPortalCustomersAddPaymentMethodSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), request={\n        \"confirmation_token_id\": \"<id>\",\n        \"set_default\": False,\n        \"return_url\": \"https://yearly-custom.net/\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    polar.customer_portal.customers.delete_payment_method(security=polar_sdk.CustomerPortalCustomersDeletePaymentMethodSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customer-portal/downloadables/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.downloadables.list(security=polar_sdk.CustomerPortalDownloadablesListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/license-keys/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.list(security=polar_sdk.CustomerPortalLicenseKeysListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/license-keys/activate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.activate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n        \"label\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/license-keys/deactivate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    polar.customer_portal.license_keys.deactivate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n        \"activation_id\": \"<value>\",\n    })\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customer-portal/license-keys/validate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.validate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.license_keys.get(security=polar_sdk.CustomerPortalLicenseKeysGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customer_meters.list(security=polar_sdk.CustomerPortalCustomerMetersListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.customer_meters.get(security=polar_sdk.CustomerPortalCustomerMetersGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.list(security=polar_sdk.CustomerPortalOrdersListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.get(security=polar_sdk.CustomerPortalOrdersGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/orders/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.update(security=polar_sdk.CustomerPortalOrdersUpdateSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\", customer_order_update={\n        \"billing_name\": \"<value>\",\n        \"billing_address\": {\n            \"country\": \"US\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/confirm-payment"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.confirm_retry_payment(security=polar_sdk.CustomerPortalOrdersConfirmRetryPaymentSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\", customer_order_confirm_payment={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.invoice(security=polar_sdk.CustomerPortalOrdersInvoiceSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/invoice"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.generate_invoice(security=polar_sdk.CustomerPortalOrdersGenerateInvoiceSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/payment-status"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.orders.get_payment_status(security=polar_sdk.CustomerPortalOrdersGetPaymentStatusSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/organizations/{slug}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.organizations.get(slug=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.list(security=polar_sdk.CustomerPortalSubscriptionsListSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.cancel(security=polar_sdk.CustomerPortalSubscriptionsCancelSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.get(security=polar_sdk.CustomerPortalSubscriptionsGetSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.customer_portal.subscriptions.update(security=polar_sdk.CustomerPortalSubscriptionsUpdateSecurity(\n        customer_session=\"<YOUR_BEARER_TOKEN_HERE>\",\n    ), id=\"<value>\", customer_subscription_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customer-sessions/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customer_sessions.create(request={\n        \"external_customer_id\": \"<id>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/customers/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.create(request={\n        \"external_id\": \"usr_1337\",\n        \"email\": \"customer@example.com\",\n        \"name\": \"John Doe\",\n        \"billing_address\": {\n            \"country\": \"US\",\n        },\n        \"tax_id\": [\n            \"911144442\",\n            \"us_ein\",\n        ],\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.customers.delete_external(external_id=\"<id>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customers/external/{external_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get_external(external_id=\"<id>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.update_external(external_id=\"<id>\", customer_update_external_id={\n        \"email\": \"customer@example.com\",\n        \"name\": \"John Doe\",\n        \"billing_address\": None,\n        \"tax_id\": [\n            \"911144442\",\n            \"us_ein\",\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/external/{external_id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get_state_external(external_id=\"<id>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.customers.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/customers/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.update(id=\"<value>\", customer_update={\n        \"email\": \"customer@example.com\",\n        \"name\": \"John Doe\",\n        \"billing_address\": {\n            \"country\": \"US\",\n        },\n        \"tax_id\": [\n            \"911144442\",\n            \"us_ein\",\n        ],\n        \"external_id\": \"usr_1337\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/customers/{id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.customers.get_state(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/discounts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/discounts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.create(request={\n        \"duration\": polar_sdk.DiscountDuration.ONCE,\n        \"type\": polar_sdk.DiscountType.FIXED,\n        \"basis_points\": 449604,\n        \"name\": \"<value>\",\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/discounts/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.discounts.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/discounts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/discounts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.discounts.update(id=\"<value>\", discount_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/events/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/events/ingest"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.ingest(request={\n        \"events\": [],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/events/names"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.list_names(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/events/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.events.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/files/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/files/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.create(request={\n        \"name\": \"<value>\",\n        \"mime_type\": \"<value>\",\n        \"size\": 612128,\n        \"upload\": {\n            \"parts\": [],\n        },\n        \"service\": \"downloadable\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/files/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.files.delete(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/files/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.update(id=\"<value>\", file_patch={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/files/{id}/uploaded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.files.uploaded(id=\"<value>\", file_upload_completed={\n        \"id\": \"<id>\",\n        \"path\": \"/boot\",\n        \"parts\": [\n            {\n                \"number\": 979613,\n                \"checksum_etag\": \"<value>\",\n                \"checksum_sha256_base64\": \"<value>\",\n            },\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/license-keys/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/license-keys/activate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.activate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n        \"label\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/license-keys/deactivate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.license_keys.deactivate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n        \"activation_id\": \"<value>\",\n    })\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/license-keys/validate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.validate(request={\n        \"key\": \"<key>\",\n        \"organization_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/license-keys/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.update(id=\"<value>\", license_key_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/license-keys/{id}/activations/{activation_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.license_keys.get_activation(id=\"<value>\", activation_id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/meters/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.create(request={\n        \"name\": \"<value>\",\n        \"filter_\": {\n            \"conjunction\": polar_sdk.FilterConjunction.OR,\n            \"clauses\": [],\n        },\n        \"aggregation\": {\n            \"func\": \"count\",\n        },\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.update(id=\"<value>\", meter_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/meters/{id}/quantities"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.meters.quantities(id=\"<value>\", start_timestamp=parse_datetime(\"2025-11-25T04:37:16.823Z\"), end_timestamp=parse_datetime(\"2025-11-26T17:06:00.727Z\"), interval=polar_sdk.TimeInterval.DAY)\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/metrics/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from datetime import date\nimport polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.metrics.get(start_date=date.fromisoformat(\"2025-03-14\"), end_date=date.fromisoformat(\"2025-03-18\"), interval=polar_sdk.TimeInterval.HOUR, timezone=\"UTC\", organization_id=None)\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/metrics/limits"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.metrics.limits()\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/authorize"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.authorize()\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/introspect"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.oauth2.introspect(request={\n        \"token\": \"<value>\",\n        \"client_id\": \"<id>\",\n        \"client_secret\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/revoke"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.oauth2.revoke(request={\n        \"token\": \"<value>\",\n        \"client_id\": \"<id>\",\n        \"client_secret\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/token"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar() as polar:\n\n    res = polar.oauth2.token(request={\n        \"grant_type\": \"authorization_code\",\n        \"client_id\": \"<id>\",\n        \"client_secret\": \"<value>\",\n        \"code\": \"<value>\",\n        \"redirect_uri\": \"https://memorable-season.name\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/oauth2/userinfo"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.oauth2.userinfo()\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.orders.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.orders.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/orders/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.orders.update(id=\"<value>\", order_update={\n        \"billing_name\": \"<value>\",\n        \"billing_address\": {\n            \"country\": \"US\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.orders.invoice(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/orders/{id}/invoice"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.orders.generate_invoice(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/organizations/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.list(page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/organizations/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.create(request={\n        \"name\": \"<value>\",\n        \"slug\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/organizations/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.get(id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/organizations/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.organizations.update(id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", organization_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/payments/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.payments.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/payments/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.payments.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.list(organization_id=None, page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/products/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.create(request={\n        \"name\": \"<value>\",\n        \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n        \"prices\": [],\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.update(id=\"<value>\", product_update={})\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/products/{id}/benefits"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.products.update_benefits(id=\"<value>\", product_benefits_update={\n        \"benefits\": [\n            \"<value 1>\",\n            \"<value 2>\",\n            \"<value 3>\",\n        ],\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/refunds/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.refunds.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/refunds/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.refunds.create(request={\n        \"order_id\": \"<value>\",\n        \"reason\": polar_sdk.RefundReason.CUSTOMER_REQUEST,\n        \"amount\": 90,\n    })\n\n    assert res is not None\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.list(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/subscriptions/export"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.export(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.revoke(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.get(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.subscriptions.update(id=\"<value>\", subscription_update={\n        \"discount_id\": \"<value>\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/webhooks/deliveries"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.webhooks.list_webhook_deliveries(page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/webhooks/endpoints"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.webhooks.list_webhook_endpoints(organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\", page=1, limit=10)\n\n    while res is not None:\n        # Handle items\n\n        res = res.next()"
  - target: $["paths"]["/v1/webhooks/endpoints"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.webhooks.create_webhook_endpoint(request={\n        \"url\": \"https://webhook.site/cb791d80-f26e-4f8c-be88-6e56054192b0\",\n        \"format_\": polar_sdk.WebhookFormat.SLACK,\n        \"events\": [\n            polar_sdk.WebhookEventType.SUBSCRIPTION_UNCANCELED,\n        ],\n        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/webhooks/endpoints/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    polar.webhooks.delete_webhook_endpoint(id=\"<value>\")\n\n    # Use the SDK ..."
  - target: $["paths"]["/v1/webhooks/endpoints/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.webhooks.get_webhook_endpoint(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/webhooks/endpoints/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.webhooks.update_webhook_endpoint(id=\"<value>\", webhook_endpoint_update={\n        \"url\": \"https://webhook.site/cb791d80-f26e-4f8c-be88-6e56054192b0\",\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/webhooks/endpoints/{id}/secret"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.webhooks.reset_webhook_endpoint_secret(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["/v1/webhooks/events/{id}/redeliver"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\n\n\nwith Polar(\n    access_token=\"<YOUR_BEARER_TOKEN_HERE>\",\n) as polar:\n\n    res = polar.webhooks.redeliver_webhook_event(id=\"<value>\")\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_created_post(request={\n        \"type\": \"benefit.created\",\n        \"data\": {\n            \"id\": \"<value>\",\n            \"created_at\": parse_datetime(\"2024-05-25T19:36:21.799Z\"),\n            \"modified_at\": parse_datetime(\"2023-12-03T18:35:26.911Z\"),\n            \"type\": \"meter_credit\",\n            \"description\": \"futon redraw forenenst pecan evince if\",\n            \"selectable\": False,\n            \"deletable\": False,\n            \"organization_id\": \"<value>\",\n            \"metadata\": {\n                \"key\": \"<value>\",\n            },\n            \"properties\": {\n                \"units\": 623977,\n                \"rollover\": True,\n                \"meter_id\": \"<value>\",\n            },\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_updated_post(request={\n        \"type\": \"benefit.updated\",\n        \"data\": {\n            \"id\": \"<value>\",\n            \"created_at\": parse_datetime(\"2023-05-30T17:26:31.997Z\"),\n            \"modified_at\": parse_datetime(\"2024-07-30T05:38:56.086Z\"),\n            \"type\": \"downloadables\",\n            \"description\": \"metal preregister psst woot somber\",\n            \"selectable\": False,\n            \"deletable\": False,\n            \"organization_id\": \"<value>\",\n            \"metadata\": {\n\n            },\n            \"properties\": {\n                \"archived\": {\n                    \"key\": True,\n                    \"key1\": False,\n                },\n                \"files\": [\n                    \"<value 1>\",\n                ],\n            },\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_created_post(request=polar_sdk.WebhookBenefitGrantCreatedPayload(\n        data=polar_sdk.BenefitGrantWebhook(\n            created_at=parse_datetime(\"2025-07-29T09:12:26.895Z\"),\n            modified_at=parse_datetime(\"2025-07-26T11:51:14.320Z\"),\n            id=\"<value>\",\n            is_granted=False,\n            is_revoked=True,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer=polar_sdk.Customer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2024-05-22T17:07:22.158Z\"),\n                modified_at=parse_datetime(\"2025-05-12T01:27:02.379Z\"),\n                metadata={\n                    \"key\": 74631,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2023-02-21T01:01:33.050Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            properties=polar_sdk.BenefitGrantCustomProperties(),\n            benefit=polar_sdk.BenefitDiscord(\n                id=\"<value>\",\n                created_at=parse_datetime(\"2024-02-04T07:22:26.555Z\"),\n                modified_at=parse_datetime(\"2024-01-11T07:21:59.726Z\"),\n                description=\"sand um plagiarise dearly\",\n                selectable=False,\n                deletable=True,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": False,\n                },\n                properties=polar_sdk.BenefitDiscordProperties(\n                    guild_id=\"<id>\",\n                    role_id=\"<id>\",\n                    kick_member=False,\n                    guild_token=\"<value>\",\n                ),\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.cycled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_cycled_post(request=polar_sdk.WebhookBenefitGrantCycledPayload(\n        data=polar_sdk.BenefitGrantWebhook(\n            created_at=parse_datetime(\"2023-11-21T13:26:50.948Z\"),\n            modified_at=None,\n            id=\"<value>\",\n            is_granted=True,\n            is_revoked=True,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer=polar_sdk.Customer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2025-02-09T07:31:14.605Z\"),\n                modified_at=parse_datetime(\"2024-01-29T22:31:09.229Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2023-02-26T15:17:14.361Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            properties=polar_sdk.BenefitGrantCustomProperties(),\n            benefit=polar_sdk.BenefitMeterCredit(\n                id=\"<value>\",\n                created_at=parse_datetime(\"2025-09-22T10:01:13.690Z\"),\n                modified_at=parse_datetime(\"2025-07-14T03:36:29.696Z\"),\n                description=\"soulful which reapply muddy never pish plus duh up ecliptic\",\n                selectable=True,\n                deletable=True,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": \"<value>\",\n                },\n                properties=polar_sdk.BenefitMeterCreditProperties(\n                    units=107264,\n                    rollover=False,\n                    meter_id=\"<value>\",\n                ),\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_revoked_post(request=polar_sdk.WebhookBenefitGrantRevokedPayload(\n        data=polar_sdk.BenefitGrantWebhook(\n            created_at=parse_datetime(\"2025-10-11T18:40:00.865Z\"),\n            modified_at=None,\n            id=\"<value>\",\n            is_granted=True,\n            is_revoked=True,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer=polar_sdk.Customer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2024-02-19T18:50:01.394Z\"),\n                modified_at=parse_datetime(\"2024-11-20T19:24:54.327Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2024-05-31T18:00:43.998Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            properties=polar_sdk.BenefitGrantCustomProperties(),\n            benefit=polar_sdk.BenefitGitHubRepository(\n                id=\"<value>\",\n                created_at=parse_datetime(\"2025-11-04T03:19:52.925Z\"),\n                modified_at=parse_datetime(\"2024-12-07T07:46:15.545Z\"),\n                description=\"maestro silk er hence furthermore commandeer practical\",\n                selectable=True,\n                deletable=False,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": False,\n                },\n                properties=polar_sdk.BenefitGitHubRepositoryProperties(\n                    repository_owner=\"polarsource\",\n                    repository_name=\"private_repo\",\n                    permission=polar_sdk.Permission.MAINTAIN,\n                ),\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["benefit_grant.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointbenefit_grant_updated_post(request=polar_sdk.WebhookBenefitGrantUpdatedPayload(\n        data=polar_sdk.BenefitGrantWebhook(\n            created_at=parse_datetime(\"2023-06-15T00:42:20.858Z\"),\n            modified_at=parse_datetime(\"2023-09-09T02:35:13.085Z\"),\n            id=\"<value>\",\n            is_granted=True,\n            is_revoked=True,\n            subscription_id=\"<value>\",\n            order_id=\"<value>\",\n            customer_id=\"<value>\",\n            benefit_id=\"<value>\",\n            customer=polar_sdk.Customer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2023-07-19T15:08:59.439Z\"),\n                modified_at=parse_datetime(\"2024-06-22T06:57:35.281Z\"),\n                metadata={\n                    \"key\": False,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2025-12-12T05:42:20.338Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            properties=polar_sdk.BenefitGrantCustomProperties(),\n            benefit=polar_sdk.BenefitMeterCredit(\n                id=\"<value>\",\n                created_at=parse_datetime(\"2025-09-22T18:19:02.554Z\"),\n                modified_at=parse_datetime(\"2023-12-23T22:21:47.780Z\"),\n                description=\"diligently phony super boo veg crafty\",\n                selectable=False,\n                deletable=True,\n                organization_id=\"<value>\",\n                metadata={\n\n                },\n                properties=polar_sdk.BenefitMeterCreditProperties(\n                    units=763456,\n                    rollover=False,\n                    meter_id=\"<value>\",\n                ),\n            ),\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["checkout.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcheckout_created_post(request=polar_sdk.WebhookCheckoutCreatedPayload(\n        data=polar_sdk.Checkout(\n            created_at=parse_datetime(\"2023-02-15T15:44:21.478Z\"),\n            modified_at=parse_datetime(\"2023-09-13T08:36:46.434Z\"),\n            id=\"<value>\",\n            payment_processor=polar_sdk.PaymentProcessor.STRIPE,\n            status=polar_sdk.CheckoutStatus.EXPIRED,\n            client_secret=\"<value>\",\n            url=\"https://whole-aftermath.net/\",\n            expires_at=parse_datetime(\"2023-12-28T10:30:56.042Z\"),\n            success_url=\"https://moral-premier.name/\",\n            embed_origin=\"<value>\",\n            amount=929514,\n            discount_amount=323773,\n            net_amount=115799,\n            tax_amount=97012,\n            total_amount=859980,\n            currency=\"Fiji Dollar\",\n            product_id=\"<value>\",\n            product_price_id=\"<value>\",\n            discount_id=None,\n            allow_discount_codes=True,\n            require_billing_address=True,\n            is_discount_applicable=True,\n            is_free_product_price=True,\n            is_payment_required=True,\n            is_payment_setup_required=True,\n            is_payment_form_required=True,\n            customer_id=\"<value>\",\n            is_business_customer=False,\n            customer_name=\"<value>\",\n            customer_email=None,\n            customer_ip_address=None,\n            customer_billing_name=\"<value>\",\n            customer_billing_address=polar_sdk.Address(\n                country=\"US\",\n            ),\n            customer_tax_id=\"<id>\",\n            payment_processor_metadata={\n                \"key\": \"<value>\",\n                \"key1\": \"<value>\",\n                \"key2\": \"<value>\",\n            },\n            billing_address_fields=polar_sdk.CheckoutBillingAddressFields(\n                country=polar_sdk.BillingAddressFieldMode.DISABLED,\n                state=polar_sdk.BillingAddressFieldMode.DISABLED,\n                city=polar_sdk.BillingAddressFieldMode.DISABLED,\n                postal_code=polar_sdk.BillingAddressFieldMode.DISABLED,\n                line1=polar_sdk.BillingAddressFieldMode.DISABLED,\n                line2=polar_sdk.BillingAddressFieldMode.DISABLED,\n            ),\n            metadata={\n\n            },\n            external_customer_id=\"<id>\",\n            customer_external_id=\"<id>\",\n            products=[],\n            product=polar_sdk.CheckoutProduct(\n                created_at=parse_datetime(\"2024-09-25T08:09:25.820Z\"),\n                modified_at=parse_datetime(\"2025-04-15T15:50:37.647Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"gee noisily mouser tentacle\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                is_recurring=False,\n                is_archived=False,\n                organization_id=\"<value>\",\n                prices=[],\n                benefits=[],\n                medias=[],\n            ),\n            product_price=polar_sdk.LegacyRecurringProductPriceFree(\n                created_at=parse_datetime(\"2023-10-02T03:50:07.919Z\"),\n                modified_at=parse_datetime(\"2025-06-07T12:37:50.969Z\"),\n                id=\"<value>\",\n                is_archived=True,\n                product_id=\"<value>\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n            ),\n            discount=polar_sdk.CheckoutDiscountFixedOnceForeverDuration(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                type=polar_sdk.DiscountType.FIXED,\n                amount=168537,\n                currency=\"Tala\",\n                id=\"<value>\",\n                name=\"<value>\",\n                code=\"<value>\",\n            ),\n            subscription_id=\"<value>\",\n            attached_custom_fields=[],\n            customer_metadata={\n                \"key\": True,\n            },\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["checkout.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcheckout_updated_post(request=polar_sdk.WebhookCheckoutUpdatedPayload(\n        data=polar_sdk.Checkout(\n            created_at=parse_datetime(\"2023-03-19T05:40:46.816Z\"),\n            modified_at=parse_datetime(\"2025-01-17T21:45:54.449Z\"),\n            id=\"<value>\",\n            payment_processor=polar_sdk.PaymentProcessor.STRIPE,\n            status=polar_sdk.CheckoutStatus.SUCCEEDED,\n            client_secret=\"<value>\",\n            url=\"https://wasteful-kinase.net/\",\n            expires_at=parse_datetime(\"2024-07-13T07:40:45.762Z\"),\n            success_url=\"https://unwieldy-lift.name\",\n            embed_origin=\"<value>\",\n            amount=328864,\n            discount_amount=67168,\n            net_amount=710560,\n            tax_amount=164230,\n            total_amount=754328,\n            currency=\"New Taiwan Dollar\",\n            product_id=\"<value>\",\n            product_price_id=\"<value>\",\n            discount_id=\"<value>\",\n            allow_discount_codes=True,\n            require_billing_address=True,\n            is_discount_applicable=True,\n            is_free_product_price=True,\n            is_payment_required=True,\n            is_payment_setup_required=False,\n            is_payment_form_required=True,\n            customer_id=None,\n            is_business_customer=False,\n            customer_name=\"<value>\",\n            customer_email=\"<value>\",\n            customer_ip_address=\"<value>\",\n            customer_billing_name=\"<value>\",\n            customer_billing_address=polar_sdk.Address(\n                country=\"US\",\n            ),\n            customer_tax_id=\"<id>\",\n            payment_processor_metadata={\n\n            },\n            billing_address_fields=polar_sdk.CheckoutBillingAddressFields(\n                country=polar_sdk.BillingAddressFieldMode.DISABLED,\n                state=polar_sdk.BillingAddressFieldMode.DISABLED,\n                city=polar_sdk.BillingAddressFieldMode.DISABLED,\n                postal_code=polar_sdk.BillingAddressFieldMode.REQUIRED,\n                line1=polar_sdk.BillingAddressFieldMode.OPTIONAL,\n                line2=polar_sdk.BillingAddressFieldMode.REQUIRED,\n            ),\n            metadata={\n                \"key\": True,\n            },\n            external_customer_id=\"<id>\",\n            customer_external_id=\"<id>\",\n            products=[],\n            product=polar_sdk.CheckoutProduct(\n                created_at=parse_datetime(\"2024-06-16T19:55:05.566Z\"),\n                modified_at=parse_datetime(\"2025-10-23T11:11:52.082Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"under past upside-down tempting by or hippodrome mountain\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                is_recurring=True,\n                is_archived=False,\n                organization_id=\"<value>\",\n                prices=[],\n                benefits=[\n                    polar_sdk.BenefitPublic(\n                        id=\"<value>\",\n                        created_at=parse_datetime(\"2025-06-02T16:08:47.056Z\"),\n                        modified_at=parse_datetime(\"2024-07-14T16:21:23.700Z\"),\n                        type=polar_sdk.BenefitType.GITHUB_REPOSITORY,\n                        description=\"mid stained mmm splendid\",\n                        selectable=True,\n                        deletable=True,\n                        organization_id=\"<value>\",\n                    ),\n                ],\n                medias=[],\n            ),\n            product_price=polar_sdk.LegacyRecurringProductPriceFixed(\n                created_at=parse_datetime(\"2025-12-11T13:44:40.797Z\"),\n                modified_at=parse_datetime(\"2024-04-10T22:07:41.629Z\"),\n                id=\"<value>\",\n                is_archived=True,\n                product_id=\"<value>\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                price_currency=\"<value>\",\n                price_amount=351578,\n            ),\n            discount=polar_sdk.CheckoutDiscountPercentageOnceForeverDuration(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                type=polar_sdk.DiscountType.FIXED,\n                basis_points=237002,\n                id=\"<value>\",\n                name=\"<value>\",\n                code=\"<value>\",\n            ),\n            subscription_id=\"<value>\",\n            attached_custom_fields=[\n                polar_sdk.AttachedCustomField(\n                    custom_field_id=\"<value>\",\n                    custom_field=polar_sdk.CustomFieldSelect(\n                        created_at=parse_datetime(\"2024-08-12T14:24:20.342Z\"),\n                        modified_at=parse_datetime(\"2023-08-01T03:55:09.650Z\"),\n                        id=\"<value>\",\n                        metadata={\n                            \"key\": 6493.42,\n                        },\n                        slug=\"<value>\",\n                        name=\"<value>\",\n                        organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        properties=polar_sdk.CustomFieldSelectProperties(\n                            options=[],\n                        ),\n                    ),\n                    order=519931,\n                    required=True,\n                ),\n            ],\n            customer_metadata={\n\n            },\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["customer.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcustomer_created_post(request={\n        \"type\": \"customer.created\",\n        \"data\": {\n            \"id\": \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n            \"created_at\": parse_datetime(\"2025-10-24T17:37:29.711Z\"),\n            \"modified_at\": parse_datetime(\"2025-07-16T19:46:09.413Z\"),\n            \"metadata\": {\n                \"key\": \"<value>\",\n            },\n            \"external_id\": \"usr_1337\",\n            \"email\": \"customer@example.com\",\n            \"email_verified\": True,\n            \"name\": \"John Doe\",\n            \"billing_address\": {\n                \"country\": \"US\",\n            },\n            \"tax_id\": [\n                \"911144442\",\n                \"us_ein\",\n            ],\n            \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"deleted_at\": parse_datetime(\"2023-03-24T20:28:46.681Z\"),\n            \"avatar_url\": \"https://www.gravatar.com/avatar/xxx?d=404\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["customer.deleted"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcustomer_deleted_post(request={\n        \"type\": \"customer.deleted\",\n        \"data\": {\n            \"id\": \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n            \"created_at\": parse_datetime(\"2023-07-12T21:40:34.752Z\"),\n            \"modified_at\": parse_datetime(\"2025-02-26T09:36:28.870Z\"),\n            \"metadata\": {\n\n            },\n            \"external_id\": \"usr_1337\",\n            \"email\": \"customer@example.com\",\n            \"email_verified\": True,\n            \"name\": \"John Doe\",\n            \"billing_address\": {\n                \"country\": \"US\",\n            },\n            \"tax_id\": [\n                \"911144442\",\n                \"us_ein\",\n            ],\n            \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"deleted_at\": parse_datetime(\"2023-07-08T00:32:27.730Z\"),\n            \"avatar_url\": \"https://www.gravatar.com/avatar/xxx?d=404\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["customer.state_changed"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcustomer_state_changed_post(request={\n        \"type\": \"customer.state_changed\",\n        \"data\": {\n            \"id\": \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n            \"created_at\": parse_datetime(\"2025-05-22T16:03:32.369Z\"),\n            \"modified_at\": parse_datetime(\"2023-04-17T22:11:17.879Z\"),\n            \"metadata\": {\n\n            },\n            \"external_id\": \"usr_1337\",\n            \"email\": \"customer@example.com\",\n            \"email_verified\": True,\n            \"name\": \"John Doe\",\n            \"billing_address\": {\n                \"country\": \"US\",\n            },\n            \"tax_id\": [\n                \"911144442\",\n                \"us_ein\",\n            ],\n            \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"deleted_at\": parse_datetime(\"2025-09-08T18:19:10.187Z\"),\n            \"active_subscriptions\": [],\n            \"granted_benefits\": [\n                {\n                    \"id\": \"d322132c-a9d0-4e0d-b8d3-d81ad021a3a9\",\n                    \"created_at\": parse_datetime(\"2025-09-01T02:21:29.525Z\"),\n                    \"modified_at\": parse_datetime(\"2023-11-12T17:51:37.646Z\"),\n                    \"granted_at\": parse_datetime(\"2025-01-03T13:37:00Z\"),\n                    \"benefit_id\": \"397a17aa-15cf-4cb4-9333-18040203cf98\",\n                    \"benefit_type\": polar_sdk.BenefitType.METER_CREDIT,\n                    \"benefit_metadata\": {\n                        \"key\": \"value\",\n                    },\n                    \"properties\": {},\n                },\n            ],\n            \"active_meters\": [\n                {\n                    \"id\": \"<value>\",\n                    \"created_at\": parse_datetime(\"2023-08-10T12:57:32.427Z\"),\n                    \"modified_at\": parse_datetime(\"2024-11-09T02:09:01.550Z\"),\n                    \"meter_id\": \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    \"consumed_units\": 25,\n                    \"credited_units\": 100,\n                    \"balance\": 75,\n                },\n            ],\n            \"avatar_url\": \"https://www.gravatar.com/avatar/xxx?d=404\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["customer.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "from polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointcustomer_updated_post(request={\n        \"type\": \"customer.updated\",\n        \"data\": {\n            \"id\": \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n            \"created_at\": parse_datetime(\"2023-07-09T20:22:33.716Z\"),\n            \"modified_at\": parse_datetime(\"2024-10-16T21:39:43.150Z\"),\n            \"metadata\": {\n\n            },\n            \"external_id\": \"usr_1337\",\n            \"email\": \"customer@example.com\",\n            \"email_verified\": True,\n            \"name\": \"John Doe\",\n            \"billing_address\": {\n                \"country\": \"US\",\n            },\n            \"tax_id\": [\n                \"911144442\",\n                \"us_ein\",\n            ],\n            \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"deleted_at\": parse_datetime(\"2025-12-14T00:37:03.564Z\"),\n            \"avatar_url\": \"https://www.gravatar.com/avatar/xxx?d=404\",\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_created_post(request=polar_sdk.WebhookOrderCreatedPayload(\n        data=polar_sdk.Order(\n            id=\"<value>\",\n            created_at=parse_datetime(\"2024-08-21T06:55:49.348Z\"),\n            modified_at=None,\n            status=polar_sdk.OrderStatus.REFUNDED,\n            paid=True,\n            subtotal_amount=952546,\n            discount_amount=47294,\n            net_amount=220865,\n            tax_amount=835005,\n            total_amount=913636,\n            refunded_amount=727987,\n            refunded_tax_amount=597376,\n            currency=\"New Taiwan Dollar\",\n            billing_reason=polar_sdk.OrderBillingReason.SUBSCRIPTION_CREATE,\n            billing_name=\"<value>\",\n            billing_address=polar_sdk.Address(\n                country=\"US\",\n            ),\n            is_invoice_generated=True,\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            subscription_id=\"<value>\",\n            checkout_id=\"<value>\",\n            metadata={\n                \"key\": 701529,\n            },\n            customer=polar_sdk.OrderCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2023-08-28T08:49:40.562Z\"),\n                modified_at=None,\n                metadata={\n                    \"key\": 807321,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2024-07-30T20:36:36.637Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            user_id=\"<value>\",\n            product=polar_sdk.OrderProduct(\n                metadata={\n\n                },\n                created_at=parse_datetime(\"2023-10-18T19:16:06.791Z\"),\n                modified_at=parse_datetime(\"2023-07-25T14:06:55.496Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"hence hoof amid nimble\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=False,\n                is_archived=False,\n                organization_id=\"<value>\",\n            ),\n            discount=polar_sdk.DiscountPercentageOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.REPEATING,\n                type=polar_sdk.DiscountType.FIXED,\n                basis_points=765577,\n                created_at=parse_datetime(\"2025-12-27T11:04:16.188Z\"),\n                modified_at=parse_datetime(\"2023-07-01T09:05:58.012Z\"),\n                id=\"<value>\",\n                metadata={\n                    \"key\": 736909,\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2024-11-14T21:15:37.421Z\"),\n                ends_at=parse_datetime(\"2023-03-07T03:56:36.953Z\"),\n                max_redemptions=28675,\n                redemptions_count=967708,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            subscription=polar_sdk.OrderSubscription(\n                metadata={\n\n                },\n                created_at=parse_datetime(\"2023-01-24T21:36:11.677Z\"),\n                modified_at=parse_datetime(\"2025-12-03T03:30:23.797Z\"),\n                id=\"<value>\",\n                amount=298671,\n                currency=\"Boliviano boliviano\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.DAY,\n                status=polar_sdk.SubscriptionStatus.INCOMPLETE_EXPIRED,\n                current_period_start=parse_datetime(\"2023-07-06T04:28:24.973Z\"),\n                current_period_end=parse_datetime(\"2024-04-03T16:38:36.332Z\"),\n                cancel_at_period_end=True,\n                canceled_at=parse_datetime(\"2025-08-06T13:46:26.730Z\"),\n                started_at=parse_datetime(\"2023-08-04T14:24:05.390Z\"),\n                ends_at=parse_datetime(\"2023-01-25T10:47:26.689Z\"),\n                ended_at=None,\n                customer_id=\"<value>\",\n                product_id=\"<value>\",\n                discount_id=\"<value>\",\n                checkout_id=None,\n                customer_cancellation_reason=polar_sdk.CustomerCancellationReason.MISSING_FEATURES,\n                customer_cancellation_comment=\"<value>\",\n            ),\n            items=[],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.paid"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_paid_post(request=polar_sdk.WebhookOrderPaidPayload(\n        data=polar_sdk.Order(\n            id=\"<value>\",\n            created_at=parse_datetime(\"2025-12-05T07:44:21.172Z\"),\n            modified_at=parse_datetime(\"2024-12-11T22:14:44.762Z\"),\n            status=polar_sdk.OrderStatus.REFUNDED,\n            paid=True,\n            subtotal_amount=806442,\n            discount_amount=990825,\n            net_amount=746396,\n            tax_amount=341385,\n            total_amount=486648,\n            refunded_amount=562504,\n            refunded_tax_amount=314047,\n            currency=\"Ouguiya\",\n            billing_reason=polar_sdk.OrderBillingReason.SUBSCRIPTION_CYCLE,\n            billing_name=\"<value>\",\n            billing_address=polar_sdk.Address(\n                country=\"US\",\n            ),\n            is_invoice_generated=True,\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            subscription_id=\"<value>\",\n            checkout_id=None,\n            metadata={\n\n            },\n            customer=polar_sdk.OrderCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2025-10-27T20:31:30.562Z\"),\n                modified_at=parse_datetime(\"2025-04-26T07:56:18.616Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2025-08-01T03:33:20.782Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            user_id=\"<value>\",\n            product=polar_sdk.OrderProduct(\n                metadata={\n                    \"key\": 179185,\n                },\n                created_at=parse_datetime(\"2023-05-18T09:50:39.456Z\"),\n                modified_at=parse_datetime(\"2025-07-31T08:10:01.120Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"though rigidly gradient pure whimsical ew personalise exalt scorn gee\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=True,\n                is_archived=False,\n                organization_id=\"<value>\",\n            ),\n            discount=polar_sdk.DiscountFixedRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                duration_in_months=871130,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                amount=727805,\n                currency=\"Kwacha\",\n                created_at=parse_datetime(\"2024-09-10T07:58:34.888Z\"),\n                modified_at=parse_datetime(\"2025-07-17T03:39:23.964Z\"),\n                id=\"<value>\",\n                metadata={\n\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2024-07-29T13:43:57.010Z\"),\n                ends_at=parse_datetime(\"2025-06-10T20:57:22.896Z\"),\n                max_redemptions=None,\n                redemptions_count=499443,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            subscription=polar_sdk.OrderSubscription(\n                metadata={\n                    \"key\": 165283,\n                },\n                created_at=parse_datetime(\"2025-08-05T06:11:40.745Z\"),\n                modified_at=parse_datetime(\"2023-12-05T06:32:48.307Z\"),\n                id=\"<value>\",\n                amount=18384,\n                currency=\"Tanzanian Shilling\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.WEEK,\n                status=polar_sdk.SubscriptionStatus.INCOMPLETE_EXPIRED,\n                current_period_start=parse_datetime(\"2024-06-19T05:54:14.128Z\"),\n                current_period_end=parse_datetime(\"2025-08-28T12:32:52.795Z\"),\n                cancel_at_period_end=False,\n                canceled_at=parse_datetime(\"2023-08-04T10:17:52.706Z\"),\n                started_at=parse_datetime(\"2025-08-27T04:13:10.004Z\"),\n                ends_at=None,\n                ended_at=parse_datetime(\"2024-06-22T19:17:00.470Z\"),\n                customer_id=\"<value>\",\n                product_id=\"<value>\",\n                discount_id=\"<value>\",\n                checkout_id=\"<value>\",\n                customer_cancellation_reason=polar_sdk.CustomerCancellationReason.TOO_COMPLEX,\n                customer_cancellation_comment=\"<value>\",\n            ),\n            items=[\n                polar_sdk.OrderItemSchema(\n                    created_at=parse_datetime(\"2024-07-19T20:12:40.543Z\"),\n                    modified_at=None,\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=116439,\n                    tax_amount=200966,\n                    proration=True,\n                    product_price_id=\"<value>\",\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.refunded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_refunded_post(request=polar_sdk.WebhookOrderRefundedPayload(\n        data=polar_sdk.Order(\n            id=\"<value>\",\n            created_at=parse_datetime(\"2024-07-23T18:00:11.615Z\"),\n            modified_at=parse_datetime(\"2024-08-23T03:13:11.383Z\"),\n            status=polar_sdk.OrderStatus.REFUNDED,\n            paid=True,\n            subtotal_amount=678552,\n            discount_amount=294178,\n            net_amount=721778,\n            tax_amount=913001,\n            total_amount=518308,\n            refunded_amount=820663,\n            refunded_tax_amount=472431,\n            currency=\"Hryvnia\",\n            billing_reason=polar_sdk.OrderBillingReason.SUBSCRIPTION_CREATE,\n            billing_name=\"<value>\",\n            billing_address=polar_sdk.Address(\n                country=\"US\",\n            ),\n            is_invoice_generated=False,\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            subscription_id=\"<value>\",\n            checkout_id=\"<value>\",\n            metadata={\n                \"key\": 537174,\n            },\n            customer=polar_sdk.OrderCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2024-08-19T02:54:30.835Z\"),\n                modified_at=None,\n                metadata={\n                    \"key\": 97027,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2023-01-26T21:26:48.872Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            user_id=\"<value>\",\n            product=polar_sdk.OrderProduct(\n                metadata={\n\n                },\n                created_at=parse_datetime(\"2023-01-16T07:26:04.196Z\"),\n                modified_at=parse_datetime(\"2025-01-18T16:58:42.976Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"anxiously notwithstanding softly wilderness drat helpless conservation ew\",\n                recurring_interval=None,\n                is_recurring=False,\n                is_archived=False,\n                organization_id=\"<value>\",\n            ),\n            discount=polar_sdk.DiscountPercentageRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.FOREVER,\n                duration_in_months=177173,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                basis_points=175227,\n                created_at=parse_datetime(\"2024-06-23T22:24:00.212Z\"),\n                modified_at=parse_datetime(\"2025-09-20T03:04:20.355Z\"),\n                id=\"<value>\",\n                metadata={\n\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2024-09-22T11:17:00.498Z\"),\n                ends_at=parse_datetime(\"2023-01-04T20:02:20.162Z\"),\n                max_redemptions=477690,\n                redemptions_count=429180,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            subscription=polar_sdk.OrderSubscription(\n                metadata={\n                    \"key\": True,\n                },\n                created_at=parse_datetime(\"2023-12-28T02:40:16.151Z\"),\n                modified_at=None,\n                id=\"<value>\",\n                amount=801440,\n                currency=\"Kwanza\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.WEEK,\n                status=polar_sdk.SubscriptionStatus.UNPAID,\n                current_period_start=parse_datetime(\"2025-12-13T00:18:40.316Z\"),\n                current_period_end=parse_datetime(\"2025-09-10T16:01:49.333Z\"),\n                cancel_at_period_end=False,\n                canceled_at=parse_datetime(\"2023-11-12T03:39:13.416Z\"),\n                started_at=parse_datetime(\"2024-11-06T04:39:52.000Z\"),\n                ends_at=parse_datetime(\"2024-06-22T23:44:00.447Z\"),\n                ended_at=parse_datetime(\"2024-11-02T04:41:56.340Z\"),\n                customer_id=\"<value>\",\n                product_id=\"<value>\",\n                discount_id=\"<value>\",\n                checkout_id=\"<value>\",\n                customer_cancellation_reason=polar_sdk.CustomerCancellationReason.MISSING_FEATURES,\n                customer_cancellation_comment=\"<value>\",\n            ),\n            items=[\n                polar_sdk.OrderItemSchema(\n                    created_at=parse_datetime(\"2024-06-01T22:10:54.514Z\"),\n                    modified_at=None,\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=584605,\n                    tax_amount=493789,\n                    proration=True,\n                    product_price_id=\"<value>\",\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["order.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorder_updated_post(request=polar_sdk.WebhookOrderUpdatedPayload(\n        data=polar_sdk.Order(\n            id=\"<value>\",\n            created_at=parse_datetime(\"2023-10-25T00:08:50.290Z\"),\n            modified_at=parse_datetime(\"2024-01-08T20:00:47.692Z\"),\n            status=polar_sdk.OrderStatus.PARTIALLY_REFUNDED,\n            paid=True,\n            subtotal_amount=198772,\n            discount_amount=338283,\n            net_amount=321919,\n            tax_amount=827864,\n            total_amount=380359,\n            refunded_amount=596980,\n            refunded_tax_amount=404069,\n            currency=\"Russian Ruble\",\n            billing_reason=polar_sdk.OrderBillingReason.SUBSCRIPTION_CYCLE,\n            billing_name=\"<value>\",\n            billing_address=polar_sdk.Address(\n                country=\"US\",\n            ),\n            is_invoice_generated=False,\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            subscription_id=\"<value>\",\n            checkout_id=\"<value>\",\n            metadata={\n                \"key\": 4784.54,\n            },\n            customer=polar_sdk.OrderCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2023-07-25T12:14:47.758Z\"),\n                modified_at=parse_datetime(\"2023-10-28T19:38:51.490Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=None,\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=None,\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            user_id=\"<value>\",\n            product=polar_sdk.OrderProduct(\n                metadata={\n                    \"key\": \"<value>\",\n                },\n                created_at=parse_datetime(\"2023-09-09T23:29:46.282Z\"),\n                modified_at=parse_datetime(\"2023-12-07T14:52:42.853Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"uniform waver pish coliseum consign absent drat cap including oof\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.MONTH,\n                is_recurring=False,\n                is_archived=False,\n                organization_id=\"<value>\",\n            ),\n            discount=polar_sdk.DiscountPercentageRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.FOREVER,\n                duration_in_months=860052,\n                type=polar_sdk.DiscountType.FIXED,\n                basis_points=650798,\n                created_at=parse_datetime(\"2024-02-06T09:06:51.703Z\"),\n                modified_at=None,\n                id=\"<value>\",\n                metadata={\n\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2023-11-03T05:13:30.202Z\"),\n                ends_at=parse_datetime(\"2024-03-03T03:52:46.888Z\"),\n                max_redemptions=858600,\n                redemptions_count=637128,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            subscription=None,\n            items=[\n                polar_sdk.OrderItemSchema(\n                    created_at=parse_datetime(\"2024-02-19T19:25:59.986Z\"),\n                    modified_at=parse_datetime(\"2025-07-23T06:42:36.223Z\"),\n                    id=\"<value>\",\n                    label=\"<value>\",\n                    amount=669405,\n                    tax_amount=12321,\n                    proration=False,\n                    product_price_id=None,\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["organization.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointorganization_updated_post(request={\n        \"type\": \"organization.updated\",\n        \"data\": {\n            \"created_at\": parse_datetime(\"2025-08-19T15:02:44.139Z\"),\n            \"modified_at\": parse_datetime(\"2025-08-23T00:45:50.780Z\"),\n            \"id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            \"name\": \"<value>\",\n            \"slug\": \"<value>\",\n            \"avatar_url\": None,\n            \"email\": \"Lemuel44@gmail.com\",\n            \"website\": \"<value>\",\n            \"socials\": [\n                {\n                    \"platform\": polar_sdk.OrganizationSocialPlatforms.TIKTOK,\n                    \"url\": \"https://grizzled-patroller.info/\",\n                },\n            ],\n            \"status\": polar_sdk.Status.CREATED,\n            \"details_submitted_at\": parse_datetime(\"2024-05-05T12:48:25.627Z\"),\n            \"feature_settings\": {},\n            \"subscription_settings\": {\n                \"allow_multiple_subscriptions\": True,\n                \"allow_customer_updates\": False,\n                \"proration_behavior\": polar_sdk.SubscriptionProrationBehavior.PRORATE,\n            },\n            \"notification_settings\": {\n                \"new_order\": True,\n                \"new_subscription\": True,\n            },\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["product.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointproduct_created_post(request={\n        \"type\": \"product.created\",\n        \"data\": {\n            \"created_at\": parse_datetime(\"2023-10-13T02:47:55.082Z\"),\n            \"modified_at\": None,\n            \"id\": \"<value>\",\n            \"name\": \"<value>\",\n            \"description\": \"till that ew put\",\n            \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.WEEK,\n            \"is_recurring\": False,\n            \"is_archived\": True,\n            \"organization_id\": \"<value>\",\n            \"metadata\": {\n                \"key\": 785881,\n            },\n            \"prices\": [\n                {\n                    \"created_at\": parse_datetime(\"2025-01-03T22:29:57.701Z\"),\n                    \"modified_at\": parse_datetime(\"2023-04-17T15:58:24.892Z\"),\n                    \"id\": \"<value>\",\n                    \"amount_type\": \"metered_unit\",\n                    \"is_archived\": True,\n                    \"product_id\": \"<value>\",\n                    \"type\": polar_sdk.ProductPriceType.RECURRING,\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.DAY,\n                    \"price_currency\": \"<value>\",\n                    \"unit_amount\": \"<value>\",\n                    \"cap_amount\": 348450,\n                    \"meter_id\": \"<value>\",\n                    \"meter\": {\n                        \"id\": \"<value>\",\n                        \"name\": \"<value>\",\n                    },\n                },\n            ],\n            \"benefits\": [],\n            \"medias\": [],\n            \"attached_custom_fields\": [\n                {\n                    \"custom_field_id\": \"<value>\",\n                    \"custom_field\": {\n                        \"created_at\": parse_datetime(\"2025-11-01T01:55:57.043Z\"),\n                        \"modified_at\": parse_datetime(\"2024-03-29T03:32:13.399Z\"),\n                        \"id\": \"<value>\",\n                        \"metadata\": {\n\n                        },\n                        \"type\": \"number\",\n                        \"slug\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        \"properties\": {},\n                    },\n                    \"order\": 253980,\n                    \"required\": False,\n                },\n            ],\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["product.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointproduct_updated_post(request={\n        \"type\": \"product.updated\",\n        \"data\": {\n            \"created_at\": parse_datetime(\"2024-08-25T02:00:54.049Z\"),\n            \"modified_at\": parse_datetime(\"2023-07-21T03:22:42.071Z\"),\n            \"id\": \"<value>\",\n            \"name\": \"<value>\",\n            \"description\": \"fooey optimistic beyond dress helpfully whispered structure heartfelt consequently\",\n            \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.MONTH,\n            \"is_recurring\": False,\n            \"is_archived\": False,\n            \"organization_id\": \"<value>\",\n            \"metadata\": {\n                \"key\": 495401,\n            },\n            \"prices\": [\n                {\n                    \"created_at\": parse_datetime(\"2023-07-01T18:10:48.406Z\"),\n                    \"modified_at\": None,\n                    \"id\": \"<value>\",\n                    \"amount_type\": \"free\",\n                    \"is_archived\": True,\n                    \"product_id\": \"<value>\",\n                    \"type\": \"recurring\",\n                    \"recurring_interval\": polar_sdk.SubscriptionRecurringInterval.WEEK,\n                    \"legacy\": True,\n                },\n            ],\n            \"benefits\": [],\n            \"medias\": [],\n            \"attached_custom_fields\": [\n                {\n                    \"custom_field_id\": \"<value>\",\n                    \"custom_field\": {\n                        \"created_at\": parse_datetime(\"2023-06-25T21:47:16.070Z\"),\n                        \"modified_at\": parse_datetime(\"2023-12-26T19:54:07.292Z\"),\n                        \"id\": \"<value>\",\n                        \"metadata\": {\n\n                        },\n                        \"type\": \"number\",\n                        \"slug\": \"<value>\",\n                        \"name\": \"<value>\",\n                        \"organization_id\": \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                        \"properties\": {},\n                    },\n                    \"order\": 910988,\n                    \"required\": True,\n                },\n            ],\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["refund.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointrefund_created_post(request={\n        \"type\": \"refund.created\",\n        \"data\": {\n            \"created_at\": parse_datetime(\"2025-02-15T13:46:01.700Z\"),\n            \"modified_at\": parse_datetime(\"2024-07-08T10:47:55.917Z\"),\n            \"id\": \"<value>\",\n            \"metadata\": {\n                \"key\": 1671.19,\n            },\n            \"status\": polar_sdk.RefundStatus.PENDING,\n            \"reason\": polar_sdk.RefundReason.OTHER,\n            \"amount\": 104569,\n            \"tax_amount\": 295454,\n            \"currency\": \"Solomon Islands Dollar\",\n            \"organization_id\": \"<value>\",\n            \"order_id\": \"<value>\",\n            \"subscription_id\": \"<value>\",\n            \"customer_id\": \"<value>\",\n            \"revoke_benefits\": False,\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["refund.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointrefund_updated_post(request={\n        \"type\": \"refund.updated\",\n        \"data\": {\n            \"created_at\": parse_datetime(\"2023-01-08T20:35:39.672Z\"),\n            \"modified_at\": parse_datetime(\"2025-09-12T22:02:00.691Z\"),\n            \"id\": \"<value>\",\n            \"metadata\": {\n                \"key\": \"<value>\",\n            },\n            \"status\": polar_sdk.RefundStatus.CANCELED,\n            \"reason\": polar_sdk.RefundReason.SERVICE_DISRUPTION,\n            \"amount\": 986698,\n            \"tax_amount\": 785012,\n            \"currency\": \"Congolese Franc\",\n            \"organization_id\": \"<value>\",\n            \"order_id\": \"<value>\",\n            \"subscription_id\": \"<value>\",\n            \"customer_id\": \"<value>\",\n            \"revoke_benefits\": False,\n        },\n    })\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.active"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_active_post(request=polar_sdk.WebhookSubscriptionActivePayload(\n        data=polar_sdk.Subscription(\n            created_at=parse_datetime(\"2023-08-13T01:28:21.362Z\"),\n            modified_at=parse_datetime(\"2024-06-25T00:41:05.678Z\"),\n            id=\"<value>\",\n            amount=320436,\n            currency=\"Peso Uruguayo\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.WEEK,\n            status=polar_sdk.SubscriptionStatus.PAST_DUE,\n            current_period_start=parse_datetime(\"2023-06-09T14:14:48.363Z\"),\n            current_period_end=None,\n            cancel_at_period_end=True,\n            canceled_at=None,\n            started_at=parse_datetime(\"2023-07-21T07:29:31.409Z\"),\n            ends_at=parse_datetime(\"2025-08-05T11:38:46.213Z\"),\n            ended_at=parse_datetime(\"2024-09-05T04:27:23.768Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.TOO_COMPLEX,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2025-04-15T00:36:48.299Z\"),\n                modified_at=parse_datetime(\"2024-08-17T18:35:42.212Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2025-01-01T03:00:09.282Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            product=polar_sdk.Product(\n                created_at=parse_datetime(\"2025-03-11T11:17:02.540Z\"),\n                modified_at=parse_datetime(\"2025-05-22T16:11:00.138Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"per indeed punctually\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.WEEK,\n                is_recurring=False,\n                is_archived=False,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": \"<value>\",\n                },\n                prices=[\n                    polar_sdk.LegacyRecurringProductPriceFixed(\n                        created_at=parse_datetime(\"2023-06-22T15:04:43.558Z\"),\n                        modified_at=parse_datetime(\"2023-02-05T17:39:30.893Z\"),\n                        id=\"<value>\",\n                        is_archived=False,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                        price_currency=\"<value>\",\n                        price_amount=924076,\n                    ),\n                ],\n                benefits=[],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/home\",\n                        mime_type=\"<value>\",\n                        size=462010,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=None,\n                        last_modified_at=parse_datetime(\"2024-12-02T20:32:47.578Z\"),\n                        version=\"<value>\",\n                        is_uploaded=True,\n                        created_at=parse_datetime(\"2024-02-08T05:56:24.956Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://regular-scratch.org/\",\n                    ),\n                ],\n                attached_custom_fields=[\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldDate(\n                            created_at=parse_datetime(\"2023-06-04T23:55:53.252Z\"),\n                            modified_at=parse_datetime(\"2024-08-20T09:23:26.342Z\"),\n                            id=\"<value>\",\n                            metadata={\n                                \"key\": True,\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldDateProperties(),\n                        ),\n                        order=612157,\n                        required=True,\n                    ),\n                ],\n            ),\n            discount=polar_sdk.DiscountPercentageRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                duration_in_months=829362,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                basis_points=431070,\n                created_at=parse_datetime(\"2024-04-05T11:10:16.533Z\"),\n                modified_at=parse_datetime(\"2023-02-12T06:44:11.052Z\"),\n                id=\"<value>\",\n                metadata={\n\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2023-03-15T20:22:59.077Z\"),\n                ends_at=parse_datetime(\"2025-04-04T17:29:43.877Z\"),\n                max_redemptions=90287,\n                redemptions_count=180745,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            prices=[],\n            meters=[],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.canceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_canceled_post(request=polar_sdk.WebhookSubscriptionCanceledPayload(\n        data=polar_sdk.Subscription(\n            created_at=parse_datetime(\"2025-02-09T04:39:02.332Z\"),\n            modified_at=parse_datetime(\"2023-04-18T10:38:03.481Z\"),\n            id=\"<value>\",\n            amount=137392,\n            currency=\"New Taiwan Dollar\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.DAY,\n            status=polar_sdk.SubscriptionStatus.ACTIVE,\n            current_period_start=parse_datetime(\"2023-06-17T04:15:56.819Z\"),\n            current_period_end=parse_datetime(\"2023-06-02T15:48:16.857Z\"),\n            cancel_at_period_end=False,\n            canceled_at=parse_datetime(\"2024-01-07T18:54:45.602Z\"),\n            started_at=parse_datetime(\"2025-02-23T12:23:49.579Z\"),\n            ends_at=parse_datetime(\"2023-11-16T08:24:59.166Z\"),\n            ended_at=parse_datetime(\"2023-07-21T16:25:14.433Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=None,\n            checkout_id=None,\n            customer_cancellation_reason=None,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2023-10-25T05:52:42.846Z\"),\n                modified_at=parse_datetime(\"2023-09-20T10:20:50.540Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2025-04-15T00:52:17.297Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            product=polar_sdk.Product(\n                created_at=parse_datetime(\"2024-10-18T00:58:28.923Z\"),\n                modified_at=parse_datetime(\"2025-06-11T17:21:10.206Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"rekindle very whoever happily provision pfft outrun surface\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.DAY,\n                is_recurring=False,\n                is_archived=True,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": True,\n                },\n                prices=[],\n                benefits=[\n                    polar_sdk.BenefitLicenseKeys(\n                        id=\"<value>\",\n                        created_at=parse_datetime(\"2024-10-21T11:59:45.315Z\"),\n                        modified_at=parse_datetime(\"2025-06-11T03:26:05.845Z\"),\n                        description=\"yippee broadcast er yowza\",\n                        selectable=True,\n                        deletable=True,\n                        organization_id=\"<value>\",\n                        metadata={\n\n                        },\n                        properties=polar_sdk.BenefitLicenseKeysProperties(\n                            prefix=\"<value>\",\n                            expires=polar_sdk.BenefitLicenseKeyExpirationProperties(\n                                ttl=156565,\n                                timeframe=polar_sdk.Timeframe.YEAR,\n                            ),\n                            activations=polar_sdk.BenefitLicenseKeyActivationProperties(\n                                limit=676095,\n                                enable_customer_admin=False,\n                            ),\n                            limit_usage=637284,\n                        ),\n                    ),\n                ],\n                medias=[],\n                attached_custom_fields=[\n                    polar_sdk.AttachedCustomField(\n                        custom_field_id=\"<value>\",\n                        custom_field=polar_sdk.CustomFieldText(\n                            created_at=parse_datetime(\"2023-03-07T15:42:46.324Z\"),\n                            modified_at=parse_datetime(\"2024-09-08T21:12:01.583Z\"),\n                            id=\"<value>\",\n                            metadata={\n\n                            },\n                            slug=\"<value>\",\n                            name=\"<value>\",\n                            organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                            properties=polar_sdk.CustomFieldTextProperties(),\n                        ),\n                        order=147849,\n                        required=False,\n                    ),\n                ],\n            ),\n            discount=polar_sdk.DiscountFixedRepeatDurationBase(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                duration_in_months=162086,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                amount=280213,\n                currency=\"Mexican Peso\",\n                created_at=parse_datetime(\"2024-09-21T23:00:18.902Z\"),\n                modified_at=parse_datetime(\"2024-06-12T08:11:27.558Z\"),\n                id=\"<value>\",\n                metadata={\n\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2024-04-30T07:29:19.925Z\"),\n                ends_at=parse_datetime(\"2025-12-08T04:46:29.428Z\"),\n                max_redemptions=264852,\n                redemptions_count=579638,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            prices=[\n                polar_sdk.LegacyRecurringProductPriceFixed(\n                    created_at=parse_datetime(\"2024-05-17T23:59:28.786Z\"),\n                    modified_at=parse_datetime(\"2024-05-31T09:51:13.446Z\"),\n                    id=\"<value>\",\n                    is_archived=True,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.WEEK,\n                    price_currency=\"<value>\",\n                    price_amount=57753,\n                ),\n            ],\n            meters=[\n                polar_sdk.SubscriptionMeter(\n                    created_at=parse_datetime(\"2023-04-20T13:22:47.883Z\"),\n                    modified_at=parse_datetime(\"2024-05-07T04:06:16.229Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n                            \"key\": False,\n                        },\n                        created_at=parse_datetime(\"2024-05-08T15:55:55.133Z\"),\n                        modified_at=parse_datetime(\"2024-02-15T18:41:28.030Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.AND,\n                            clauses=[],\n                        ),\n                        aggregation=polar_sdk.CountAggregation(),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_created_post(request=polar_sdk.WebhookSubscriptionCreatedPayload(\n        data=polar_sdk.Subscription(\n            created_at=parse_datetime(\"2024-05-03T11:46:21.459Z\"),\n            modified_at=parse_datetime(\"2025-01-12T06:30:14.360Z\"),\n            id=\"<value>\",\n            amount=469182,\n            currency=\"Boliviano boliviano\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n            status=polar_sdk.SubscriptionStatus.INCOMPLETE,\n            current_period_start=parse_datetime(\"2024-01-07T06:33:36.381Z\"),\n            current_period_end=parse_datetime(\"2024-07-30T16:54:44.427Z\"),\n            cancel_at_period_end=True,\n            canceled_at=parse_datetime(\"2023-09-10T18:39:16.136Z\"),\n            started_at=parse_datetime(\"2025-08-30T21:29:16.432Z\"),\n            ends_at=parse_datetime(\"2024-06-27T22:01:23.333Z\"),\n            ended_at=parse_datetime(\"2024-07-24T19:43:04.879Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=None,\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.MISSING_FEATURES,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2025-04-17T21:09:13.571Z\"),\n                modified_at=parse_datetime(\"2023-05-18T22:55:50.482Z\"),\n                metadata={\n                    \"key\": 5036.67,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2025-11-15T13:52:57.820Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            product=polar_sdk.Product(\n                created_at=parse_datetime(\"2025-09-26T04:05:17.473Z\"),\n                modified_at=parse_datetime(\"2025-06-26T21:09:46.234Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"mysteriously platypus scrape adventurously which cautiously\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.YEAR,\n                is_recurring=False,\n                is_archived=True,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": 7184.85,\n                },\n                prices=[],\n                benefits=[],\n                medias=[],\n                attached_custom_fields=[],\n            ),\n            discount=polar_sdk.DiscountPercentageOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                basis_points=784251,\n                created_at=parse_datetime(\"2025-10-28T15:34:36.012Z\"),\n                modified_at=parse_datetime(\"2024-10-10T17:21:09.309Z\"),\n                id=\"<value>\",\n                metadata={\n\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2023-03-14T14:26:18.378Z\"),\n                ends_at=parse_datetime(\"2023-02-06T08:50:56.809Z\"),\n                max_redemptions=897788,\n                redemptions_count=877303,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            prices=[],\n            meters=[\n                polar_sdk.SubscriptionMeter(\n                    created_at=parse_datetime(\"2025-09-05T16:45:03.444Z\"),\n                    modified_at=parse_datetime(\"2025-01-22T02:13:03.697Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n\n                        },\n                        created_at=parse_datetime(\"2024-02-18T16:04:27.179Z\"),\n                        modified_at=parse_datetime(\"2023-02-18T11:12:06.291Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.OR,\n                            clauses=[],\n                        ),\n                        aggregation=polar_sdk.UniqueAggregation(\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_revoked_post(request=polar_sdk.WebhookSubscriptionRevokedPayload(\n        data=polar_sdk.Subscription(\n            created_at=parse_datetime(\"2024-01-02T06:40:50.860Z\"),\n            modified_at=None,\n            id=\"<value>\",\n            amount=357630,\n            currency=\"Fiji Dollar\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.DAY,\n            status=polar_sdk.SubscriptionStatus.CANCELED,\n            current_period_start=parse_datetime(\"2024-04-30T10:39:59.432Z\"),\n            current_period_end=parse_datetime(\"2025-03-19T11:29:47.842Z\"),\n            cancel_at_period_end=True,\n            canceled_at=parse_datetime(\"2023-02-17T04:59:11.584Z\"),\n            started_at=parse_datetime(\"2024-02-14T23:20:57.498Z\"),\n            ends_at=parse_datetime(\"2025-04-28T23:19:31.379Z\"),\n            ended_at=parse_datetime(\"2023-04-29T06:37:50.213Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.CUSTOMER_SERVICE,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2023-11-24T13:14:03.962Z\"),\n                modified_at=parse_datetime(\"2025-03-17T11:47:03.932Z\"),\n                metadata={\n                    \"key\": False,\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2023-10-16T13:32:15.169Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            product=polar_sdk.Product(\n                created_at=parse_datetime(\"2025-01-19T04:39:36.127Z\"),\n                modified_at=parse_datetime(\"2023-07-14T08:43:45.509Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"longingly apparatus since acidly anti canter dimly fatherly as\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.WEEK,\n                is_recurring=True,\n                is_archived=False,\n                organization_id=\"<value>\",\n                metadata={\n\n                },\n                prices=[],\n                benefits=[],\n                medias=[],\n                attached_custom_fields=[],\n            ),\n            discount=None,\n            prices=[\n                polar_sdk.LegacyRecurringProductPriceFixed(\n                    created_at=parse_datetime(\"2025-11-28T05:50:39.876Z\"),\n                    modified_at=parse_datetime(\"2023-01-18T23:12:00.000Z\"),\n                    id=\"<value>\",\n                    is_archived=True,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.WEEK,\n                    price_currency=\"<value>\",\n                    price_amount=60934,\n                ),\n            ],\n            meters=[\n                polar_sdk.SubscriptionMeter(\n                    created_at=parse_datetime(\"2023-01-12T15:01:17.401Z\"),\n                    modified_at=parse_datetime(\"2024-03-19T23:35:08.612Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n                            \"key\": 463129,\n                        },\n                        created_at=parse_datetime(\"2023-11-24T08:24:04.782Z\"),\n                        modified_at=parse_datetime(\"2025-06-04T07:43:03.654Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.AND,\n                            clauses=[\n                                polar_sdk.FilterClause(\n                                    property=\"<value>\",\n                                    operator=polar_sdk.FilterOperator.GTE,\n                                    value=True,\n                                ),\n                            ],\n                        ),\n                        aggregation=polar_sdk.UniqueAggregation(\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.uncanceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_uncanceled_post(request=polar_sdk.WebhookSubscriptionUncanceledPayload(\n        data=polar_sdk.Subscription(\n            created_at=parse_datetime(\"2023-02-06T17:25:10.106Z\"),\n            modified_at=parse_datetime(\"2023-01-25T07:20:02.381Z\"),\n            id=\"<value>\",\n            amount=755736,\n            currency=\"Iceland Krona\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.DAY,\n            status=polar_sdk.SubscriptionStatus.CANCELED,\n            current_period_start=parse_datetime(\"2024-04-11T19:08:16.655Z\"),\n            current_period_end=parse_datetime(\"2023-08-23T01:03:59.107Z\"),\n            cancel_at_period_end=True,\n            canceled_at=parse_datetime(\"2024-11-16T02:01:16.824Z\"),\n            started_at=None,\n            ends_at=parse_datetime(\"2023-12-23T04:50:00.016Z\"),\n            ended_at=parse_datetime(\"2024-10-18T16:25:47.209Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=None,\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.LOW_QUALITY,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2025-10-01T20:42:25.530Z\"),\n                modified_at=parse_datetime(\"2024-07-04T17:30:56.477Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2024-12-20T09:31:52.259Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            product=polar_sdk.Product(\n                created_at=parse_datetime(\"2024-03-26T06:19:23.237Z\"),\n                modified_at=parse_datetime(\"2024-05-11T18:08:21.251Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"questioningly proliferate yet vanish mooch yowza hopeful\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.WEEK,\n                is_recurring=True,\n                is_archived=True,\n                organization_id=\"<value>\",\n                metadata={\n\n                },\n                prices=[],\n                benefits=[],\n                medias=[\n                    polar_sdk.ProductMediaFileRead(\n                        id=\"<value>\",\n                        organization_id=\"<value>\",\n                        name=\"<value>\",\n                        path=\"/usr/local/src\",\n                        mime_type=\"<value>\",\n                        size=930595,\n                        storage_version=\"<value>\",\n                        checksum_etag=\"<value>\",\n                        checksum_sha256_base64=\"<value>\",\n                        checksum_sha256_hex=\"<value>\",\n                        last_modified_at=parse_datetime(\"2024-07-09T11:35:46.121Z\"),\n                        version=\"<value>\",\n                        is_uploaded=False,\n                        created_at=parse_datetime(\"2023-01-04T05:09:14.269Z\"),\n                        size_readable=\"<value>\",\n                        public_url=\"https://distant-fen.org/\",\n                    ),\n                ],\n                attached_custom_fields=[],\n            ),\n            discount=polar_sdk.DiscountFixedOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                amount=930,\n                currency=\"Armenian Dram\",\n                created_at=parse_datetime(\"2024-08-04T07:10:18.397Z\"),\n                modified_at=parse_datetime(\"2024-03-24T21:29:58.344Z\"),\n                id=\"<value>\",\n                metadata={\n\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2025-01-07T18:49:53.331Z\"),\n                ends_at=parse_datetime(\"2023-11-21T17:11:26.125Z\"),\n                max_redemptions=None,\n                redemptions_count=198129,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            prices=[\n                polar_sdk.LegacyRecurringProductPriceFixed(\n                    created_at=parse_datetime(\"2024-08-25T04:34:39.417Z\"),\n                    modified_at=parse_datetime(\"2024-09-10T10:32:32.710Z\"),\n                    id=\"<value>\",\n                    is_archived=False,\n                    product_id=\"<value>\",\n                    recurring_interval=polar_sdk.SubscriptionRecurringInterval.DAY,\n                    price_currency=\"<value>\",\n                    price_amount=456635,\n                ),\n            ],\n            meters=[],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
  - target: $["paths"]["subscription.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "python"
          "label": "Python (SDK)"
          "source": "import polar_sdk\nfrom polar_sdk import Polar\nfrom polar_sdk.utils import parse_datetime\n\n\nwith Polar() as polar:\n\n    res = polar.endpointsubscription_updated_post(request=polar_sdk.WebhookSubscriptionUpdatedPayload(\n        data=polar_sdk.Subscription(\n            created_at=parse_datetime(\"2023-06-24T13:26:25.969Z\"),\n            modified_at=parse_datetime(\"2024-10-16T16:24:20.274Z\"),\n            id=\"<value>\",\n            amount=505562,\n            currency=\"Guyana Dollar\",\n            recurring_interval=polar_sdk.SubscriptionRecurringInterval.WEEK,\n            status=polar_sdk.SubscriptionStatus.CANCELED,\n            current_period_start=parse_datetime(\"2024-06-19T12:29:28.503Z\"),\n            current_period_end=parse_datetime(\"2023-08-24T22:14:10.131Z\"),\n            cancel_at_period_end=False,\n            canceled_at=parse_datetime(\"2025-08-31T06:08:08.476Z\"),\n            started_at=parse_datetime(\"2023-06-01T08:01:27.951Z\"),\n            ends_at=parse_datetime(\"2025-01-23T22:07:32.693Z\"),\n            ended_at=parse_datetime(\"2025-05-14T13:55:44.367Z\"),\n            customer_id=\"<value>\",\n            product_id=\"<value>\",\n            discount_id=\"<value>\",\n            checkout_id=\"<value>\",\n            customer_cancellation_reason=polar_sdk.CustomerCancellationReason.LOW_QUALITY,\n            customer_cancellation_comment=\"<value>\",\n            metadata={\n                \"key\": 477870,\n            },\n            customer=polar_sdk.SubscriptionCustomer(\n                id=\"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n                created_at=parse_datetime(\"2025-10-16T06:48:13.474Z\"),\n                modified_at=parse_datetime(\"2024-02-26T04:35:08.698Z\"),\n                metadata={\n\n                },\n                external_id=\"usr_1337\",\n                email=\"customer@example.com\",\n                email_verified=True,\n                name=\"John Doe\",\n                billing_address=polar_sdk.Address(\n                    country=\"US\",\n                ),\n                tax_id=[\n                    \"911144442\",\n                    \"us_ein\",\n                ],\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n                deleted_at=parse_datetime(\"2024-01-24T02:08:13.039Z\"),\n                avatar_url=\"https://www.gravatar.com/avatar/xxx?d=404\",\n            ),\n            product=polar_sdk.Product(\n                created_at=parse_datetime(\"2024-07-19T12:18:25.544Z\"),\n                modified_at=parse_datetime(\"2023-05-10T07:26:17.258Z\"),\n                id=\"<value>\",\n                name=\"<value>\",\n                description=\"fooey disbar athwart permafrost happy sun successfully steak ew\",\n                recurring_interval=polar_sdk.SubscriptionRecurringInterval.DAY,\n                is_recurring=True,\n                is_archived=True,\n                organization_id=\"<value>\",\n                metadata={\n                    \"key\": 2229.58,\n                },\n                prices=[\n                    polar_sdk.LegacyRecurringProductPriceCustom(\n                        created_at=parse_datetime(\"2024-10-24T03:47:20.035Z\"),\n                        modified_at=parse_datetime(\"2023-07-28T10:52:24.280Z\"),\n                        id=\"<value>\",\n                        is_archived=True,\n                        product_id=\"<value>\",\n                        recurring_interval=polar_sdk.SubscriptionRecurringInterval.WEEK,\n                        price_currency=\"<value>\",\n                        minimum_amount=588876,\n                        maximum_amount=280866,\n                        preset_amount=942797,\n                    ),\n                ],\n                benefits=[],\n                medias=[],\n                attached_custom_fields=[],\n            ),\n            discount=polar_sdk.DiscountFixedOnceForeverDurationBase(\n                duration=polar_sdk.DiscountDuration.ONCE,\n                type=polar_sdk.DiscountType.PERCENTAGE,\n                amount=960746,\n                currency=\"Tunisian Dinar\",\n                created_at=parse_datetime(\"2024-05-31T09:53:13.946Z\"),\n                modified_at=parse_datetime(\"2025-09-04T19:30:54.013Z\"),\n                id=\"<value>\",\n                metadata={\n\n                },\n                name=\"<value>\",\n                code=\"<value>\",\n                starts_at=parse_datetime(\"2023-06-09T06:11:59.062Z\"),\n                ends_at=parse_datetime(\"2024-09-28T05:16:48.757Z\"),\n                max_redemptions=359864,\n                redemptions_count=962223,\n                organization_id=\"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            ),\n            prices=[],\n            meters=[\n                polar_sdk.SubscriptionMeter(\n                    created_at=parse_datetime(\"2024-02-19T12:40:10.475Z\"),\n                    modified_at=parse_datetime(\"2023-04-12T20:54:06.410Z\"),\n                    id=\"<value>\",\n                    consumed_units=25,\n                    credited_units=100,\n                    amount=0,\n                    meter_id=\"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n                    meter=polar_sdk.Meter(\n                        metadata={\n                            \"key\": 2623.94,\n                        },\n                        created_at=parse_datetime(\"2025-07-23T17:13:45.998Z\"),\n                        modified_at=parse_datetime(\"2023-02-28T06:14:05.829Z\"),\n                        id=\"<value>\",\n                        name=\"<value>\",\n                        filter_=polar_sdk.Filter(\n                            conjunction=polar_sdk.FilterConjunction.OR,\n                            clauses=[\n                                polar_sdk.FilterClause(\n                                    property=\"<value>\",\n                                    operator=polar_sdk.FilterOperator.GT,\n                                    value=True,\n                                ),\n                            ],\n                        ),\n                        aggregation=polar_sdk.PropertyAggregation(\n                            func=polar_sdk.Func.AVG,\n                            property=\"<value>\",\n                        ),\n                        organization_id=\"<value>\",\n                    ),\n                ),\n            ],\n        ),\n    ))\n\n    # Handle response\n    print(res)"
