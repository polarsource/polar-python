"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .benefit import Benefit, BenefitTypedDict
from enum import Enum
from polar_sdk.types import BaseModel
from polar_sdk.utils import validate_const
import pydantic
from pydantic.functional_validators import AfterValidator
from typing_extensions import Annotated, TypedDict


class WebhookBenefitCreatedPayloadType(str, Enum):
    BENEFIT_CREATED = "benefit.created"


class WebhookBenefitCreatedPayloadTypedDict(TypedDict):
    r"""Sent when a new benefit is created.

    **Discord & Slack support:** Basic
    """

    data: BenefitTypedDict
    type: WebhookBenefitCreatedPayloadType


class WebhookBenefitCreatedPayload(BaseModel):
    r"""Sent when a new benefit is created.

    **Discord & Slack support:** Basic
    """

    data: Benefit

    TYPE: Annotated[
        Annotated[
            WebhookBenefitCreatedPayloadType,
            AfterValidator(
                validate_const(WebhookBenefitCreatedPayloadType.BENEFIT_CREATED)
            ),
        ],
        pydantic.Field(alias="type"),
    ] = WebhookBenefitCreatedPayloadType.BENEFIT_CREATED
