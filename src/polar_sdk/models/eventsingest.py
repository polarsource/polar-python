"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .eventcreatecustomer import EventCreateCustomer, EventCreateCustomerTypedDict
from .eventcreateexternalcustomer import (
    EventCreateExternalCustomer,
    EventCreateExternalCustomerTypedDict,
)
from polar_sdk.types import BaseModel
from typing import List, Union
from typing_extensions import TypeAliasType, TypedDict


EventsModelTypedDict = TypeAliasType(
    "EventsModelTypedDict",
    Union[EventCreateCustomerTypedDict, EventCreateExternalCustomerTypedDict],
)


EventsModel = TypeAliasType(
    "EventsModel", Union[EventCreateCustomer, EventCreateExternalCustomer]
)


class EventsIngestTypedDict(TypedDict):
    events: List[EventsModelTypedDict]
    r"""List of events to ingest."""


class EventsIngest(BaseModel):
    events: List[EventsModel]
    r"""List of events to ingest."""
