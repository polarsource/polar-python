"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .legacyrecurringproductpricecustom_output import (
    LegacyRecurringProductPriceCustomOutput,
    LegacyRecurringProductPriceCustomOutputTypedDict,
)
from .legacyrecurringproductpricefixed_output import (
    LegacyRecurringProductPriceFixedOutput,
    LegacyRecurringProductPriceFixedOutputTypedDict,
)
from .legacyrecurringproductpricefree_output import (
    LegacyRecurringProductPriceFreeOutput,
    LegacyRecurringProductPriceFreeOutputTypedDict,
)
from polar_sdk.utils import get_discriminator
from pydantic import Discriminator, Tag
from typing import Union
from typing_extensions import Annotated, TypeAliasType


LegacyRecurringProductPriceOutputTypedDict = TypeAliasType(
    "LegacyRecurringProductPriceOutputTypedDict",
    Union[
        LegacyRecurringProductPriceFreeOutputTypedDict,
        LegacyRecurringProductPriceFixedOutputTypedDict,
        LegacyRecurringProductPriceCustomOutputTypedDict,
    ],
)


LegacyRecurringProductPriceOutput = Annotated[
    Union[
        Annotated[LegacyRecurringProductPriceCustomOutput, Tag("custom")],
        Annotated[LegacyRecurringProductPriceFixedOutput, Tag("fixed")],
        Annotated[LegacyRecurringProductPriceFreeOutput, Tag("free")],
    ],
    Discriminator(lambda m: get_discriminator(m, "amount_type", "amount_type")),
]
