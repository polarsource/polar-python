"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from polar_sdk.types import BaseModel
import pydantic
from typing import Final, TypedDict
from typing_extensions import Annotated


class ProductPriceOneTimeFreeCreateType(str, Enum):
    ONE_TIME = "one_time"


class ProductPriceOneTimeFreeCreateAmountType(str, Enum):
    FREE = "free"


class ProductPriceOneTimeFreeCreateTypedDict(TypedDict):
    r"""Schema to create a free one-time product price."""

    type: ProductPriceOneTimeFreeCreateType
    amount_type: ProductPriceOneTimeFreeCreateAmountType


class ProductPriceOneTimeFreeCreate(BaseModel):
    r"""Schema to create a free one-time product price."""

    # fmt: off
    TYPE: Annotated[Final[ProductPriceOneTimeFreeCreateType], pydantic.Field(alias="type")] = ProductPriceOneTimeFreeCreateType.ONE_TIME # type: ignore
    # fmt: on

    # fmt: off
    AMOUNT_TYPE: Annotated[Final[ProductPriceOneTimeFreeCreateAmountType], pydantic.Field(alias="amount_type")] = ProductPriceOneTimeFreeCreateAmountType.FREE # type: ignore
    # fmt: on
