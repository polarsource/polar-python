"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .subscriptionrecurringinterval import SubscriptionRecurringInterval
from polar_sdk.types import BaseModel
from polar_sdk.utils import validate_const
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import Literal
from typing_extensions import Annotated, TypedDict


class ProductPriceRecurringFreeCreateTypedDict(TypedDict):
    r"""Schema to create a free recurring product price, i.e. a subscription."""

    recurring_interval: SubscriptionRecurringInterval
    type: Literal["recurring"]
    amount_type: Literal["free"]


class ProductPriceRecurringFreeCreate(BaseModel):
    r"""Schema to create a free recurring product price, i.e. a subscription."""

    recurring_interval: SubscriptionRecurringInterval

    TYPE: Annotated[
        Annotated[Literal["recurring"], AfterValidator(validate_const("recurring"))],
        pydantic.Field(alias="type"),
    ] = "recurring"

    AMOUNT_TYPE: Annotated[
        Annotated[Literal["free"], AfterValidator(validate_const("free"))],
        pydantic.Field(alias="amount_type"),
    ] = "free"
