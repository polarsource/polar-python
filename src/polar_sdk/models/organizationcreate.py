"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .organizationfeaturesettings import (
    OrganizationFeatureSettings,
    OrganizationFeatureSettingsTypedDict,
)
from polar_sdk.types import BaseModel, Nullable, OptionalNullable, UNSET, UNSET_SENTINEL
from pydantic import model_serializer
from typing import Optional
from typing_extensions import NotRequired, TypedDict


class OrganizationCreateTypedDict(TypedDict):
    name: str
    slug: str
    avatar_url: NotRequired[Nullable[str]]
    donations_enabled: NotRequired[bool]
    feature_settings: NotRequired[Nullable[OrganizationFeatureSettingsTypedDict]]


class OrganizationCreate(BaseModel):
    name: str

    slug: str

    avatar_url: OptionalNullable[str] = UNSET

    donations_enabled: Optional[bool] = False

    feature_settings: OptionalNullable[OrganizationFeatureSettings] = UNSET

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = ["avatar_url", "donations_enabled", "feature_settings"]
        nullable_fields = ["avatar_url", "feature_settings"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in self.model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
